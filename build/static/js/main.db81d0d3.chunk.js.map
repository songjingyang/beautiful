{"version":3,"sources":["serviceWorker.ts","common/urlMaps.ts","common/request.ts","models/User.ts","models/Global.ts","models/Resource.ts","models/System.ts","models/Tourism.ts","models/Tag.ts","models/Strategy.ts","models/Advertisement.ts","models/Comment.ts","models/Answer.ts","models/Broadcast.ts","models/Travels.ts","models/Orders.ts","models/UserAdmin.ts","models/index.ts","layouts/GlobalFooter/index.tsx","layouts/GlobalHeader/index.tsx","layouts/GlobalSider/index.tsx","layouts/BasicLayout.tsx","layouts/UserLayout.tsx","modules/User/Login.tsx","modules/System/CreatePrivilege.tsx","modules/System/PrivilegeManagement.tsx","modules/System/CreateSupply.tsx","modules/System/SupplierManagement.tsx","modules/Resource/CreateScenicSpot.tsx","modules/Resource/ScenicSpot.tsx","modules/Resource/CreateHotel.tsx","modules/Resource/Hotel.tsx","modules/Resource/CreateRestaurant.tsx","modules/Resource/Restaurant.tsx","modules/Resource/CreateTripMode.tsx","modules/Resource/TripMode.tsx","components/PreviewImg/index.tsx","components/Upload/index.tsx","modules/Resource/CreatePicture.tsx","modules/Resource/Picture.tsx","modules/Resource/CreateVideo.tsx","modules/Resource/Video.tsx","modules/Resource/CreateBasicProducts.tsx","modules/Resource/CheckItinerary.tsx","modules/Resource/BasicProducts.tsx","modules/Tourism/SetPrice.tsx","components/Picture/index.tsx","modules/Tourism/CreateTourism.tsx","modules/Tourism/CalendarPrice.tsx","modules/Tourism/CreatePicture.tsx","modules/Tourism/Tourism.tsx","modules/Admin/CreateTag.tsx","modules/Admin/TagPage.tsx","utils/utils.tsx","modules/Admin/CreateAdvert.tsx","modules/Admin/AdvertisementPage.tsx","components/Relation/index.tsx","modules/PictureStrategy/CreatePicture.tsx","modules/PictureStrategy/ShowPicture.tsx","modules/PictureStrategy/PictureStrategy.tsx","modules/VideoStrategy/CreateVideo.tsx","modules/VideoStrategy/VideoStrategy.tsx","modules/Comment/CommentPage.tsx","modules/CityStrategy/Products.tsx","components/DragSorting/index.js","modules/CityStrategy/CreateCityStrategy.tsx","modules/CityStrategy/Comment.tsx","modules/CityStrategy/CityStrategy.tsx","modules/Answer/UserAnswer.tsx","modules/Answer/AnswerPage.tsx","modules/Admin/CreateBroadcast.tsx","modules/Admin/BroadcastPage.tsx","modules/Journey/Comment.tsx","modules/Journey/Products.tsx","modules/Journey/CreatePicture.tsx","modules/Journey/AllowPass.tsx","modules/Journey/RelationJourney.tsx","modules/Journey/Journey.tsx","modules/Order/SearchOrder.tsx","modules/Order/AfterSales.tsx","modules/Order/Order.tsx","modules/UserList/index.tsx","common/router.ts","layouts/Layout.tsx","App.tsx","index.tsx","layouts/GlobalHeader/index.less","layouts/GlobalSider/index.less","layouts/UserLayout.less"],"names":["__webpack_require__","d","__webpack_exports__","unregister","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","baseUrl","urlMaps","getPolicy","login","logout","getCode","getCityList","getMenuInfo","getScenicSpotPage","CreateScenicSpot","getScenicSpotSingle","DeleteScenic","baseHotelUrl","HotelUrl","baseRestaurantUrl","RestaurantUrl","baseTripModeUrl","TripModeUrl","basePictureUrl","PictureUrl","baseVideoUrl","VideoUrl","baseBasicProductsUrl","BasicProductsUrl","baseTouris","baseTourisUrl","EditTourRecommoned","baseTag","baseTagUrl","editTag","baseRoleUrl","baseOwnPicture","deleteImg","baseRecommend","baseUp","baseCalendarPrice","basePictuerStrategy","PictuerStrategyUrl","getPictureCity","baseAdvertisement","AdvertisementUrl","baseComment","baseCommentUrl","baseVideoStrategy","VideoStrategyUrl","baseCityStraegyPage","CityStraegyUrl","baseAnswer","baseAnswerUrl","userAnswer","baseBroadcast","BroadcastUrl","baseRelation","videoUp","imageUp","CityRecommend","CityState","EditProducts","baseUserAnswer","upOrDown","editState","travelsPage","baseTravels","travelsUpOrDown","travelsPass","travelsCommend","getOrderPage","getSearchOrder","getAfterSales","getUserList","EnableShutdown","request","_x","_x2","_request","apply","this","arguments","_callee","url","data","options","newOptions","user","_args","regenerator_default","a","wrap","_context","prev","next","length","undefined","method","originUrl","Object","objectSpread","JSON","parse","localStorage","getItem","headers","Authorization","accessToken","FormData","Accept","Content-Type","console","log","stringify","params","abrupt","axios","response","code","href","generatePath","removeItem","notification","error","message","concat","status","description","msg","ts","timeDiff","Date","getTime","loading","res","catch","e","stop","urlencode","require","User","_class","classCallCheck","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","createClass","key","value","_login","asyncToGenerator","mark","_ref","callback","_data","user_cloud","password","randomStr","username","sent","userInfo","setItem","_logout","_callee2","_ref2","_context2","_editPass","_callee3","_ref3","_data2","_context3","editPass","editInfo","_x3","_forgetPass","_callee4","_ref4","_context4","forgetPass","forgetPassInfo","_x4","_sendPhoneCode","_callee5","_ref5","_context5","sendCode","codeBack","_x5","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","access_token","dept_id","expires_in","license","refresh_token","scope","token_type","user_id","action","getOwnPropertyDescriptor","Global","Global_class","Global_descriptor","Global_descriptor2","Global_descriptor3","Global_descriptor4","_descriptor5","_descriptor6","_descriptor7","_getRelationPage","relationPage","_getMenuData","menuInfo","_getCityList","cityList","_getPictureCity","pictureCity","_getPolicy","policy","_getVideoStyle","_callee6","_ref6","type","_context6","split","replace","x-oss-process","videoStyle","_x6","_EditProducts","_callee7","_ref7","_context7","products","_x7","FileSize","Format","ImageHeight","ImageWidth","ResolutionUnit","XResolution","YResolution","records","pages","searchCount","size","total","current","authority","children","component","icon","id","keepAlive","label","name","parentId","path","redirect","sort","spread","accessKeyId","signature","dir","host","Resource","Resource_class","Resource_descriptor","Resource_descriptor2","Resource_descriptor3","Resource_descriptor4","Resource_descriptor5","Resource_descriptor6","Resource_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_getScenicSpot","scenicPage","_getHotelPage","hotelPage","_getRestaurantPage","restaurantPage","_getTripModePage","tripModePage","_getPicturePage","picturePage","_getVideoPage","videoPage","_getBasicProductsPage","basicProductsPage","_CreateScenicSpot","_callee8","_ref8","_context8","scenicCreate","_x8","_CreateHotel","_callee9","_ref9","_context9","hotelCreate","_x9","_CreateRestaurant","_callee10","_ref10","_context10","restaurantCreate","_x10","_CreateTripMode","_callee11","_ref11","_context11","tripModeCreate","_x11","_CreatePicture","_callee12","_ref12","_context12","pictureCreate","_x12","_CreateVideo","_callee13","_ref13","_context13","videoCreate","_x13","_CreateBasicProducts","_callee14","_ref14","_context14","basicProductsCreate","_x14","_EditScenicSpot","_callee15","_ref15","_context15","_x15","_EditHotel","_callee16","_ref16","_context16","_x16","_EditRestaurant","_callee17","_ref17","_context17","_x17","_EditTripMode","_callee18","_ref18","_context18","_x18","_EditPicture","_callee19","_ref19","_context19","_x19","_EditVideo","_callee20","_ref20","_context20","_x20","_EditBasicProducts","_callee21","_ref21","_context21","_x21","_getScenicSpotSingle","_callee22","_ref22","_context22","scenicCreateSingle","_x22","_getHotelSingle","_callee23","_ref23","_context23","hotelSingle","_x23","_getRestaurantSingle","_callee24","_ref24","_context24","restaurantSingle","_x24","_getTripModeSingle","_callee25","_ref25","_context25","tripModeSingle","_x25","_getPictureSingle","_callee26","_ref26","_context26","pictureSingle","_x26","_getVideoSingle","_callee27","_ref27","_context27","videoSingle","_x27","_getProductSingle","_callee28","_ref28","_context28","productSingle","_x28","_DeleteScenic","_callee29","_ref29","_context29","scenicDelete","_x29","_DeleteHotel","_callee30","_ref30","_context30","hotelDelete","_x30","_DeleteRestaurant","_callee31","_ref31","_context31","restaurantDelete","_x31","_DeleteTripMode","_callee32","_ref32","_context32","tripModeDelete","_x32","_DeletePicture","_callee33","_ref33","_context33","pictureDelete","_x33","_DeleteVideo","_callee34","_ref34","_context34","videoDelete","_x34","_DeleteBasicProducts","_callee35","_ref35","_context35","basicProductsDelete","_x35","city","introduce","createTime","userId","convenient","address","telephone","traffic","star","tirpMode","subordinate","start","end","number","startHour","startMin","transfer","itemId","wide","high","urls","duration","copywriting","days","brightSpot","pdfUrl","state","baseProductDaysList","System","System_class","System_descriptor","_getPrevilePage","previlePage","Tourisms","Tourism_class","Tourism_descriptor","Tourism_descriptor2","Tourism_descriptor3","Tourism_descriptor4","Tourism_descriptor5","Tourism_descriptor6","Tourism_descriptor7","Tourism_descriptor8","Tourism_descriptor9","Tourism_descriptor10","Tourism_descriptor11","Tourism_descriptor12","Tourism_descriptor13","_getTourismPage","tourismPage","_getOwnPictures","ownPicturePage","_getCalendarPrice","calendarPrice","_CreateTourism","tourismCreate","_EditRecommend","recommend","_EditUpDown","upDown","_EditTourism","_DeleteTourism","tourismDelete","_DeleteImage","imageDelete","_getTourismSingle","_this","tourismSingle","bmTourProductDaysList","period","forEach","num","target","find","item","moment","day","push","get","filter","title","baseProductId","holiday","weekend","startTime","endTime","coverUrl","tagId","bmMaterialList","howDays","_this2","content","typeCycle","periodCycle","dataPicker","valueOf","price","childrenPrice","babyPrice","_this3","Tag","Tag_class","Tag_descriptor","Tag_descriptor2","Tag_descriptor3","Tag_descriptor4","Tag_descriptor5","_getTagPage","tagPage","_DeleteTag","_CreateTag","CreateTag","toString","createTag","_EditTag","_getTagSingle","tagSingle","_EditState","stateTag","subtitle","Strategy","Strategy_class","Strategy_descriptor","Strategy_descriptor2","Strategy_descriptor3","Strategy_descriptor4","Strategy_descriptor5","Strategy_descriptor6","Strategy_descriptor7","Strategy_descriptor8","Strategy_descriptor9","Strategy_descriptor10","Strategy_descriptor11","Strategy_descriptor12","Strategy_descriptor13","Strategy_descriptor14","Strategy_descriptor15","Strategy_descriptor16","Strategy_descriptor17","Strategy_descriptor18","_getPictureStrategyPage","pictureStraegyPage","_getVideoStrategyPage","videoStraegyPage","_getCityStrategyPage","cityStraegyPage","_DeletePictureStrategyPage","_DeleteVideoStrategyPage","_CreatePictureStraegy","CreatePictureStraegy","createPictureStraegy","_EditPictureStraegy","_CreateVideoStraegy","CreateVideoStraegy","createVideoStraegy","_AddCityStraegy","createCityStraegy","_EditCityStraegy","_EditVideoStraegy","_SetRecommend","cityRecommend","_SetCityState","cityState","_EditVideoUpOrDown","upDownVideoStraegy","_EditImageUpOrDown","upDownImageStraegy","_getCitySingle","citySingle","selectedRow","composeCount","imgUrl","information","strategyCityIntroduceList","selectInfo","Advertisement","Advertisement_class","Advertisement_descriptor","Advertisement_descriptor2","Advertisement_descriptor3","Advertisement_descriptor4","_getAdvertisementPage","advertisementPage","_DeleteAdvertisement","advertisementDelete","_CreateAdvert","createAdvertisement","_EditAdvert","_getAdvertisementSingle","advertisementSingle","position","jump","jumpUrl","tourTagId","cityId","Comment","Comment_class","Comment_descriptor","Comment_descriptor2","_getCommentPage","commentPage","_DeleteComment","Answer","Answer_class","Answer_descriptor","Answer_descriptor2","Answer_descriptor3","Answer_descriptor4","Answer_descriptor5","Answer_descriptor6","_getAnswerPage","answerPage","_getUserAnswer","_getUserAnswerPage","userAnswerPage","_DeleteUserAnswer","userAnswerDelete","_EnableShutDown","answerShelf","_EnableState","answerState","Broadcast","Broadcast_class","Broadcast_descriptor","Broadcast_descriptor2","Broadcast_descriptor3","Broadcast_descriptor4","_getBroadcastPage","broadcastPage","_DeleteCast","castDelete","_CreateBroadcast","CreateBroadcast","createBroadcast","_EditBroadcast","_getBroadcastSingle","broadcastSingle","Travels","Travels_class","Travels_descriptor","Travels_descriptor2","Travels_descriptor3","Travels_descriptor4","Travels_descriptor5","_getTravelsPage","_getTravelsSingle","travelsSingle","_EditTravelsState","travelsState","_EditTravelsupOrDown","travelsupOrDown","_EditTravelstravelsCommend","travelstravelsCommend","headUrl","nickName","shelf","materialType","materialCount","productCount","userMaterialList","Orders","Orders_class","Orders_descriptor","Orders_descriptor2","Orders_descriptor3","_getOrderPage","orderPage","_getSearchOrder","searchOrder","_getAfterSales","afterSales","runningNumber","reason","phone","goodsId","subClass","img","businessId","shoppingOrderId","shoppingOrderDetails","shoppingParticipants","userContacts","UserAdmin","UserAdmin_class","UserAdmin_descriptor","UserAdmin_descriptor2","_getUserList","userList","_EnableShutdown","models","global","resource","system","tourisms","tag","strategy","advertisement","comment","answer","broadcast","travels","orders","userAdmin","Text","Typography","GlobalFooter","props","possibleConstructorReturn","getPrototypeOf","call","react_default","createElement","style","textAlign","React","Component","GlobalHeader","inject","observer","onMenuClick","currentUser","menu","es_menu","className","selectedKeys","onClick","Item","disabled","Divider","dropdown","overlay","theme","spin","marginLeft","SubMenu","Menu","Sider","Layout","GlobalSider","pathName","pathname","store","getMenuData","collapsed","menuData","trigger","overflow","height","left","collapsible","breakpoint","mode","defaultSelectedKeys","defaultOpenKeys","inlineCollapsed","map","subItem","Link","to","query","screen-xs","maxWidth","screen-sm","minWidth","screen-md","screen-lg","screen-xl","screen-xxl","enquireScreen","b","BasicLayout","toggle","setState","isMobile","layout","es_layout","src_layouts_GlobalSider","Header","background","padding","GlobalHeader_GlobalHeader","Content","Switch","Footer","GlobalFooter_GlobalFooter","react_document_title_default","lib","classnames","UserLayout","getPageTitle","getClassName_default","_styleModuleImportMap","PureComponent","FormItem","Form","Login","handleSubmit","preventDefault","form","validateFields","err","values","grant_type","history","changeCode","handleChange","setTimeout","getFieldDecorator","es_form","onSubmit","row","gutter","xs","sm","md","col","xl","initialValue","rules","required","input","prefix","color","placeholder","readOnly","onFocus","Password","src","width","alt","es_button","htmlType","create","TreeNode","DatePicker","RangePicker","Select","Option","Radio","Button","Input","TextArea","Group","Upload","Dragger","Tree","treeData","CreatePrivilege","onExpand","expandedKeys","autoExpandParent","onCheck","checkedKeys","onSelect","info","renderTreeNodes","dataRef","assign","fileList","isEdit","formItemLayout","labelCol","span","wrapperCol","protocol","document","domain","port","card","bordered","CreatePrivilege_FormItem","whitespace","tree","checkable","offset","PrivilegeManagement","getPrivilegePage","payload","page_size","timeRange","start_at","parseInt","end_at","getPrevilePage","record","isCreatePrivilege","bool","visible","currItem","PropsInfo","handleTableChange","pagination","filtersArg","sorter","pager","scroll","pageSize","columns","dataIndex","render","text","es_modal","onCancel","footer","System_CreatePrivilege","back_top","marginBottom","table","rowKey","dataSource","showQuickJumper","onChange","CreateSupply","CreateSupply_FormItem","es_select","defaultValue","CreateSupply_Option","SupplierManagement","popconfirm","okText","cancelText","onConfirm","System_CreateSupply","hideOnSinglePage","EditScenicSpot","toHTML","success","onClose","setFieldsValue","BraftEditor","createEditorState","CityList","singleInfo","CreateScenicSpot_FormItem","index","CreateScenicSpot_Option","dist_default","excludeControls","ScenicSpot","getScenicSpot","DeleteSingle","dangerouslySetInnerHTML","__html","Resource_CreateScenicSpot","lg","marginTop","ScenicSpot_FormItem","ScenicSpot_Option","CreateHotel","EditHotel","getHotelSingle","CreateHotel_FormItem","CreateHotel_Option","CreateHotel_TextArea","autoSize","minRows","Hotel","getHotelPage","DeleteHotel","isCreateHotel","Resource_CreateHotel","Hotel_FormItem","Hotel_Option","CreateRestaurant","EditRestaurant","getRestaurantSingle","CreateRestaurant_FormItem","CreateRestaurant_Option","CreateRestaurant_TextArea","Restaurant","getRestaurantPage","DeleteRestaurant","isCreateRestaurant","Resource_CreateRestaurant","Restaurant_FormItem","Restaurant_Option","CreateTripMode","EditTripMode","getTripModeSingle","CreateTripMode_FormItem","CreateTripMode_Option","TripMode","getTripModePage","DeleteTripMode","isCreateTripMode","trip_mode","1","2","3","Resource_CreateTripMode","TripMode_FormItem","PreviewImg","Props","styleType","_useState","useState","_useState2","slicedToArray","Visible","setVisible","useEffect","maskClosable","OssUpload","previewImage","previewVisible","OSSData","file","uid","lastModified","lastModifiedDate","percent","originFileObj","filename","mimeType","xhr","toConsumableArray","uploadNumber","slice","Number","isChange","getVideoStyle","infoStyle","transformFile","suffix","lastIndexOf","now","getExtraData","OSSAccessKeyId","Signature","removeListItem","handleCancel","beforeUpload","isPass","handlePreview","nextProps","preState","multiple","onPreview","onRemove","upload","showUploadList","controls","CreatePicture","getCity","getHotel","handleChangeType","handleChangeCity","getFieldValue","newArr","arr","data_send","objectWithoutProperties","EditPicture","getPictureSingle","json_img","thumbUrl","CreatePicture_FormItem","CreatePicture_Option","Upload_OssUpload","isShowUploadList","Picture","getPicturePage","DeletePicture","isCreatePicture","4","5","components_PreviewImg","Resource_CreatePicture","Picture_FormItem","Picture_Option","CreateVideo","EditVideo","getVideoSingle","json","CreateVideo_FormItem","CreateVideo_Option","tooltip","Video","getVideoPage","DeleteVideo","isCreateVideo","maxHeight","Resource_CreateVideo","Video_FormItem","Products","Number2Data","0","6","7","8","9","editable","CreateBasicProducts","EditBasicProducts","productId","handleDay","handleChangeResouce","handleChageTrip","tirpType","tMode","handleChangeInfo","handleDelete","handleAdd","newData","getProductSingle","arrSort","Math","max","dataAll","CreateBasicProducts_FormItem","CreateBasicProducts_Option","CreateBasicProducts_TextArea","marginRight","item_new","CheckItinerary","BasicProducts","getBasicProductsPage","DeleteBasicProducts","isCreateBasicProducts","isCheckItinerary","SeeItinerary","searchData","baseType","Resource_CreateBasicProducts","Resource_CheckItinerary","BasicProducts_FormItem","BasicProducts_Option","SetPrice","EditPrice","localDate","resetFields","dateCellRender","isShow","format","fontSize","showDrawer","handleDate","CalendarDate","listData","border","borderRadius","calendar","disabledDate","drawer","placement","closable","SetPrice_FormItem","input_number","page","onSelectChange","selectedRowKeys","selectedRows","rowSelection","hasSelected","CreateTourism","ChangeList","dataArray","fileData","limits","ChangeVideo","ChangePicture","clearPrice","ClearPrice","changeWeek","ChangeEnd","EditEndTime","ChangeStart","EditStartTime","everyDay","EditTourism","getTourismSingle","getTagPage","dataChange","CreateTourism_FormItem","CreateTourism_Option","date_picker","showTime","onOk","min","step","listStyle","float","components_Picture","es_radio","Tourism_SetPrice","CalendarPrice","getCalendarPrice","tourProductId","dataShow","ShowPicture","DeleteImage","getOwnPictures","Tourism","SetRecommend","EditRecommend","getTourismPage","isUp","EditUpDown","DeleteTourism","isCalendarPrice","calendarData","showCalendar","isShowPicture","statusMaps","recommendMaps","bmMaterialCount","divider","Tourism_CreateTourism","CreatePicture_ShowPicture","Tourism_CalendarPrice","Tourism_FormItem","Tourism_Option","EditTag","getTagSingle","CreateTag_FormItem","CreateTag_Option","TagPage","DeleteTag","EditState","isCreateTag","stateMaps","Admin_CreateTag","CryptoJS","enc","Utf8","IndexOfHttp","includes","CreateAdvert","EditAdvert","handleChangeJump","getCityStrategyPage","getPictureStrategyPage","getVideoStrategyPage","getAdvertisementSingle","tagList","jumpType","CreateAdvert_FormItem","CreateAdvert_Option","cityValue","tagValue","AdvertisementPage","getAdvertisementPage","DeleteAdvertisement","isCreateAdvert","positionMaps","Admin_CreateAdvert","AdvertisementPage_FormItem","AdvertisementPage_Option","Relation","CheckSelect","getRelationPage","isRelation","_this$state","EditPictureStraegy","DeleteInfo","forceUpdate","Set","PictureStrategy_CreatePicture_FormItem","PictureStrategy_CreatePicture_TextArea","PictureStrategy_CreatePicture_Option","components_Relation","list","itemLayout","renderItem","actions","Meta","avatar","count","PictureStrategy","DeletePictureStrategyPage","EditImageUpOrDown","ShowPicture_ShowPicture","PictureStrategy_CreatePicture","PictureStrategy_FormItem","PictureStrategy_Option","EditVideoStraegy","VideoStrategy_CreateVideo_FormItem","VideoStrategy_CreateVideo_TextArea","VideoStrategy_CreateVideo_Option","VideoStrategy","DeleteVideoStrategyPage","EditVideoUpOrDown","ShowVideo","isShowVideo","VideoStrategy_CreateVideo","VideoStrategy_FormItem","VideoStrategy_Option","CommentPage","getCommentPage","DeleteComment","itemTypeMaps","commentMaps","CommentPage_FormItem","getProduct","dragingIndex","BodyRow","_this$props","isOver","connectDragSource","connectDropTarget","restProps","moveRow","cursor","rowSource","beginDrag","DragableBodyRow","DropTarget","drop","monitor","dragIndex","hoverIndex","connect","dropTarget","DragSource","dragSource","DragSortingTable","components","body","dragRow","update","$splice","DndProvider","backend","HTML5Backend","onRow","CreateCityStrategy","ButtonType","handleInput","inputValue","DrawerInfo","handleChangeTable","EditCityStraegy","AddCityStraegy","buttonMaps","ButtonInfo","columnsTop","columnsPutIn","getCitySingle","imgInfo","videoInfo","CreateCityStrategy_FormItem","CreateCityStrategy_Option","CreateCityStrategy_TextArea","DragSorting","itemType","CityStrategyPage","SetCityState","isCreateCityStrategy","CreateProducts","isCreateProducts","showProducts","CreateComment","isCreateComment","showComment","CityStrategy_CreateCityStrategy","CityStrategy_Products","CityStrategy_Comment","CityStrategy_FormItem","CityStrategy_Option","UserAnswer","getUserAnswer","DeleteUserAnswer","shelfMaps","AnswerPage","AllowPass","EnableState","getAnswerPage","EnableShutDown","category","ShowUserAnswer","isShowUserAnswer","Answer_UserAnswer","AnswerPage_FormItem","AnswerPage_Option","EditBroadcast","getBroadcastSingle","CreateBroadcast_FormItem","CreateBroadcast_Option","BroadcastPage","getBroadcastPage","DeleteCast","isCreateBroadcast","Admin_CreateBroadcast","BroadcastPage_FormItem","BroadcastPage_Option","getTravelsSingle","Title","ChangeAllow","EditTravelsState","level","AllowPass_Text","RelationJourney","getRelationJourney","newSelect","relation","Journey","getJourneyPage","getTravelsPage","EditTravelstravelsCommend","EditTravelsupOrDown","RelationData","isAllowPass","AllowData","pictureData","showPicture","Journey_AllowPass","Journey_Comment","Journey_Products","Journey_RelationJourney","Journey_CreatePicture_ShowPicture","Journey_FormItem","Journey_Option","SearchOrder","descriptions","display","AfterSales","Order","isAfterSales","isAfter","SalesData","isSearchOrder","reocrd","Order_SearchOrder","Order_AfterSales","Order_FormItem","Order_Option","UserList","routerData","meta","getRouterData","BasicLayout_BasicLayout","Route","Redirect","UserLayout_UserLayout","locale","App","config_provider","zhCN","index_module","BrowserRouter","Layout_Layout","r","module","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","react_hot_loader__WEBPACK_IMPORTED_MODULE_2__","_App__WEBPACK_IMPORTED_MODULE_4__","_serviceWorker__WEBPACK_IMPORTED_MODULE_5__","hot","ReactDOM","getElementById","exports","header","logo","nav-link","user-layout-container","user-layout-content","user-layout-top","user-layout-header","user-layout-logo","user-layout-title","user-layout-desc"],"mappings":"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","file":"static/js/main.db81d0d3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { CityRecommend } from './../models/Strategy';\r\nimport { HotelPage } from './../models/Resource';\r\nconst urlMaps: {\r\n  [key: string]: string;\r\n} = {\r\n  getPolicy: '/file/basematerial/aliyun/oss/policy',\r\n  login: '/auth/oauth/token',\r\n  logout: '/auth/token/logout',\r\n  getCode: '/code',\r\n  getCityList: '/admin/basecity/list',\r\n  getMenuInfo: '/admin/menu/tree',\r\n  getScenicSpotPage: '/admin/basescenery/page',\r\n  CreateScenicSpot: '/admin/basescenery',\r\n  getScenicSpotSingle: '/admin/basescenery',\r\n  DeleteScenic: '/admin/basescenery',\r\n  baseHotelUrl: '/admin/basehotel/page',\r\n  HotelUrl: '/admin/basehotel',\r\n  baseRestaurantUrl: '/admin/baserestaurant/page',\r\n  RestaurantUrl: '/admin/baserestaurant',\r\n  baseTripModeUrl: '/admin/basetirp/page',\r\n  TripModeUrl: '/admin/basetirp',\r\n  basePictureUrl: '/admin/baseimage/page',\r\n  PictureUrl: '/admin/baseimage',\r\n  baseVideoUrl: '/admin/basevideo/page',\r\n  VideoUrl: '/admin/basevideo',\r\n  baseBasicProductsUrl: '/admin/baseproduct/page',\r\n  BasicProductsUrl: '/admin/baseproduct',\r\n  baseTouris: '/admin/bmtourproduct/page',\r\n  baseTourisUrl: '/admin/bmtourproduct',\r\n  EditTourRecommoned: '/admin/bmtourproduct/recommendById',\r\n  baseTag: '/admin/bmtourtag/page',\r\n  baseTagUrl: '/admin/bmtourtag',\r\n  editTag: '/admin/bmtourtag/updateStateById',\r\n  baseRoleUrl: '/admin/role/page',\r\n\r\n  baseOwnPicture: '/admin/bmmaterial/page',\r\n  deleteImg: '/admin/bmmaterial',\r\n  baseRecommend: '/admin/bmtourproduct/recommendById',\r\n  baseUp: '/admin/bmtourproduct/stateById',\r\n  baseCalendarPrice: '/admin/bmtourproductdays/page',\r\n  basePictuerStrategy: '/admin/bmstrategyimage/page',\r\n  PictuerStrategyUrl: '/admin/bmstrategyimage',\r\n\r\n  getPictureCity: '/admin/baseimage/listCityByType',\r\n\r\n  baseAdvertisement: '/admin/bmadvert/page',\r\n  AdvertisementUrl: '/admin/bmadvert',\r\n  baseComment: '/admin/usercompose/page',\r\n  baseCommentUrl: '/admin/usercompose',\r\n  baseVideoStrategy: '/admin/bmstrategyvideo/page',\r\n  VideoStrategyUrl: '/admin/bmstrategyvideo',\r\n  baseCityStraegyPage: '/admin/bmstrategycity/page',\r\n  CityStraegyUrl: '/admin/bmstrategycity',\r\n  baseAnswer: '/admin/useranswers/getUserAnswersPage',\r\n  baseAnswerUrl: '/admin/useranswers',\r\n  userAnswer: '/admin/useranswers/page',\r\n  baseBroadcast: '/admin/bmcarousel/page',\r\n  BroadcastUrl: '/admin/bmcarousel',\r\n  baseRelation: '/admin/bmtourproductdays/getRelationProductPage',\r\n\r\n  videoUp: '/admin/bmstrategyvideo/operation',\r\n  imageUp: '/admin/bmstrategyimage/operation',\r\n  CityRecommend: '/admin/bmstrategycity/recommend',\r\n  CityState: '/admin/bmstrategycity/operation',\r\n  EditProducts: '/admin/bmstrategycityproduct/relationProductById',\r\n  baseUserAnswer: '/admin/useranswers/page',\r\n  upOrDown: '/admin/useranswers/updateShelfById',\r\n  editState: '/admin/useranswers/updateStateById',\r\n\r\n  travelsPage: '/admin/usertravels/page',\r\n  baseTravels: '/admin/usertravels',\r\n  travelsUpOrDown: '/admin/usertravels/updateShelfById',\r\n  travelsPass: '/admin/usertravels/updateStateById',\r\n  travelsCommend: '/admin/usertravels/updateRecommendById',\r\n  getOrderPage: '/admin/order/page',\r\n  getSearchOrder: '/admin/order',\r\n  getAfterSales: '/admin/order/getByRunningNumber',\r\n  getUserList: '/admin/user/page',\r\n  EnableShutdown: ''\r\n};\r\n\r\n// export const baseUrl =\r\nexport const baseUrl =\r\n  // 'http://miramartravel-gateway:9950';\r\n  // \"http://192.168.1.20:9950\"//内网测试\r\n  'http://120.77.207.21'; //线上\r\n// 'http://192.168.1.35:9950'\r\n// 'http://192.168.1.201:9950'\r\n\r\nexport const OssUrl = 'http://miramartravel.oss-cn-shenzhen.aliyuncs.com/';\r\nexport default urlMaps;\r\n","import { notification, message } from 'antd';\r\nimport axios from 'axios';\r\nimport { generatePath } from 'react-router-dom';\r\nimport urlMaps, { baseUrl } from './urlMaps';\r\nimport { getQueryString } from '../utils/utils';\r\n\r\nexport { urlMaps };\r\n\r\nexport interface ReqData {\r\n  data?: any;\r\n  callback?(res: any): void;\r\n}\r\n\r\nexport interface ResData<T> {\r\n  code: string | number;\r\n  msg: string;\r\n  ts: number;\r\n  data: T;\r\n}\r\ndeclare global {\r\n  interface Window {\r\n    timeDiff: number;\r\n  }\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise.\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param  {object} [options] The options we want to pass to \"fetch\"\r\n * @return {object}           An object containing either \"data\" or \"err\"\r\n */\r\nexport default async function request<T>(\r\n  url: string,\r\n  data: any,\r\n  options: any = { method: 'GET' }\r\n): Promise<ResData<T>> {\r\n  options.originUrl = url;\r\n  url = baseUrl + url;\r\n  data = data || {};\r\n  let newOptions = { ...options, data: data };\r\n  let user =\r\n    JSON.parse(window.localStorage.getItem('user_cloud') as string) || {};\r\n  newOptions.headers = newOptions.headers || {};\r\n  if (user) {\r\n    // newOptions.headers.uid = user.data.id;\r\n    // newOptions.headers.sign = '123456';\r\n    newOptions.headers.Authorization = localStorage.getItem('user_cloud')\r\n      ? 'Bearer ' + user.accessToken\r\n      : 'Basic cGlnOnBpZw==';\r\n  }\r\n\r\n  if (\r\n    newOptions.method === 'POST' ||\r\n    newOptions.method === 'PUT' ||\r\n    newOptions.method === 'DELETE'\r\n  ) {\r\n    if (!(newOptions.data instanceof FormData)) {\r\n      newOptions.headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n        ...newOptions.headers\r\n      };\r\n      console.log('TCL:   newOptions.data', newOptions.data);\r\n      newOptions.data = JSON.stringify(newOptions.data);\r\n    } else {\r\n      // newOptions.data is FormData\r\n      newOptions.headers = {\r\n        Accept: 'application/json',\r\n        ...newOptions.headers\r\n      };\r\n    }\r\n  } else if (newOptions.method === 'GET') {\r\n    newOptions.params = newOptions.data;\r\n    newOptions.headers = {\r\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n      ...newOptions.headers\r\n    };\r\n  }\r\n  newOptions.url = newOptions.url || url;\r\n  return axios(newOptions)\r\n    .then(\r\n      (response: any) => {\r\n        if (!('code' in response.data)) {\r\n          const resData = response;\r\n          return {\r\n            code: 200,\r\n            msg: '',\r\n            data: resData,\r\n            ts: new Date().getTime(),\r\n            loading: false\r\n          } as ResData<T>;\r\n        }\r\n        if (response.data.code === 1000) {\r\n          window.location.href = generatePath('/user/login');\r\n          localStorage.removeItem('user_cloud');\r\n        } else if (response.data.code !== 0 && response.data.code !== '0') {\r\n          notification.error({\r\n            message: `请求错误 ${response.status}: ${response.url}`,\r\n            description: response.data.msg\r\n          });\r\n        } else if (response.data.ts) {\r\n          window.timeDiff = new Date().getTime() - response.data.ts * 1000;\r\n        }\r\n        return { ...response.data, loading: false };\r\n      },\r\n      (res: any) => {\r\n        const response = res.response;\r\n        if (response && response.data) {\r\n          if (response.data.code === '-800') {\r\n            window.location.href = generatePath('/user/login');\r\n            localStorage.removeItem('user_cloud');\r\n          } else if (response.data.code !== '1') {\r\n            notification.error({\r\n              message: `请求错误 ${response.status}: ${response.url}`,\r\n              description: response.data.msg\r\n            });\r\n          } else if (response.data.code !== 200) {\r\n            notification.error({\r\n              message: `请求错误 ${response.status}: ${response.url}`,\r\n              description: response.data.msg\r\n            });\r\n          }\r\n        }\r\n        return response;\r\n      }\r\n    )\r\n    .catch(e => {\r\n      console.log('e :', e);\r\n    });\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport request, { urlMaps, ResData, ReqData } from '../common/request';\r\nvar urlencode = require('urlencode');\r\nexport interface UserInfo {\r\n  access_token: string;\r\n  dept_id: number;\r\n  expires_in: number;\r\n  license: string;\r\n  refresh_token: string;\r\n  scope: string;\r\n  token_type: string;\r\n  user_id: number;\r\n  username: string;\r\n}\r\nexport interface EditInfo {}\r\nexport interface ForgetPassInfo {}\r\nexport interface CodeBack {\r\n  code: number;\r\n}\r\nexport class User {\r\n  @observable\r\n  userInfo: UserInfo = {\r\n    access_token: '',\r\n    dept_id: 0,\r\n    expires_in: 0,\r\n    license: '',\r\n    refresh_token: '',\r\n    scope: '',\r\n    token_type: '',\r\n    user_id: 0,\r\n    username: ''\r\n  };\r\n  @observable\r\n  editInfo: EditInfo = {};\r\n  @observable\r\n  forgetPassInfo: ForgetPassInfo = {};\r\n  @observable\r\n  codeBack: CodeBack = {\r\n    code: 0\r\n  };\r\n\r\n  @action\r\n  async login({ data, callback }: ReqData) {\r\n    let npassword = urlencode(data.password);\r\n    const res = await request<UserInfo>(\r\n      urlMaps.login +\r\n        '?randomStr=' +\r\n        data.randomStr +\r\n        '&grant_type=password' +\r\n        '&scope=server' +\r\n        '&type=2' +\r\n        '&username=' +\r\n        data.username +\r\n        // + \"&password=\" + npassword\r\n        '&password=' +\r\n        data.password +\r\n        '&code=' +\r\n        data.code,\r\n      data,\r\n      {\r\n        method: 'POST'\r\n      }\r\n    );\r\n    console.log('TCL: User -> login -> res', res);\r\n    if (res.code === '0' || res.code === 0) {\r\n      const data: any = res.data;\r\n      const user_cloud = data as UserInfo;\r\n      this.userInfo = data;\r\n      localStorage.setItem('user_cloud', JSON.stringify(user_cloud));\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async logout({ data, callback }: ReqData) {\r\n    const res = await request<UserInfo>(urlMaps.logout, data, {\r\n      method: 'DELETE'\r\n    });\r\n    if (res.code === 200) {\r\n      localStorage.removeItem('user_cloud');\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async editPass({ data, callback }: ReqData) {\r\n    const res = await request<EditInfo>(urlMaps.editPass, data, {\r\n      method: 'POST'\r\n    });\r\n\r\n    if (res.data === 200) {\r\n      const data: any = res.data;\r\n      const user = data as EditInfo;\r\n      this.editInfo = user;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async forgetPass({ data, callback }: ReqData) {\r\n    const res = await request<ForgetPassInfo>(urlMaps.forgetPass, data, {\r\n      method: 'POST'\r\n    });\r\n\r\n    if (res.data === 200) {\r\n      this.forgetPassInfo = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async sendPhoneCode({ data, callback }: ReqData) {\r\n    const res = await request<CodeBack>(urlMaps.sendCode, data, {\r\n      method: 'POST'\r\n    });\r\n\r\n    if (res.code === 200) {\r\n      this.codeBack = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import { observable, action } from 'mobx';\r\nimport request, { urlMaps, ResData, ReqData } from '../common/request';\r\nimport { generatePath } from 'react-router';\r\nexport interface MenuInfo {\r\n  code: number;\r\n  data: any[];\r\n  msg: any;\r\n}\r\nexport interface VideoStyle {\r\n  data: {\r\n    FileSize: { value: string };\r\n    Format: { value: string };\r\n    ImageHeight: { value: string };\r\n    ImageWidth: { value: string };\r\n    ResolutionUnit: { value: string };\r\n    XResolution: { value: string };\r\n    YResolution: { value: string };\r\n  };\r\n}\r\nexport interface Products {}\r\nexport interface RelationPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface City {}\r\nexport interface PictureCity {}\r\nexport interface Policy {\r\n  accessKeyId: string;\r\n  policy: string;\r\n  signature: string;\r\n  dir: string;\r\n  host: string;\r\n  callback: string;\r\n}\r\nexport class Global {\r\n  @observable\r\n  videoStyle: VideoStyle = {\r\n    data: {\r\n      FileSize: { value: '' },\r\n      Format: { value: '' },\r\n      ImageHeight: { value: '' },\r\n      ImageWidth: { value: '' },\r\n      ResolutionUnit: { value: '' },\r\n      XResolution: { value: '' },\r\n      YResolution: { value: '' }\r\n    }\r\n  };\r\n  @observable\r\n  products: Products = {};\r\n  @observable\r\n  relationPage: RelationPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  menuInfo: MenuInfo = {\r\n    code: -1,\r\n    data: [\r\n      {\r\n        authority: '',\r\n        children: [],\r\n        code: '',\r\n        component: null,\r\n        icon: '',\r\n        id: '',\r\n        keepAlive: '',\r\n        label: '',\r\n        name: '',\r\n        parentId: '',\r\n        path: null,\r\n        redirect: null,\r\n        sort: null,\r\n        spread: false,\r\n        type: null\r\n      }\r\n    ],\r\n    msg: ''\r\n  };\r\n  @observable\r\n  cityList: City[] = [\r\n    {\r\n      name: '',\r\n      id: ''\r\n    }\r\n  ];\r\n  @observable\r\n  pictureCity: PictureCity[] = [\r\n    {\r\n      name: '',\r\n      id: ''\r\n    }\r\n  ];\r\n  @observable\r\n  policy: Policy = {\r\n    accessKeyId: '',\r\n    policy: '',\r\n    signature: '',\r\n    dir: '',\r\n    host: '',\r\n    callback: ''\r\n  };\r\n  @action\r\n  async getRelationPage({ data, callback }: ReqData) {\r\n    const res = await request<RelationPage>(urlMaps.baseRelation, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.relationPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getMenuData({ data, callback }: ReqData) {\r\n    const res = await request<MenuInfo[]>(urlMaps.getMenuInfo, data, {\r\n      method: 'GET'\r\n    });\r\n    if (res.code === 0) {\r\n      this.menuInfo.data = res.data;\r\n    } else if (res.code !== 0) {\r\n      window.location.href = generatePath('/user/login');\r\n      localStorage.removeItem('user_cloud');\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getCityList({ data, callback }: ReqData) {\r\n    const res = await request<City[]>(urlMaps.getCityList, data, {\r\n      method: 'GET'\r\n    });\r\n    if (res.code === 0) {\r\n      this.cityList = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async getPictureCity({ data, callback }: ReqData) {\r\n    const res = await request<PictureCity[]>(urlMaps.getPictureCity, data, {\r\n      method: 'GET'\r\n    });\r\n    if (res.code === 0) {\r\n      this.pictureCity = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getPolicy({ data, callback }: ReqData) {\r\n    const res = await request<Policy>(urlMaps.getPolicy, data, {\r\n      method: 'GET'\r\n    });\r\n    if (res.code === 0) {\r\n      this.policy = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async getVideoStyle({ data, callback }: ReqData) {\r\n    const type = data && data.url.split('/video/admin')[1].split('.')[1];\r\n    const url = data && data.url.replace(type, 'jpg').replace('admin', 'cover');\r\n    const res = await request<VideoStyle>(\r\n      url,\r\n      {\r\n        'x-oss-process': 'image/info'\r\n      },\r\n      {\r\n        method: 'GET',\r\n        url: url\r\n      }\r\n    );\r\n    if (res.code === 200) {\r\n      this.videoStyle.data = res.data.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async EditProducts({ data, callback }: ReqData) {\r\n    const res = await request<Products>(urlMaps.EditProducts, data, {\r\n      method: 'PUT'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.products = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Global;\r\n","import { observable, action } from 'mobx';\r\nimport request, { urlMaps, ResData, ReqData } from '../common/request';\r\nexport interface ScenicPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface HotelPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface RestaurantPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface TripModePage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface PicturePage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface VideoPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface BasicProductsPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface ScenicCreate {}\r\nexport interface HotelCreate {}\r\n\r\nexport interface RestaurantCreate {}\r\nexport interface TripModeCreate {}\r\nexport interface PictureCreate {}\r\nexport interface VideoCreate {}\r\nexport interface BasicProductsCreate {}\r\nexport interface ScenicDelete {}\r\nexport interface HotelDelete {}\r\nexport interface RestaurantDelete {}\r\nexport interface TripModeDelete {}\r\nexport interface PictureDelete {}\r\nexport interface VideoDelete {}\r\nexport interface BasicProductsDelete {}\r\nexport interface ScenicCreateSingle {\r\n  id: string;\r\n  name: string;\r\n  city: string;\r\n  introduce: string;\r\n  createTime: string;\r\n  userId: string;\r\n  convenient: string;\r\n}\r\nexport interface HotelSingle {\r\n  id: string;\r\n  name: string;\r\n  city: string;\r\n  introduce: string;\r\n  createTime: string;\r\n  address: string;\r\n  telephone: string;\r\n  traffic: string;\r\n  userId: string;\r\n  star: string;\r\n}\r\nexport interface RestaurantSingle {\r\n  id: string;\r\n  name: string;\r\n  city: string;\r\n  introduce: string;\r\n  createTime: string;\r\n  address: string;\r\n  telephone: string;\r\n  traffic: string;\r\n  userId: string;\r\n  star: string;\r\n}\r\nexport interface TripModeSingle {\r\n  id: string;\r\n  tirpMode: string;\r\n  subordinate: string;\r\n  start: string;\r\n  end: string;\r\n  number: string;\r\n  startHour: string;\r\n  startMin: string;\r\n  createTime: string;\r\n  transfer: string;\r\n  userId: string;\r\n}\r\nexport interface PictureSingle {\r\n  id: string;\r\n  type: string;\r\n  city: string;\r\n  itemId: string;\r\n  url: string;\r\n  wide: string;\r\n  high: string;\r\n  createTime: string;\r\n  userId: string;\r\n  urls: string;\r\n}\r\nexport interface VideoSingle {\r\n  id: string;\r\n  name: string;\r\n  city: string;\r\n  url: string;\r\n  wide: string;\r\n  high: string;\r\n  duration: string;\r\n  createTime: string;\r\n  userId: string;\r\n}\r\nexport interface ProductSingle {\r\n  id: string;\r\n  name: string;\r\n  copywriting: string;\r\n  days: string;\r\n  createTime: string;\r\n  brightSpot: string;\r\n  pdfUrl: string;\r\n  userId: string;\r\n  state: number;\r\n  type: number;\r\n  baseProductDaysList: any[];\r\n}\r\nexport class Resource {\r\n  @observable\r\n  scenicPage: ScenicPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  hotelPage: HotelPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  restaurantPage: RestaurantPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  tripModePage: TripModePage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  picturePage: PicturePage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  videoPage: VideoPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  basicProductsPage: BasicProductsPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n\r\n  @observable\r\n  scenicCreate: ScenicCreate = {};\r\n  @observable\r\n  basicProductsCreate: BasicProductsCreate = {};\r\n  @observable\r\n  hotelCreate: HotelCreate = {};\r\n  @observable\r\n  restaurantCreate: RestaurantCreate = {};\r\n  @observable\r\n  tripModeCreate: TripModeCreate = {};\r\n  @observable\r\n  pictureCreate: PictureCreate = {};\r\n  @observable\r\n  videoCreate: VideoCreate = {};\r\n  @observable\r\n  hotelDelete: HotelDelete = {};\r\n  @observable\r\n  restaurantDelete: RestaurantDelete = {};\r\n\r\n  @observable\r\n  scenicDelete: ScenicDelete = {};\r\n  @observable\r\n  tripModeDelete: TripModeDelete = {};\r\n  @observable\r\n  pictureDelete: PictureDelete = {};\r\n  @observable\r\n  videoDelete: VideoDelete = {};\r\n  @observable\r\n  basicProductsDelete: BasicProductsDelete = {};\r\n  @observable\r\n  scenicCreateSingle: ScenicCreateSingle = {\r\n    id: '',\r\n    name: '',\r\n    city: '',\r\n    introduce: '',\r\n    createTime: '',\r\n    userId: '',\r\n    convenient: ''\r\n  };\r\n  @observable\r\n  hotelSingle: HotelSingle = {\r\n    id: '',\r\n    name: '',\r\n    city: '',\r\n    introduce: '',\r\n    createTime: '',\r\n    address: '',\r\n    telephone: '',\r\n    traffic: '',\r\n    userId: '',\r\n    star: ''\r\n  };\r\n  @observable\r\n  restaurantSingle: RestaurantSingle = {\r\n    id: '',\r\n    name: '',\r\n    city: '',\r\n    introduce: '',\r\n    createTime: '',\r\n    address: '',\r\n    telephone: '',\r\n    traffic: '',\r\n    userId: '',\r\n    star: ''\r\n  };\r\n  @observable\r\n  tripModeSingle: TripModeSingle = {\r\n    id: '',\r\n    tirpMode: '',\r\n    subordinate: '',\r\n    start: '',\r\n    end: '',\r\n    number: '',\r\n    startHour: '',\r\n    startMin: '',\r\n    createTime: '',\r\n    transfer: '',\r\n    userId: ''\r\n  };\r\n  @observable\r\n  pictureSingle: PictureSingle = {\r\n    id: '',\r\n    type: '',\r\n    city: '',\r\n    itemId: '',\r\n    url: '',\r\n    wide: '',\r\n    high: '',\r\n    createTime: '',\r\n    userId: '',\r\n    urls: ''\r\n  };\r\n  @observable\r\n  videoSingle: VideoSingle = {\r\n    id: '',\r\n    name: '',\r\n    city: '',\r\n    url: '',\r\n    wide: '',\r\n    high: '',\r\n    duration: '',\r\n    createTime: '',\r\n    userId: ''\r\n  };\r\n  @observable\r\n  productSingle: ProductSingle = {\r\n    id: '',\r\n    name: '',\r\n    copywriting: '',\r\n    days: '',\r\n    createTime: '',\r\n    brightSpot: '',\r\n    pdfUrl: '',\r\n    userId: '',\r\n    state: 0,\r\n    type: 0,\r\n    baseProductDaysList: []\r\n  };\r\n  @action\r\n  async getScenicSpot({ data, callback }: ReqData) {\r\n    const res = await request<ScenicPage>(urlMaps.getScenicSpotPage, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.scenicPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getHotelPage({ data, callback }: ReqData) {\r\n    const res = await request<HotelPage>(urlMaps.baseHotelUrl, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.hotelPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getRestaurantPage({ data, callback }: ReqData) {\r\n    const res = await request<RestaurantPage>(urlMaps.baseRestaurantUrl, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.restaurantPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async getTripModePage({ data, callback }: ReqData) {\r\n    const res = await request<TripModePage>(urlMaps.baseTripModeUrl, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.tripModePage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getPicturePage({ data, callback }: ReqData) {\r\n    const res = await request<PicturePage>(urlMaps.basePictureUrl, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.picturePage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getVideoPage({ data, callback }: ReqData) {\r\n    const res = await request<VideoPage>(urlMaps.baseVideoUrl, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.videoPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getBasicProductsPage({ data, callback }: ReqData) {\r\n    const res = await request<VideoPage>(urlMaps.baseBasicProductsUrl, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.basicProductsPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async CreateScenicSpot({ data, callback }: ReqData) {\r\n    const res = await request<ScenicCreate>(urlMaps.CreateScenicSpot, data, {\r\n      method: 'POST'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.scenicCreate = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async CreateHotel({ data, callback }: ReqData) {\r\n    const res = await request<HotelCreate>(urlMaps.HotelUrl, data, {\r\n      method: 'POST'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.hotelCreate = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async CreateRestaurant({ data, callback }: ReqData) {\r\n    const res = await request<RestaurantCreate>(urlMaps.RestaurantUrl, data, {\r\n      method: 'POST'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.restaurantCreate = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async CreateTripMode({ data, callback }: ReqData) {\r\n    const res = await request<TripModeCreate>(urlMaps.TripModeUrl, data, {\r\n      method: 'POST'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.tripModeCreate = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async CreatePicture({ data, callback }: ReqData) {\r\n    const res = await request<PictureCreate>(urlMaps.PictureUrl, data, {\r\n      method: 'POST'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.pictureCreate = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async CreateVideo({ data, callback }: ReqData) {\r\n    const res = await request<VideoCreate>(urlMaps.VideoUrl, data, {\r\n      method: 'POST'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.videoCreate = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async CreateBasicProducts({ data, callback }: ReqData) {\r\n    const res = await request<BasicProductsCreate>(\r\n      urlMaps.BasicProductsUrl,\r\n      data,\r\n      {\r\n        method: 'POST'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.basicProductsCreate = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async EditScenicSpot({ data, callback }: ReqData) {\r\n    const res = await request<ScenicPage>(urlMaps.CreateScenicSpot, data, {\r\n      method: 'PUT'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.scenicPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async EditHotel({ data, callback }: ReqData) {\r\n    const res = await request<HotelPage>(urlMaps.HotelUrl, data, {\r\n      method: 'PUT'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.hotelPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async EditRestaurant({ data, callback }: ReqData) {\r\n    const res = await request<RestaurantPage>(urlMaps.RestaurantUrl, data, {\r\n      method: 'PUT'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.restaurantPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async EditTripMode({ data, callback }: ReqData) {\r\n    const res = await request<TripModePage>(urlMaps.TripModeUrl, data, {\r\n      method: 'PUT'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.tripModePage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async EditPicture({ data, callback }: ReqData) {\r\n    const res = await request<PicturePage>(urlMaps.PictureUrl, data, {\r\n      method: 'PUT'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.picturePage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async EditVideo({ data, callback }: ReqData) {\r\n    const res = await request<VideoPage>(urlMaps.VideoUrl, data, {\r\n      method: 'PUT'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.videoPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async EditBasicProducts({ data, callback }: ReqData) {\r\n    const res = await request<BasicProductsPage>(\r\n      urlMaps.BasicProductsUrl,\r\n      data,\r\n      {\r\n        method: 'PUT'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.basicProductsPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getScenicSpotSingle({ data, callback }: ReqData) {\r\n    const res = await request<ScenicCreateSingle>(\r\n      urlMaps.getScenicSpotSingle,\r\n      data,\r\n      {\r\n        method: 'GET'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.scenicCreateSingle = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getHotelSingle({ data, callback }: ReqData) {\r\n    const res = await request<HotelSingle>(urlMaps.HotelUrl, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.hotelSingle = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getRestaurantSingle({ data, callback }: ReqData) {\r\n    const res = await request<RestaurantSingle>(urlMaps.RestaurantUrl, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.restaurantSingle = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getTripModeSingle({ data, callback }: ReqData) {\r\n    const res = await request<TripModeSingle>(urlMaps.TripModeUrl, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.tripModeSingle = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getPictureSingle({ data, callback }: ReqData) {\r\n    const res = await request<PictureSingle>(urlMaps.PictureUrl, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.pictureSingle = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getVideoSingle({ data, callback }: ReqData) {\r\n    const res = await request<VideoSingle>(urlMaps.VideoUrl, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.videoSingle = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getProductSingle({ data, callback }: ReqData) {\r\n    const res = await request<ProductSingle>(urlMaps.BasicProductsUrl, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.productSingle = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async DeleteScenic({ data, callback }: ReqData) {\r\n    const res = await request<ScenicDelete>(\r\n      urlMaps.DeleteScenic + '?id=' + data.id,\r\n      data,\r\n      {\r\n        method: 'DELETE'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.scenicDelete = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async DeleteHotel({ data, callback }: ReqData) {\r\n    const res = await request<HotelDelete>(\r\n      urlMaps.HotelUrl + '?id=' + data.id,\r\n      data,\r\n      {\r\n        method: 'DELETE'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.hotelDelete = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async DeleteRestaurant({ data, callback }: ReqData) {\r\n    const res = await request<RestaurantDelete>(\r\n      urlMaps.RestaurantUrl + '?id=' + data.id,\r\n      data,\r\n      {\r\n        method: 'DELETE'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.restaurantDelete = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async DeleteTripMode({ data, callback }: ReqData) {\r\n    const res = await request<TripModeDelete>(\r\n      urlMaps.TripModeUrl + '?id=' + data.id,\r\n      data,\r\n      {\r\n        method: 'DELETE'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.tripModeDelete = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async DeletePicture({ data, callback }: ReqData) {\r\n    const res = await request<PictureDelete>(\r\n      urlMaps.PictureUrl + '?id=' + data.id,\r\n      data,\r\n      {\r\n        method: 'DELETE'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.pictureDelete = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async DeleteVideo({ data, callback }: ReqData) {\r\n    const res = await request<VideoDelete>(\r\n      urlMaps.VideoUrl + '?id=' + data.id,\r\n      data,\r\n      {\r\n        method: 'DELETE'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.videoDelete = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async DeleteBasicProducts({ data, callback }: ReqData) {\r\n    const res = await request<BasicProductsDelete>(\r\n      urlMaps.BasicProductsUrl + '?id=' + data.id,\r\n      data,\r\n      {\r\n        method: 'DELETE'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.basicProductsDelete = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Resource;\r\n","import { observable, action } from 'mobx';\r\nimport request, { urlMaps, ResData, ReqData } from '../common/request';\r\nexport interface PrevilePage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\n\r\nexport class System {\r\n  @observable\r\n  previlePage: PrevilePage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n\r\n  @action\r\n  async getPrevilePage({ data, callback }: ReqData) {\r\n    const res = await request<PrevilePage>(urlMaps.baseRoleUrl, data, {\r\n      method: 'GET'\r\n    });\r\n    console.log('TCL: System -> getPrevilePage -> res', res);\r\n\r\n    if (res.code === 0) {\r\n      this.previlePage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n}\r\nexport default System;\r\n","import { observable, action, values } from 'mobx';\r\nimport request, { urlMaps, ResData, ReqData } from '../common/request';\r\nimport moment from 'moment';\r\nexport interface TourismPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface OwnPicturePage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface CalendarPrice {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\n\r\nexport interface TourismCreate { }\r\nexport interface TourismDelete { }\r\nexport interface ImageDelete { }\r\nexport interface Recommend { }\r\nexport interface UpDown { }\r\nexport interface TourismSingle {\r\n  id: string;\r\n  title: string;\r\n  baseProductId: string;\r\n  type: string;\r\n  holiday: number;\r\n  weekend: number;\r\n  state: number;\r\n  period: number;\r\n  startTime: string;\r\n  endTime: string;\r\n  createTime: string;\r\n  coverUrl: string;\r\n  tagId: string;\r\n  userId: string;\r\n  recommend: number;\r\n  bmMaterialList: any[];\r\n  bmTourProductDaysList: any[];\r\n  howDays: number;\r\n}\r\nexport class Tourisms {\r\n  @observable\r\n  tourismPage: TourismPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  ownPicturePage: OwnPicturePage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  calendarPrice: CalendarPrice = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n\r\n  @observable\r\n  tourismCreate: TourismCreate = {};\r\n  @observable\r\n  tourismDelete: TourismDelete = {};\r\n  @observable\r\n  imageDelete: ImageDelete = {};\r\n  @observable\r\n  recommend: Recommend = {};\r\n  @observable\r\n  upDown: UpDown = {};\r\n  @observable\r\n  tourismSingle: TourismSingle = {\r\n    id: '',\r\n    title: '',\r\n    baseProductId: '',\r\n    type: '',\r\n    holiday: 0,\r\n    weekend: 0,\r\n    state: 0,\r\n    period: 0,\r\n    startTime: '',\r\n    endTime: '',\r\n    createTime: '',\r\n    coverUrl: '',\r\n    tagId: '',\r\n    userId: '',\r\n    recommend: 0,\r\n    bmMaterialList: [],\r\n    bmTourProductDaysList: [],\r\n    howDays: 0\r\n  };\r\n  @action\r\n  async getTourismPage({ data, callback }: ReqData) {\r\n    const res = await request<TourismPage>(urlMaps.baseTouris, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.tourismPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getOwnPictures({ data, callback }: ReqData) {\r\n    const res = await request<OwnPicturePage>(urlMaps.baseOwnPicture, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.ownPicturePage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getCalendarPrice({ data, callback }: ReqData) {\r\n    const res = await request<CalendarPrice>(urlMaps.baseCalendarPrice, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.calendarPrice = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async CreateTourism({ data, callback }: ReqData) {\r\n    const res = await request<TourismCreate>(urlMaps.baseTourisUrl, data, {\r\n      method: 'POST'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.tourismCreate = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async EditRecommend({ data, callback }: ReqData) {\r\n    const res = await request<Recommend>(urlMaps.EditTourRecommoned, data, {\r\n      method: 'PUT'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.recommend = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async EditUpDown({ data, callback }: ReqData) {\r\n    const res = await request<UpDown>(urlMaps.baseUp, data, {\r\n      method: 'PUT'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.upDown = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async EditTourism({ data, callback }: ReqData) {\r\n    const res = await request<TourismPage>(urlMaps.baseTourisUrl, data, {\r\n      method: 'PUT'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.tourismPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async DeleteTourism({ data, callback }: ReqData) {\r\n    const res = await request<TourismDelete>(\r\n      urlMaps.baseTourisUrl + '?id=' + data.id,\r\n      data,\r\n      {\r\n        method: 'DELETE'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.tourismDelete = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async DeleteImage({ data, callback }: ReqData) {\r\n    const res = await request<ImageDelete>(\r\n      urlMaps.deleteImg + '?id=' + data.id,\r\n      data,\r\n      {\r\n        method: 'DELETE'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.imageDelete = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getTourismSingle({ data, callback }: ReqData) {\r\n    const res = await request<TourismSingle>(urlMaps.baseTourisUrl, data, {\r\n      method: 'GET'\r\n    });\r\n    // [0, 1, 2, 3, 4, 5, 6].map(num => res.data.bmTourProductDaysList.find(item => item.data.day() == num)).filter(item => typeof item == 'object');\r\n    if (res.code === 0) {\r\n      if (res.data.type === '1') {\r\n        this.tourismSingle.bmTourProductDaysList = [\r\n          res.data.bmTourProductDaysList[0]\r\n        ];\r\n      } else if (res.data.type === '2' && res.data.period === 1) {\r\n        [0, 1, 2, 3, 4, 5, 6].forEach(num => {\r\n          const target = res.data.bmTourProductDaysList.find(\r\n            item => moment(item.data).day() == num\r\n          );\r\n          if (target) {\r\n            this.tourismSingle.bmTourProductDaysList.push(target);\r\n          }\r\n        });\r\n      } else if (res.data.type === '2' && res.data.period === 2) {\r\n        [\r\n          1,\r\n          2,\r\n          3,\r\n          4,\r\n          5,\r\n          6,\r\n          7,\r\n          8,\r\n          9,\r\n          10,\r\n          11,\r\n          12,\r\n          13,\r\n          14,\r\n          15,\r\n          16,\r\n          17,\r\n          18,\r\n          19,\r\n          20,\r\n          21,\r\n          22,\r\n          23,\r\n          24,\r\n          25,\r\n          26,\r\n          27,\r\n          28,\r\n          29,\r\n          30,\r\n          31\r\n        ].forEach(num => {\r\n          const target = res.data.bmTourProductDaysList.find(\r\n            item => moment(item.data).get('D') == num\r\n          );\r\n          if (target) {\r\n            this.tourismSingle.bmTourProductDaysList.push(target);\r\n          }\r\n        });\r\n      } else if (res.data.type === '3') {\r\n        this.tourismSingle.bmTourProductDaysList = res.data.bmTourProductDaysList.filter(\r\n          item =>\r\n            moment(item.data).get('D') <= 31 || moment(item.data).get('D') >= 1\r\n        );\r\n      }\r\n      this.tourismSingle = {\r\n        ...res.data,\r\n        bmTourProductDaysList: this.tourismSingle.bmTourProductDaysList\r\n      };\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action EditPrice = (value: any, content: any) => {\r\n    let target: any;\r\n    let typeCycle = content.type;\r\n    let periodCycle = content.period;\r\n    const dataPicker = moment(value.data.valueOf()).day();\r\n    const num = moment(value.data.valueOf()).get('D');\r\n    if (typeCycle === '1') {\r\n      target = this.tourismSingle.bmTourProductDaysList[0];\r\n    } else if (typeCycle === '2' && periodCycle === 1) {\r\n      target = this.tourismSingle.bmTourProductDaysList.find(\r\n        item => moment(item.data).day() === dataPicker\r\n      );\r\n    } else if (typeCycle === '2' && periodCycle === 2) {\r\n      target = this.tourismSingle.bmTourProductDaysList.find(\r\n        item => moment(item.data).get('D') === num\r\n      );\r\n    } else if (typeCycle === '3') {\r\n      target = this.tourismSingle.bmTourProductDaysList.find(\r\n        item => value.data === item.data\r\n      );\r\n    }\r\n    if (target) {\r\n      target.price = value.price;\r\n      target.childrenPrice = value.childrenPrice;\r\n      target.babyPrice = value.babyPrice;\r\n      console.log(\"编辑start\")\r\n    } else {\r\n      console.log(\"添加start\")\r\n      this.tourismSingle.bmTourProductDaysList.push(value);\r\n      console.log(\"添加end\")\r\n    }\r\n  };\r\n  @action ClearPrice = () => {\r\n    this.tourismSingle.bmTourProductDaysList = [];\r\n  };\r\n  @action EditStartTime = (value: any) => {\r\n    console.log('TCL: @actionEditStartTime -> value', value);\r\n  };\r\n  @action EditEndTime = (value: any) => {\r\n    console.log('TCL: @actionEditEndTime -> value', value);\r\n  };\r\n}\r\nexport default Tourisms;\r\n","import { observable, action } from 'mobx';\r\nimport request, { urlMaps, ResData, ReqData } from '../common/request';\r\nexport interface TagPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface TagDelete {}\r\nexport interface CreateTag {}\r\nexport interface StateTag {}\r\nexport interface TagSingle {\r\n  id: string;\r\n  title: string;\r\n  subtitle: string;\r\n  state: number;\r\n  startTime: string;\r\n  endTime: string;\r\n  sort: number;\r\n}\r\nexport class Tag {\r\n  @observable\r\n  tagPage: TagPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  tagDelete: TagDelete = {};\r\n  @observable\r\n  createTag: CreateTag = {};\r\n  @observable\r\n  stateTag: StateTag = {};\r\n\r\n  @observable\r\n  tagSingle: TagSingle = {\r\n    id: '',\r\n    title: '',\r\n    subtitle: '',\r\n    state: 2,\r\n    startTime: '',\r\n    endTime: '',\r\n    sort: 0\r\n  };\r\n  @action\r\n  async getTagPage({ data, callback }: ReqData) {\r\n    const res = await request<TagPage>(urlMaps.baseTag, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.tagPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async DeleteTag({ data, callback }: ReqData) {\r\n    const res = await request<TagPage>(\r\n      urlMaps.baseTagUrl + '?id=' + data.id,\r\n      data,\r\n      {\r\n        method: 'DELETE'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.tagPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async CreateTag({ data, callback }: ReqData) {\r\n    const res = await request<CreateTag>(urlMaps.baseTagUrl, data, {\r\n      method: 'POST'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.createTag = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async EditTag({ data, callback }: ReqData) {\r\n    const res = await request<CreateTag>(urlMaps.baseTagUrl, data, {\r\n      method: 'PUT'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.createTag = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getTagSingle({ data, callback }: ReqData) {\r\n    const res = await request<TagSingle>(urlMaps.baseTagUrl, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.tagSingle = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async EditState({ data, callback }: ReqData) {\r\n    const res = await request<StateTag>(urlMaps.editTag, data, {\r\n      method: 'PUT'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.stateTag = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n}\r\nexport default Tag;\r\n","import { observable, action } from 'mobx';\r\nimport request, { urlMaps, ResData, ReqData } from '../common/request';\r\n\r\nexport interface SelectInfo {\r\n  selectedRow: any[];\r\n}\r\n\r\nexport interface VideoStraegyPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\n\r\nexport interface CityStraegyPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface PictureStraegyPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface VideoStraegyPageDelete {}\r\nexport interface CreatePictureStraegy {}\r\nexport interface CreateVideoStraegy {}\r\nexport interface CreateCityStraegy {}\r\n\r\nexport interface UpDownVideoStraegy {}\r\nexport interface UpDownImageStraegy {}\r\nexport interface CityRecommend {}\r\nexport interface CityState {}\r\nexport interface PictureSingle {\r\n  bmMaterialList: any[];\r\n  bmTourProductDaysList: any[];\r\n  city: string;\r\n  content: string;\r\n  createTime: string;\r\n  id: string;\r\n  recommend: number;\r\n  state: number;\r\n  title: string;\r\n  type: number;\r\n  userId: string;\r\n}\r\n\r\nexport interface VideoSingle {\r\n  bmMaterialList: any[];\r\n  bmTourProductDaysList: any[];\r\n  city: string;\r\n  content: string;\r\n  createTime: string;\r\n  id: string;\r\n  recommend: number;\r\n  state: number;\r\n  title: string;\r\n  type: number;\r\n  userId: string;\r\n}\r\nexport interface CitySingle {\r\n  bmMaterialList: any[];\r\n  bmTourProductDaysList: any[];\r\n  city: string;\r\n  composeCount: number;\r\n  createTime: string;\r\n  id: string;\r\n  imgUrl: string;\r\n  information: string;\r\n  name: string;\r\n  recommend: number;\r\n  state: number;\r\n  strategyCityIntroduceList: any[];\r\n  userId: string;\r\n}\r\nexport class Strategy {\r\n  @observable\r\n  selectInfo: SelectInfo = {\r\n    selectedRow: []\r\n  };\r\n  @observable\r\n  cityRecommend: CityRecommend = {};\r\n  @observable\r\n  cityState: CityState = {};\r\n\r\n  @observable\r\n  videoStraegyPage: VideoStraegyPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  cityStraegyPage: CityStraegyPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  pictureStraegyPage: PictureStraegyPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  videoStraegyPageDelete: VideoStraegyPageDelete = {};\r\n  @observable\r\n  createPictureStraegy: CreatePictureStraegy = {};\r\n  @observable\r\n  upDownVideoStraegy: UpDownVideoStraegy = {};\r\n  @observable\r\n  upDownImageStraegy: UpDownImageStraegy = {};\r\n  @observable\r\n  createVideoStraegy: CreateVideoStraegy = {};\r\n  @observable\r\n  createCityStraegy: CreateCityStraegy = {};\r\n\r\n  @observable\r\n  pictureSingle: PictureSingle = {\r\n    bmMaterialList: [],\r\n    bmTourProductDaysList: [],\r\n    city: '',\r\n    content: '',\r\n    createTime: '',\r\n    id: '',\r\n    recommend: 0,\r\n    state: 0,\r\n    title: '',\r\n    type: 0,\r\n    userId: ''\r\n  };\r\n  @observable\r\n  videoSingle: VideoSingle = {\r\n    bmMaterialList: [],\r\n    bmTourProductDaysList: [],\r\n    city: '',\r\n    content: '',\r\n    createTime: '',\r\n    id: '',\r\n    recommend: 0,\r\n    state: 0,\r\n    title: '',\r\n    type: 0,\r\n    userId: ''\r\n  };\r\n  @observable\r\n  citySingle: CitySingle = {\r\n    bmMaterialList: [],\r\n    bmTourProductDaysList: [],\r\n    city: '',\r\n    composeCount: 0,\r\n    createTime: '',\r\n    id: '',\r\n    imgUrl: '',\r\n    information: '',\r\n    name: '',\r\n    recommend: 1,\r\n    state: 1,\r\n    strategyCityIntroduceList: [],\r\n    userId: ''\r\n  };\r\n  @action\r\n  async getPictureStrategyPage({ data, callback }: ReqData) {\r\n    const res = await request<PictureStraegyPage>(\r\n      urlMaps.basePictuerStrategy,\r\n      data,\r\n      {\r\n        method: 'GET'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.pictureStraegyPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getVideoStrategyPage({ data, callback }: ReqData) {\r\n    const res = await request<VideoStraegyPage>(\r\n      urlMaps.baseVideoStrategy,\r\n      data,\r\n      {\r\n        method: 'GET'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.videoStraegyPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getCityStrategyPage({ data, callback }: ReqData) {\r\n    const res = await request<CityStraegyPage>(\r\n      urlMaps.baseCityStraegyPage,\r\n      data,\r\n      {\r\n        method: 'GET'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.cityStraegyPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async DeletePictureStrategyPage({ data, callback }: ReqData) {\r\n    const res = await request<PictureStraegyPage>(\r\n      urlMaps.PictuerStrategyUrl + '?id=' + data.id,\r\n      data,\r\n      {\r\n        method: 'DELETE'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.pictureStraegyPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async DeleteVideoStrategyPage({ data, callback }: ReqData) {\r\n    const res = await request<VideoStraegyPage>(\r\n      urlMaps.VideoStrategyUrl + '?id=' + data.id,\r\n      data,\r\n      {\r\n        method: 'DELETE'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.videoStraegyPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async CreatePictureStraegy({ data, callback }: ReqData) {\r\n    const res = await request<CreatePictureStraegy>(\r\n      urlMaps.PictuerStrategyUrl,\r\n      data,\r\n      {\r\n        method: 'POST'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.createPictureStraegy = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async EditPictureStraegy({ data, callback }: ReqData) {\r\n    const res = await request<CreatePictureStraegy>(\r\n      urlMaps.PictuerStrategyUrl,\r\n      data,\r\n      {\r\n        method: 'PUT'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.createPictureStraegy = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async CreateVideoStraegy({ data, callback }: ReqData) {\r\n    const res = await request<CreateVideoStraegy>(\r\n      urlMaps.VideoStrategyUrl,\r\n      data,\r\n      {\r\n        method: 'POST'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.createVideoStraegy = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async AddCityStraegy({ data, callback }: ReqData) {\r\n    console.log(\r\n      'TCL: CreateCityStraegy -> urlMaps.CityStraegyUrl',\r\n      urlMaps.CityStraegyUrl\r\n    );\r\n    const res = await request<CreateCityStraegy>(urlMaps.CityStraegyUrl, data, {\r\n      method: 'POST'\r\n    });\r\n    console.log('TCL: CreateCityStraegy -> res', res);\r\n\r\n    if (res.code === 0) {\r\n      this.createCityStraegy = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async EditCityStraegy({ data, callback }: ReqData) {\r\n    const res = await request<CreatePictureStraegy>(\r\n      urlMaps.CityStraegyUrl,\r\n      data,\r\n      {\r\n        method: 'PUT'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.createVideoStraegy = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async EditVideoStraegy({ data, callback }: ReqData) {\r\n    const res = await request<CreatePictureStraegy>(\r\n      urlMaps.VideoStrategyUrl,\r\n      data,\r\n      {\r\n        method: 'PUT'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.createVideoStraegy = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async SetRecommend({ data, callback }: ReqData) {\r\n    const res = await request<CityRecommend>(urlMaps.CityRecommend, data, {\r\n      method: 'PUT'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.cityRecommend = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async SetCityState({ data, callback }: ReqData) {\r\n    const res = await request<CityState>(urlMaps.CityState, data, {\r\n      method: 'PUT'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.cityState = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async EditVideoUpOrDown({ data, callback }: ReqData) {\r\n    const res = await request<UpDownVideoStraegy>(urlMaps.videoUp, data, {\r\n      method: 'PUT'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.upDownVideoStraegy = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async EditImageUpOrDown({ data, callback }: ReqData) {\r\n    const res = await request<UpDownImageStraegy>(urlMaps.imageUp, data, {\r\n      method: 'PUT'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.upDownImageStraegy = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getPictureSingle({ data, callback }: ReqData) {\r\n    const res = await request<PictureSingle>(urlMaps.PictuerStrategyUrl, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.pictureSingle = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getVideoSingle({ data, callback }: ReqData) {\r\n    const res = await request<VideoSingle>(urlMaps.VideoStrategyUrl, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.videoSingle = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getCitySingle({ data, callback }: ReqData) {\r\n    const res = await request<CitySingle>(urlMaps.CityStraegyUrl, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.citySingle = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  AddSelectInfo = (value: any) => {\r\n    this.selectInfo.selectedRow = value;\r\n  };\r\n  @action\r\n  DeleteSelectInfo = (value: any) => {\r\n    this.selectInfo.selectedRow = this.selectInfo.selectedRow.filter(\r\n      (item: any) => {\r\n        return item !== value;\r\n      }\r\n    );\r\n  };\r\n  @action\r\n  getSelectInfo = () => {\r\n    this.selectInfo.selectedRow = this.selectInfo.selectedRow;\r\n  };\r\n}\r\nexport default Strategy;\r\n","import { observable, action } from 'mobx';\r\nimport request, { urlMaps, ResData, ReqData } from '../common/request';\r\nexport interface AdvertisementPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface AdvertisementDelete {}\r\nexport interface CreateAdvertisement {}\r\nexport interface AdvertisementSingle {\r\n  id: string;\r\n  title: string;\r\n  url: string;\r\n  position: number;\r\n  startTime: string;\r\n  endTime: string;\r\n  jump: number;\r\n  jumpUrl: string;\r\n  state: number;\r\n  itemId: null;\r\n  tourTagId: string;\r\n  cityId: string;\r\n  createTime: string;\r\n}\r\nexport class Advertisement {\r\n  @observable\r\n  advertisementPage: AdvertisementPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  advertisementDelete: AdvertisementDelete = {};\r\n  @observable\r\n  createAdvertisement: CreateAdvertisement = {};\r\n  @observable\r\n  advertisementSingle: AdvertisementSingle = {\r\n    id: '',\r\n    title: '',\r\n    url: '',\r\n    position: 0,\r\n    startTime: '',\r\n    endTime: '',\r\n    jump: 0,\r\n    jumpUrl: '',\r\n    state: 0,\r\n    itemId: null,\r\n    tourTagId: '',\r\n    cityId: '',\r\n    createTime: ''\r\n  };\r\n  @action\r\n  async getAdvertisementPage({ data, callback }: ReqData) {\r\n    const res = await request<AdvertisementPage>(\r\n      urlMaps.baseAdvertisement,\r\n      data,\r\n      {\r\n        method: 'GET'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.advertisementPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async DeleteAdvertisement({ data, callback }: ReqData) {\r\n    const res = await request<AdvertisementDelete>(\r\n      urlMaps.AdvertisementUrl + '?id=' + data.id,\r\n      data,\r\n      {\r\n        method: 'DELETE'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.advertisementDelete = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async CreateAdvert({ data, callback }: ReqData) {\r\n    const res = await request<CreateAdvertisement>(\r\n      urlMaps.AdvertisementUrl,\r\n      data,\r\n      {\r\n        method: 'POST'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.createAdvertisement = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async EditAdvert({ data, callback }: ReqData) {\r\n    const res = await request<CreateAdvertisement>(\r\n      urlMaps.AdvertisementUrl,\r\n      data,\r\n      {\r\n        method: 'PUT'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.createAdvertisement = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getAdvertisementSingle({ data, callback }: ReqData) {\r\n    const res = await request<AdvertisementSingle>(\r\n      urlMaps.AdvertisementUrl,\r\n      data,\r\n      {\r\n        method: 'GET'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.advertisementSingle = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n}\r\nexport default Advertisement;\r\n","import { observable, action } from 'mobx';\r\nimport request, { urlMaps, ResData, ReqData } from '../common/request';\r\nexport interface CommentPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface CommentDelete {}\r\n\r\nexport interface CommentSingle {\r\n  id: string;\r\n  title: string;\r\n  subtitle: string;\r\n  state: number;\r\n  startTime: string;\r\n  endTime: string;\r\n  sort: number;\r\n}\r\nexport class Comment {\r\n  @observable\r\n  commentPage: CommentPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  commentDelete: CommentDelete = {};\r\n  @action\r\n  async getCommentPage({ data, callback }: ReqData) {\r\n    const res = await request<CommentPage>(urlMaps.baseComment, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.commentPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async DeleteComment({ data, callback }: ReqData) {\r\n    const res = await request<CommentPage>(\r\n      urlMaps.baseCommentUrl + '?id=' + data.id,\r\n      data,\r\n      {\r\n        method: 'DELETE'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.commentPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n}\r\nexport default Comment;\r\n","import { observable, action } from 'mobx';\r\nimport request, { urlMaps, ResData, ReqData } from '../common/request';\r\nexport interface AnswerPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface UserAnswerPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface UserAnswerDelete {}\r\nexport interface AnswerShelf {}\r\nexport interface AnswerState {}\r\nexport interface UserAnswer {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\n\r\nexport interface AnswerSingle {\r\n  id: string;\r\n  title: string;\r\n  subtitle: string;\r\n  state: number;\r\n  startTime: string;\r\n  endTime: string;\r\n  sort: number;\r\n}\r\nexport class Answer {\r\n  @observable\r\n  answerPage: AnswerPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  userAnswer: UserAnswer = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n\r\n  @observable\r\n  userAnswerPage: UserAnswerPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n\r\n  @observable\r\n  userAnswerDelete: UserAnswerDelete = {};\r\n  @observable\r\n  answerShelf: AnswerShelf = {};\r\n  @observable\r\n  answerState: AnswerState = {};\r\n\r\n  @action\r\n  async getAnswerPage({ data, callback }: ReqData) {\r\n    const res = await request<AnswerPage>(urlMaps.baseAnswer, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.answerPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async getUserAnswer({ data, callback }: ReqData) {\r\n    const res = await request<UserAnswer>(urlMaps.baseUserAnswer, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.userAnswer = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async getUserAnswerPage({ data, callback }: ReqData) {\r\n    const res = await request<UserAnswerPage>(urlMaps.userAnswer, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.userAnswerPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async DeleteUserAnswer({ data, callback }: ReqData) {\r\n    const res = await request<UserAnswer>(\r\n      urlMaps.baseAnswerUrl + '?id=' + data.id,\r\n      data,\r\n      {\r\n        method: 'DELETE'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.userAnswerDelete = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async EnableShutDown({ data, callback }: ReqData) {\r\n    const res = await request<AnswerShelf>(urlMaps.upOrDown, data, {\r\n      method: 'PUT'\r\n    });\r\n    if (res.code === 0) {\r\n      this.answerShelf = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async EnableState({ data, callback }: ReqData) {\r\n    const res = await request<AnswerState>(urlMaps.editState, data, {\r\n      method: 'PUT'\r\n    });\r\n    if (res.code === 0) {\r\n      this.answerState = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n}\r\nexport default Answer;\r\n","import { observable, action } from 'mobx';\r\nimport request, { urlMaps, ResData, ReqData } from '../common/request';\r\nexport interface BroadcastPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface CastDelete {}\r\nexport interface CreateBroadcast {}\r\nexport interface BroadcastSingle {\r\n  id: string;\r\n  title: string;\r\n  url: string;\r\n  position: number;\r\n  startTime: string;\r\n  endTime: string;\r\n  jump: number;\r\n  jumpUrl: string;\r\n  state: number;\r\n  itemId: null;\r\n  tourTagId: string;\r\n  cityId: string;\r\n  createTime: string;\r\n}\r\nexport class Broadcast {\r\n  @observable\r\n  broadcastPage: BroadcastPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  castDelete: CastDelete = {};\r\n  @observable\r\n  createBroadcast: CreateBroadcast = {};\r\n  @observable\r\n  broadcastSingle: BroadcastSingle = {\r\n    id: '',\r\n    title: '',\r\n    url: '',\r\n    position: 0,\r\n    startTime: '',\r\n    endTime: '',\r\n    jump: 0,\r\n    jumpUrl: '',\r\n    state: 0,\r\n    itemId: null,\r\n    tourTagId: '',\r\n    cityId: '',\r\n    createTime: ''\r\n  };\r\n  @action\r\n  async getBroadcastPage({ data, callback }: ReqData) {\r\n    const res = await request<BroadcastPage>(urlMaps.baseBroadcast, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.broadcastPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async DeleteCast({ data, callback }: ReqData) {\r\n    const res = await request<CastDelete>(\r\n      urlMaps.BroadcastUrl + '?id=' + data.id,\r\n      data,\r\n      {\r\n        method: 'DELETE'\r\n      }\r\n    );\r\n\r\n    if (res.code === 0) {\r\n      this.castDelete = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async CreateBroadcast({ data, callback }: ReqData) {\r\n    const res = await request<CreateBroadcast>(urlMaps.BroadcastUrl, data, {\r\n      method: 'POST'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.createBroadcast = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async EditBroadcast({ data, callback }: ReqData) {\r\n    const res = await request<CreateBroadcast>(urlMaps.BroadcastUrl, data, {\r\n      method: 'PUT'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.createBroadcast = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getBroadcastSingle({ data, callback }: ReqData) {\r\n    const res = await request<BroadcastSingle>(urlMaps.BroadcastUrl, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.broadcastSingle = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n}\r\nexport default Broadcast;\r\n","import { observable, action } from 'mobx';\r\nimport request, { urlMaps, ResData, ReqData } from '../common/request';\r\n\r\nexport interface TravelsPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface TravelsState {}\r\nexport interface TravelsupOrDown {}\r\nexport interface TravelstravelsCommend {}\r\nexport interface TravelsSingle {\r\n  id: string;\r\n  userId: string;\r\n  createTime: string;\r\n  title: string;\r\n  content: string;\r\n  startTime: string;\r\n  state: number;\r\n  cityId: string;\r\n  city: number;\r\n  headUrl: string;\r\n  nickName: string;\r\n  shelf: number;\r\n  recommend: number;\r\n  materialType: number;\r\n  materialCount: number;\r\n  composeCount: number;\r\n  productCount: number;\r\n  userMaterialList: any;\r\n}\r\nexport class Travels {\r\n  @observable\r\n  travelsPage: TravelsPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  travelsState: TravelsState = {};\r\n  @observable\r\n  travelsupOrDown: TravelsupOrDown = {};\r\n  @observable\r\n  travelstravelsCommend: TravelstravelsCommend = {};\r\n  @observable\r\n  travelsSingle: TravelsSingle = {\r\n    id: '',\r\n    userId: '',\r\n    createTime: '',\r\n    title: '',\r\n    content: '',\r\n    startTime: '',\r\n    state: 0,\r\n    cityId: '',\r\n    city: 0,\r\n    headUrl: '',\r\n    nickName: '',\r\n    shelf: 0,\r\n    recommend: 0,\r\n    materialType: 0,\r\n    materialCount: 0,\r\n    composeCount: 0,\r\n    productCount: 0,\r\n    userMaterialList: []\r\n  };\r\n\r\n  @action\r\n  async getTravelsPage({ data, callback }: ReqData) {\r\n    const res = await request<TravelsPage>(urlMaps.travelsPage, data, {\r\n      method: 'GET'\r\n    });\r\n    if (res.code === 0) {\r\n      this.travelsPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  async getTravelsSingle({ data, callback }: ReqData) {\r\n    const res = await request<TravelsSingle>(urlMaps.baseTravels, data, {\r\n      method: 'GET'\r\n    });\r\n    if (res.code === 0) {\r\n      this.travelsSingle = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  async EditTravelsState({ data, callback }: ReqData) {\r\n    const res = await request<TravelsState>(urlMaps.travelsPass, data, {\r\n      method: 'PUT'\r\n    });\r\n    if (res.code === 0) {\r\n      this.travelsState = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  async EditTravelsupOrDown({ data, callback }: ReqData) {\r\n    const res = await request<TravelsupOrDown>(urlMaps.travelsUpOrDown, data, {\r\n      method: 'PUT'\r\n    });\r\n    if (res.code === 0) {\r\n      this.travelsupOrDown = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  async EditTravelstravelsCommend({ data, callback }: ReqData) {\r\n    const res = await request<TravelstravelsCommend>(\r\n      urlMaps.travelsCommend,\r\n      data,\r\n      {\r\n        method: 'PUT'\r\n      }\r\n    );\r\n    if (res.code === 0) {\r\n      this.travelstravelsCommend = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n}\r\nexport default Travels;\r\n","import { observable, action } from 'mobx';\r\nimport request, { urlMaps, ResData, ReqData } from '../common/request';\r\n\r\nexport interface OrderPage {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface SearchOrder {\r\n  id: string;\r\n  runningNumber: string;\r\n  type: number;\r\n  goodsId: string;\r\n  subClass: number;\r\n  price: string;\r\n  num: string;\r\n  name: string;\r\n  img: string;\r\n  businessId: string;\r\n  createTime: string;\r\n  shoppingOrderId: string;\r\n  userId: string;\r\n  nickName: string;\r\n  state: number;\r\n  shoppingOrderDetails: any;\r\n  shoppingParticipants: any;\r\n  userContacts: any;\r\n}\r\nexport interface AfterSales {\r\n  id: string;\r\n  runningNumber: string;\r\n  createTime: string;\r\n  reason: string;\r\n  phone: string;\r\n}\r\nexport class Orders {\r\n  @observable\r\n  afterSales: AfterSales = {\r\n    id: '',\r\n    runningNumber: '',\r\n    createTime: '',\r\n    reason: '',\r\n    phone: ''\r\n  };\r\n  @observable\r\n  orderPage: OrderPage = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  searchOrder: SearchOrder = {\r\n    id: '',\r\n    runningNumber: '',\r\n    type: 0,\r\n    goodsId: '',\r\n    subClass: 0,\r\n    price: '',\r\n    num: '',\r\n    name: '',\r\n    img: '',\r\n    businessId: '',\r\n    createTime: '',\r\n    shoppingOrderId: '',\r\n    userId: '',\r\n    nickName: '',\r\n    state: 0,\r\n    shoppingOrderDetails: [],\r\n    shoppingParticipants: [],\r\n    userContacts: []\r\n  };\r\n  @action\r\n  async getOrderPage({ data, callback }: ReqData) {\r\n    const res = await request<OrderPage>(urlMaps.getOrderPage, data, {\r\n      method: 'GET'\r\n    });\r\n    if (res.code === 0) {\r\n      this.orderPage = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async getSearchOrder({ data, callback }: ReqData) {\r\n    const res = await request<SearchOrder>(urlMaps.getSearchOrder, data, {\r\n      method: 'GET'\r\n    });\r\n    if (res.code === 0) {\r\n      this.searchOrder = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n  @action\r\n  async getAfterSales({ data, callback }: ReqData) {\r\n    const res = await request<AfterSales>(urlMaps.getAfterSales, data, {\r\n      method: 'GET'\r\n    });\r\n    if (res.code === 0) {\r\n      this.afterSales = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n}\r\nexport default Orders;\r\n","import { observable, action } from 'mobx';\r\nimport request, { urlMaps, ResData, ReqData } from '../common/request';\r\nexport interface UserList {\r\n  records: any[];\r\n  pages: number;\r\n  searchCount: boolean;\r\n  size: number;\r\n  total: number;\r\n  current: number;\r\n}\r\nexport interface Status {}\r\nexport class UserAdmin {\r\n  @observable\r\n  userList: UserList = {\r\n    records: [],\r\n    pages: 1,\r\n    searchCount: true,\r\n    size: 10,\r\n    total: 0,\r\n    current: 1\r\n  };\r\n  @observable\r\n  status: Status = {};\r\n  @action\r\n  async getUserList({ data, callback }: ReqData) {\r\n    const res = await request<UserList>(urlMaps.getUserList, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.userList = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async EnableShutdown({ data, callback }: ReqData) {\r\n    const res = await request<Status>(urlMaps.getUserList, data, {\r\n      method: 'GET'\r\n    });\r\n\r\n    if (res.code === 0) {\r\n      this.status = res.data;\r\n    }\r\n    if (callback) {\r\n      callback(res);\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserAdmin;\r\n","import { User } from './User';\r\nimport { Global } from './Global';\r\nimport { Resource } from './Resource';\r\nimport { System } from './System';\r\nimport { Tourisms } from './Tourism';\r\nimport { Tag } from './Tag';\r\nimport { Strategy } from './Strategy';\r\nimport { Advertisement } from './Advertisement';\r\nimport { Comment } from './Comment';\r\nimport { Answer } from './Answer';\r\nimport { Broadcast } from './Broadcast';\r\nimport { Travels } from './Travels';\r\nimport { Orders } from './Orders';\r\nimport { UserAdmin } from './UserAdmin';\r\nexport default {\r\n  user: new User(),\r\n  global: new Global(),\r\n  resource: new Resource(),\r\n  system: new System(),\r\n  tourisms: new Tourisms(),\r\n  tag: new Tag(),\r\n  strategy: new Strategy(),\r\n  advertisement: new Advertisement(),\r\n  comment: new Comment(),\r\n  answer: new Answer(),\r\n  broadcast: new Broadcast(),\r\n  travels: new Travels(),\r\n  orders: new Orders(),\r\n  userAdmin: new UserAdmin()\r\n};\r\n","import React, { ReactHTMLElement, ReactHTML, Fragment } from 'react';\r\nimport './index.less';\r\nimport { Typography } from 'antd';\r\n\r\ninterface Props {}\r\n\r\ninterface State {}\r\nconst { Text } = Typography;\r\nexport default class GlobalFooter extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: 'center' }}>\r\n        <Text type=\"secondary\"> 2019-2021</Text>\r\n        <Text type=\"secondary\">\r\n          版权所有 @ 2019-2021\r\n          {/* <a href=\"http://www.mtdyw.co/\" target=\"_blank\" rel=\"noopener noreferrer\"> \r\n          神马电影网</a> */}\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport {\r\n  Form,\r\n  Menu,\r\n  Icon,\r\n  Spin,\r\n  Tag,\r\n  Dropdown,\r\n  Avatar,\r\n  Divider,\r\n  Tooltip\r\n} from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport './index.less';\r\nimport { ClickParam } from 'antd/lib/menu';\r\nimport { inject, observer } from 'mobx-react';\r\nimport User from '../../models/User';\r\ninterface Props {\r\n  user: User;\r\n}\r\n\r\ninterface State {}\r\n\r\n@inject('user')\r\n@observer\r\nexport default class GlobalHeader extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n  }\r\n  onMenuClick = (params: ClickParam) => {\r\n    const key = params.key;\r\n    if (key === 'triggerError') {\r\n      return;\r\n    }\r\n    if (key === 'logout') {\r\n      this.props.user.logout({\r\n        data: {},\r\n        callback: res => {\r\n          if (res.code === 0) {\r\n            window.location.href = '/user/login';\r\n          }\r\n        }\r\n      });\r\n    }\r\n    if (key === 'editpass') {\r\n    }\r\n  };\r\n  render() {\r\n    const currentUser = JSON.parse(localStorage.getItem('user_cloud') || '');\r\n    const menu = (\r\n      <Menu className=\"menu\" selectedKeys={[]} onClick={this.onMenuClick}>\r\n        <Menu.Item disabled>\r\n          <Icon type=\"user\" />\r\n          个人中心\r\n        </Menu.Item>\r\n        {/* <Menu.Item key=\"editpass\">\r\n          <Link to={`/user/edit`}>\r\n            <Icon type=\"edit\" />\r\n            修改密码\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"download\">\r\n          <Link to={`/user/download`}>\r\n            <Icon type=\"download\" />\r\n            APP下载\r\n          </Link>\r\n        </Menu.Item> */}\r\n        <Menu.Divider />\r\n        <Menu.Item key=\"logout\">\r\n          <Icon type=\"logout\" />\r\n          退出登录\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n\r\n    return (\r\n      <div styleName=\"header\">\r\n        {this.props.children}\r\n\r\n        <div className=\"right\">\r\n          {/* <Link to={`/user/edit`} style={{ marginRight: '100px' }}>\r\n            <Icon type=\"edit\" />\r\n            修改密码\r\n          </Link>\r\n          <Link to={`/user/download`} style={{ marginRight: '100px' }}>\r\n            <Icon type=\"download\" />\r\n            APP下载\r\n          </Link> */}\r\n          {currentUser ? (\r\n            <Dropdown overlay={menu}>\r\n              <span className={`account`}>\r\n                {/* <Avatar\r\n                  size=\"small\"\r\n                  className=\"avatar\"\r\n                  src={\r\n                    currentUser.avatar ||\r\n                    'https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png'\r\n                  }\r\n                /> */}\r\n\r\n                <Icon type=\"smile\" theme=\"twoTone\" />\r\n                <span className=\"name\">{currentUser.username}</span>\r\n              </span>\r\n            </Dropdown>\r\n          ) : (\r\n            <Spin size=\"small\" style={{ marginLeft: 8 }} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// @inject('user')\r\n// @Form.create()\r\n// export default class xx extends React.Component<any, any> {\r\n//   render() {\r\n//     return <AddUser form={this.props.form} user={this.props.user}/>;\r\n//   }\r\n// }\r\n","import React from 'react';\r\nimport { Menu, Icon, Layout } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { getMenuData } from '../../common/menu';\r\nimport './index.less';\r\nimport store from '../../models/index';\r\nimport { observer } from 'mobx-react';\r\nconst SubMenu = Menu.SubMenu;\r\n// const menuData = getMenuData()\r\nconst { Sider } = Layout;\r\ninterface Props {\r\n  collapsed: boolean;\r\n}\r\ninterface State {\r\n  pathName: string;\r\n}\r\n@observer\r\nclass GlobalSider extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      pathName: window.location.pathname\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    store.global.getMenuData({\r\n      data: {}\r\n    });\r\n    // store\r\n  }\r\n  // componentWillReceiveProps(nextProps: Props) {\r\n  //   // const { location } = this.props;\r\n  //   // if (nextProps.location.pathname !== location.pathname) {\r\n  //   //   this.setState({\r\n  //   //     openKeys: this.getDefaultCollapsedSubMenus(nextProps)\r\n  //   //   });\r\n  //   // }\r\n  // }\r\n  // handleClick=(e:any)=>{\r\n  //   console.log('e :', e);\r\n  // }\r\n\r\n  render() {\r\n    const collapsed = this.props.collapsed;\r\n    const menu = '/' + this.state.pathName.split('/')[1];\r\n    const menuData = store.global.menuInfo;\r\n\r\n    return (\r\n      <Sider\r\n        trigger={null}\r\n        style={{\r\n          overflow: 'auto',\r\n          height: '100vh',\r\n          position: 'fixed',\r\n          left: 0\r\n        }}\r\n        collapsible\r\n        collapsed={collapsed}\r\n        breakpoint=\"lg\"\r\n        className=\"sider\"\r\n      >\r\n        <div styleName=\"logo\">\r\n          <Icon type=\"wallet\" className=\"logo-img\" />\r\n          {!collapsed && <h1>后台管理系统</h1>}\r\n        </div>\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          defaultSelectedKeys={[\r\n            // this.state.pathName?this.state.pathName.substring(0,this.state.pathName.length-1): '/menu/home',  //生产环境\r\n            this.state.pathName\r\n              ? this.state.pathName.split('/')[2]\r\n              : 'basescenery'\r\n          ]}\r\n          defaultOpenKeys={[this.state.pathName ? menu : '/resources']}\r\n          inlineCollapsed={collapsed}\r\n          // onClick={this.handleClick}\r\n        >\r\n          {menuData.data.map(item => {\r\n            if (item.children) {\r\n              return (\r\n                <SubMenu\r\n                  key={item.path}\r\n                  title={\r\n                    <span>\r\n                      <Icon type={item.icon} />\r\n                      <span>{item.name}</span>\r\n                    </span>\r\n                  }\r\n                >\r\n                  {item.children.map((subItem: any) => (\r\n                    <Menu.Item key={subItem.path}>\r\n                      <Link to={item.path + '/' + subItem.path}>\r\n                        <span>{subItem.name}</span>\r\n                      </Link>\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              );\r\n            } else {\r\n              return (\r\n                <Menu.Item key={item.path}>\r\n                  <span>\r\n                    <Link styleName=\"nav-link\" to={item.path}>\r\n                      <Icon type={item.icon} />\r\n                      <span>{item.name}</span>\r\n                    </Link>\r\n                  </span>\r\n                </Menu.Item>\r\n              );\r\n            }\r\n          })}\r\n        </Menu>\r\n      </Sider>\r\n    );\r\n  }\r\n}\r\nexport default GlobalSider;\r\n","import React from 'react';\r\nimport DocumentTitle from 'react-document-title';\r\nimport { ContainerQuery } from 'react-container-query';\r\nimport { enquireScreen, unenquireScreen } from 'enquire-js';\r\nimport classnames from 'classnames';\r\nimport { Layout, Icon } from 'antd';\r\nimport { Switch } from 'react-router-dom';\r\nimport GlobalFooter from './GlobalFooter';\r\nimport GlobalHeader from './GlobalHeader';\r\nimport GlobalSider from './GlobalSider';\r\nimport User from '../models/User';\r\nimport './BasicLayout.less';\r\n\r\ninterface Props {\r\n  user: User;\r\n}\r\n\r\ninterface State {\r\n  isMobile: boolean;\r\n  collapsed: boolean;\r\n}\r\n\r\nconst query = {\r\n  'screen-xs': {\r\n    maxWidth: 575\r\n  },\r\n  'screen-sm': {\r\n    minWidth: 576,\r\n    maxWidth: 767\r\n  },\r\n  'screen-md': {\r\n    minWidth: 768,\r\n    maxWidth: 991\r\n  },\r\n  'screen-lg': {\r\n    minWidth: 992,\r\n    maxWidth: 1199\r\n  },\r\n  'screen-xl': {\r\n    minWidth: 1200,\r\n    maxWidth: 1599\r\n  },\r\n  'screen-xxl': {\r\n    minWidth: 1600\r\n  }\r\n};\r\n\r\nlet isMobile;\r\nenquireScreen((b: any) => {\r\n  isMobile = b;\r\n}, undefined);\r\n\r\nexport default class BasicLayout extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      isMobile: false,\r\n      collapsed: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  toggle = () => {\r\n    this.setState({ collapsed: !this.state.collapsed });\r\n  };\r\n\r\n  render() {\r\n    const layout = (\r\n      <Layout>\r\n        <GlobalSider collapsed={this.state.collapsed} />\r\n        <Layout>\r\n          <Layout.Header style={{ background: '#fff', padding: 0 }}>\r\n            <GlobalHeader user={this.props.user}>\r\n              {!this.state.isMobile && (\r\n                <Icon\r\n                  className=\"trigger\"\r\n                  type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                  onClick={this.toggle}\r\n                />\r\n              )}\r\n            </GlobalHeader>\r\n          </Layout.Header>\r\n          <Layout.Content>\r\n            <Switch>{this.props.children}</Switch>\r\n          </Layout.Content>\r\n          <Layout.Footer>\r\n            <GlobalFooter />\r\n          </Layout.Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n\r\n    return (\r\n      <DocumentTitle title=\"\">\r\n        <ContainerQuery query={query}>\r\n          {params => <div className={classnames(params)}>{layout}</div>}\r\n        </ContainerQuery>\r\n      </DocumentTitle>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { Link, Redirect, Switch, Route } from 'react-router-dom';\r\nimport DocumentTitle from 'react-document-title';\r\nimport { Icon } from 'antd';\r\nimport GlobalFooter from './GlobalFooter';\r\nimport './UserLayout.less';\r\n// import logo from '../assets/logo.svg'\r\n\r\nexport default class UserLayout extends React.PureComponent {\r\n  getPageTitle() {\r\n    return '';\r\n  }\r\n\r\n  render() {\r\n    // const { routerData, match } = this.props\r\n    return (\r\n      <DocumentTitle title={this.getPageTitle()}>\r\n        <div styleName={'user-layout-container '}>\r\n          <div styleName={'user-layout-content'}>\r\n            <div styleName={'user-layout-top'}>\r\n              <div styleName={'user-layout-header'}>\r\n                <Link to=\"/\">\r\n                  <span styleName={'user-layout-title'}>后台管理系统</span>\r\n                </Link>\r\n              </div>\r\n              <div styleName={'user-layout-desc'} />\r\n            </div>\r\n            <Switch>{this.props.children}</Switch>\r\n          </div>\r\n          <GlobalFooter />\r\n        </div>\r\n      </DocumentTitle>\r\n    );\r\n  }\r\n}\r\n","import React, { KeyboardEvent, ReactElement } from 'react';\r\nimport { Form, Icon, Input, Button, Checkbox, Row, Col, message } from 'antd';\r\nimport {\r\n  WrappedFormUtils,\r\n  FormComponentProps,\r\n  RcBaseFormProps\r\n} from 'antd/lib/form/Form';\r\nvar urlencode = require('urlencode');\r\nimport { Encrypt } from '../../utils/utils';\r\nimport urlMaps, { baseUrl } from '../../common/urlMaps';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { match } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { History } from 'history';\r\nimport User from '../../models/User';\r\nimport './UserLogin.less';\r\nconst FormItem = Form.Item;\r\ninterface LoginProps extends FormComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: History;\r\n  user: User;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n  code: string;\r\n}\r\n@inject('user')\r\n@observer\r\nclass Login extends React.Component<LoginProps, State> {\r\n  constructor(props: LoginProps) {\r\n    super(props);\r\n    this.state = {\r\n      status: true,\r\n      code: new Date().getTime().toString()\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // localStorage.getItem('user_cloud') ? setTimeout(() => {\r\n    //   localStorage.removeItem('user_cloud')\r\n    //   window.location.reload()\r\n    // }, 0) : null\r\n    setTimeout(() => {\r\n      this.changeCode();\r\n    }, 500);\r\n  }\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.props.user.login({\r\n          data: {\r\n            randomStr: this.state.code,\r\n            grant_type: 'password',\r\n            scope: 'server',\r\n            type: '2',\r\n            ...values,\r\n            password: values.password\r\n            // Encrypt(values.password)\r\n          },\r\n          callback: res => {\r\n            console.log('TCL: Login -> handleSubmit -> res', res);\r\n            if (res.code === '0' || res.code === 0) {\r\n              // this.props.history.push('/admin/client');\r\n              this.props.history.push('/resources/basehotel');\r\n            } else {\r\n              this.changeCode();\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n  handleChange = () => {\r\n    this.setState({\r\n      status: false\r\n    });\r\n  };\r\n\r\n  changeCode = () => {\r\n    this.setState({\r\n      code: new Date().getTime().toString()\r\n    });\r\n  };\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 18 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n          <Col xl={24} md={24} sm={24}>\r\n            <FormItem label=\"用户名\">\r\n              {getFieldDecorator('username', {\r\n                initialValue: '',\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: '用户名格式不正确'\r\n                    // pattern: /^1[34578]\\d{9}$/,\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  size=\"large\"\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />\r\n                  }\r\n                  placeholder=\"请输入用户名\"\r\n                  readOnly={this.state.status}\r\n                  onFocus={this.handleChange}\r\n                />\r\n              )}\r\n            </FormItem>\r\n          </Col>\r\n          <Col xl={24} md={24} sm={24}>\r\n            <FormItem label=\"密码\">\r\n              {getFieldDecorator('password', {\r\n                initialValue: '',\r\n                rules: [{ required: true, message: '请输入密码' }]\r\n              })(\r\n                <Input.Password\r\n                  size=\"large\"\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\r\n                  }\r\n                  placeholder=\"请输入密码\"\r\n                  readOnly={this.state.status}\r\n                  onFocus={this.handleChange}\r\n                />\r\n              )}\r\n            </FormItem>\r\n          </Col>\r\n          <Col xl={24} md={24} sm={24}>\r\n            <FormItem label=\"验证码\">\r\n              {getFieldDecorator('code', {\r\n                rules: [{ required: true, message: '请输入验证码' }]\r\n              })(\r\n                <Input\r\n                  size=\"large\"\r\n                  prefix={\r\n                    <Icon type=\"message\" style={{ color: 'rgba(0,0,0,.25)' }} />\r\n                  }\r\n                  type=\"verification\"\r\n                  placeholder=\"请输入验证码\"\r\n                />\r\n              )}\r\n            </FormItem>\r\n          </Col>\r\n          <Col xl={24} md={24} sm={24}>\r\n            <FormItem>\r\n              <img\r\n                src={\r\n                  baseUrl + urlMaps.getCode + '?randomStr=' + this.state.code\r\n                }\r\n                style={{ width: '150px', height: '60px' }}\r\n                title=\"点击刷新\"\r\n                onClick={this.changeCode}\r\n                alt=\"\"\r\n              />\r\n            </FormItem>\r\n          </Col>\r\n          <Col xl={24} md={24} sm={24}>\r\n            <FormItem>\r\n              <Button\r\n                size=\"large\"\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                登录\r\n              </Button>\r\n            </FormItem>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create<LoginProps>()(Login);\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport urlMaps from '../../common/urlMaps';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\nconst Option = Select.Option;\r\nconst RadioButton = Radio.Button;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst { Dragger } = Upload;\r\nconst { TreeNode } = Tree;\r\nconst treeData = [\r\n  {\r\n    title: '0-0',\r\n    key: '0-0',\r\n    children: [\r\n      {\r\n        title: '0-0-0',\r\n        key: '0-0-0',\r\n        children: [\r\n          { title: '0-0-0-0', key: '0-0-0-0' },\r\n          { title: '0-0-0-1', key: '0-0-0-1' },\r\n          { title: '0-0-0-2', key: '0-0-0-2' }\r\n        ]\r\n      },\r\n      {\r\n        title: '0-0-1',\r\n        key: '0-0-1',\r\n        children: [\r\n          { title: '0-0-1-0', key: '0-0-1-0' },\r\n          { title: '0-0-1-1', key: '0-0-1-1' },\r\n          { title: '0-0-1-2', key: '0-0-1-2' }\r\n        ]\r\n      },\r\n      {\r\n        title: '0-0-2',\r\n        key: '0-0-2'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: '0-1',\r\n    key: '0-1',\r\n    children: [\r\n      { title: '0-1-0-0', key: '0-1-0-0' },\r\n      { title: '0-1-0-1', key: '0-1-0-1' },\r\n      { title: '0-1-0-2', key: '0-1-0-2' }\r\n    ]\r\n  },\r\n  {\r\n    title: '0-2',\r\n    key: '0-2'\r\n  }\r\n];\r\ninterface PrivilegeProps {\r\n  form: FormComponentProps['form'];\r\n  // onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n  fileList: any;\r\n  expandedKeys: any;\r\n  autoExpandParent: boolean;\r\n  checkedKeys: any;\r\n  selectedKeys: any;\r\n}\r\n// @Form.create()\r\n// @inject('mito')\r\n// @observer\r\nclass CreatePrivilege extends Component<PrivilegeProps, State> {\r\n  constructor(props: PrivilegeProps) {\r\n    super(props);\r\n    this.state = {\r\n      status: true,\r\n      fileList: [],\r\n      expandedKeys: ['0-0-0', '0-0-1'],\r\n      autoExpandParent: true,\r\n      checkedKeys: ['0-0-0'],\r\n      selectedKeys: []\r\n    };\r\n  }\r\n  componentDidMount() {}\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    // this.props.form.validateFields((err, values) => {\r\n    //   if (!err) {\r\n    //     const { cover_http, imgs_http, ...data_list } = values\r\n    //     this.props.data.id ?\r\n    //       this.props.mito.EditMito({\r\n    //         data: {\r\n    //           ...data_list,\r\n    //           id: this.props.data.id,\r\n    //           imgs: values.imgs.split(\"\\n\").filter((item: any) => item !== \"\")\r\n    //         },\r\n    //         callback: res => {\r\n    //           if (res.code === 200) {\r\n    //             message.success('保存成功');\r\n    //             if (this.props.onClose) {\r\n    //               this.props.onClose();\r\n    //             }\r\n    //           }\r\n    //         },\r\n    //       }) :\r\n    //       this.props.mito.CreateMito({\r\n    //         data: {\r\n    //           ...data_list,\r\n    //           imgs: values.imgs.split(\"\\n\").filter((item: any) => item !== \"\")\r\n    //         },\r\n    //         callback: res => {\r\n    //           if (res.code === 200) {\r\n    //             message.success('保存成功');\r\n    //             if (this.props.onClose) {\r\n    //               this.props.onClose();\r\n    //             }\r\n    //           }\r\n    //         },\r\n    //       })\r\n    //   }\r\n    // });\r\n  };\r\n  onExpand = (expandedKeys: any) => {\r\n    console.log('onExpand', expandedKeys);\r\n    // if not set autoExpandParent to false, if children expanded, parent can not collapse.\r\n    // or, you can remove all expanded children keys.\r\n    this.setState({\r\n      expandedKeys,\r\n      autoExpandParent: false\r\n    });\r\n  };\r\n\r\n  onCheck = (checkedKeys: any) => {\r\n    console.log('onCheck', checkedKeys);\r\n    this.setState({ checkedKeys });\r\n  };\r\n\r\n  onSelect = (selectedKeys: any, info: any) => {\r\n    console.log('onSelect', info);\r\n    this.setState({ selectedKeys });\r\n  };\r\n\r\n  renderTreeNodes = (data: any) =>\r\n    data.map((item: any) => {\r\n      if (item.children) {\r\n        return (\r\n          <TreeNode title={item.title} key={item.key} dataRef={item}>\r\n            {this.renderTreeNodes(item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n      return <TreeNode key={item.key} {...item} />;\r\n    });\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const isEdit = this.props.data;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    let baseUrl =\r\n      window.location.protocol +\r\n      '//' +\r\n      document.domain +\r\n      ':' +\r\n      window.location.port +\r\n      '/api';\r\n    return (\r\n      <Card\r\n        bordered={false}\r\n        title={isEdit ? '编辑权限' : '添加权限'}\r\n        className=\"CreateMito\"\r\n      >\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"权限名称\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('title', {\r\n                  // initialValue: isEdit ? info_default.title : \"\",\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '权限名称'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入权限名称\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"权限设置\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('title', {\r\n                  // initialValue: isEdit ? info_default.title : \"\",\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '权限设置'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Tree\r\n                    checkable\r\n                    onExpand={this.onExpand}\r\n                    expandedKeys={this.state.expandedKeys}\r\n                    autoExpandParent={this.state.autoExpandParent}\r\n                    onCheck={this.onCheck}\r\n                    checkedKeys={this.state.checkedKeys}\r\n                    onSelect={this.onSelect}\r\n                    selectedKeys={this.state.selectedKeys}\r\n                  >\r\n                    {this.renderTreeNodes(treeData)}\r\n                  </Tree>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n\r\n            <Col xl={12} md={24} sm={24} offset={6}>\r\n              <div className=\"submitButtons\">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  确定\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create<PrivilegeProps>()(CreatePrivilege);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from './Table';\r\nimport CreatePrivilege from './CreatePrivilege';\r\nimport { observer, inject } from 'mobx-react';\r\nimport System from '../../models/System';\r\ninterface MenuProps {\r\n  form: FormComponentProps['form'];\r\n  system: System;\r\n}\r\ninterface MenuState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: object;\r\n  pagination: TableListPagination;\r\n}\r\n@inject('system')\r\n@observer\r\nclass PrivilegeManagement extends React.Component<MenuProps, MenuState> {\r\n  constructor(props: MenuProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '角色',\r\n          dataIndex: 'roleName'\r\n        },\r\n        {\r\n          title: '状态',\r\n          dataIndex: 'url'\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {/* <Popconfirm\r\n                title=\"你确定启用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">启用</a>\r\n              </Popconfirm>\r\n              <Popconfirm\r\n                title=\"你确定停用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">停用</a>\r\n              </Popconfirm> */}\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreatePrivilege(record)}\r\n              >\r\n                编辑\r\n              </a>\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getPrivilegePage();\r\n  }\r\n  getPrivilegePage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        if (params.current === 1) {\r\n          params.ts = new Date().valueOf();\r\n        } else {\r\n          // params.ts = this.props.message.messagePage.ts;\r\n        }\r\n        if (!params.page_size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.system.getPrevilePage({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('PrivilegePage error');\r\n      }\r\n    });\r\n  };\r\n  EnableShutdown = (record: object) => {\r\n    // this.props.mito.DeleteMito({\r\n    //   data: {\r\n    //     id:  record.id\r\n    //     )\r\n    //   },\r\n    //   callback: (res) => {\r\n    //     if (res.code === 200) {\r\n    //       message.success(res.msg || \"操作成功\")\r\n    //       this.getMitoList();\r\n    //     } else {\r\n    //       message.error(res.msg || \"操作失败\")\r\n    //     }\r\n    //   }\r\n    // })\r\n  };\r\n  isCreatePrivilege = (bool: boolean) => {\r\n    this.setState({\r\n      visible: bool\r\n    });\r\n  };\r\n  CreatePrivilege = (item?: any) => {\r\n    console.log('TCL: PrivilegeManagement -> CreatePrivilege -> item', item);\r\n    this.isCreatePrivilege(true);\r\n    this.setState({\r\n      currItem: item\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isCreatePrivilege(false);\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 0;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  render() {\r\n    const info = this.props.system.previlePage;\r\n    return (\r\n      <Card\r\n        title=\"角色管理\"\r\n        bordered={false}\r\n        // loading={this.state.loading}\r\n      >\r\n        {this.state.visible && (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width={900}\r\n            onCancel={() => this.isCreatePrivilege(false)}\r\n            footer={null}\r\n          >\r\n            <CreatePrivilege\r\n              data={this.state.currItem}\r\n              // onClose={() => {\r\n              //     this.PropsInfo(false);\r\n              //     this.getMitoList({\r\n              //         page_size: this.state.pagination.page_size,\r\n              //         page: this.state.pagination.current,\r\n              //     });\r\n              // }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Col xl={12} md={24} sm={24} style={{ marginBottom: '10px' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"listsearch\"\r\n              onClick={() => {\r\n                this.CreatePrivilege();\r\n              }}\r\n            >\r\n              添加角色\r\n            </Button>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<MenuProps>()(PrivilegeManagement);\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport urlMaps from '../../common/urlMaps';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\nconst Option = Select.Option;\r\nconst RadioButton = Radio.Button;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst { Dragger } = Upload;\r\ninterface SupplyProps {\r\n  form: FormComponentProps['form'];\r\n  // onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n}\r\n// @Form.create()\r\n// @inject('mito')\r\n// @observer\r\nclass CreateSupply extends Component<SupplyProps, State> {\r\n  constructor(props: SupplyProps) {\r\n    super(props);\r\n    this.state = {\r\n      status: true\r\n    };\r\n  }\r\n  componentDidMount() {}\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    // this.props.form.validateFields((err, values) => {\r\n    //   if (!err) {\r\n    //     const { cover_http, imgs_http, ...data_list } = values\r\n    //     this.props.data.id ?\r\n    //       this.props.mito.EditMito({\r\n    //         data: {\r\n    //           ...data_list,\r\n    //           id: this.props.data.id,\r\n    //           imgs: values.imgs.split(\"\\n\").filter((item: any) => item !== \"\")\r\n    //         },\r\n    //         callback: res => {\r\n    //           if (res.code === 200) {\r\n    //             message.success('保存成功');\r\n    //             if (this.props.onClose) {\r\n    //               this.props.onClose();\r\n    //             }\r\n    //           }\r\n    //         },\r\n    //       }) :\r\n    //       this.props.mito.CreateMito({\r\n    //         data: {\r\n    //           ...data_list,\r\n    //           imgs: values.imgs.split(\"\\n\").filter((item: any) => item !== \"\")\r\n    //         },\r\n    //         callback: res => {\r\n    //           if (res.code === 200) {\r\n    //             message.success('保存成功');\r\n    //             if (this.props.onClose) {\r\n    //               this.props.onClose();\r\n    //             }\r\n    //           }\r\n    //         },\r\n    //       })\r\n    //   }\r\n    // });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const isEdit = this.props.data;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    let baseUrl =\r\n      window.location.protocol +\r\n      '//' +\r\n      document.domain +\r\n      ':' +\r\n      window.location.port +\r\n      '/api';\r\n    return (\r\n      <Card\r\n        bordered={false}\r\n        title={isEdit ? '编辑供应商' : '添加供应商'}\r\n        className=\"CreateMito\"\r\n      >\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"供应商\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('title', {\r\n                  // initialValue: isEdit ? info_default.title : \"\",\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '供应商'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入供应商\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"密码\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('title', {\r\n                  // initialValue: isEdit ? info_default.title : \"\",\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '密码'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入密码\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"联系人\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('title', {\r\n                  // initialValue: isEdit ? info_default.title : \"\",\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '联系人'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入联系人\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"电话\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('title', {\r\n                  // initialValue: isEdit ? info_default.title : \"\",\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '电话'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入电话\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"权限\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('title', {\r\n                  // initialValue: isEdit ? info_default.title : \"\",\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '权限'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    defaultValue=\"lucy\"\r\n                    style={{ width: 300 }}\r\n                    placeholder=\"选择权限\"\r\n                    // onChange={handleChange}\r\n                  >\r\n                    <Option value=\"jack\">Jack</Option>\r\n                    <Option value=\"lucy\">Lucy</Option>\r\n                    <Option value=\"disabled\" disabled>\r\n                      Disabled\r\n                    </Option>\r\n                    <Option value=\"Yiminghe\">yiminghe</Option>\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n\r\n            <Col xl={12} md={24} sm={24} offset={6}>\r\n              <div className=\"submitButtons\">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  确定\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create<SupplyProps>()(CreateSupply);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from './Table';\r\nimport CreatePrivilege from './CreateSupply';\r\n\r\ninterface SupplyProps {\r\n  form: FormComponentProps['form'];\r\n}\r\ninterface SupplyState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: object;\r\n  pagination: TableListPagination;\r\n}\r\nclass SupplierManagement extends React.Component<SupplyProps, SupplyState> {\r\n  constructor(props: SupplyProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '供应商',\r\n          dataIndex: 'name'\r\n        },\r\n        {\r\n          title: '联系人',\r\n          dataIndex: 'url'\r\n        },\r\n        {\r\n          title: '电话',\r\n          dataIndex: 'url'\r\n        },\r\n        {\r\n          title: '权限',\r\n          dataIndex: 'url'\r\n        },\r\n        {\r\n          title: '状态',\r\n          dataIndex: 'url'\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              <Popconfirm\r\n                title=\"你确定启用吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">启用</a>\r\n              </Popconfirm>\r\n              <Popconfirm\r\n                title=\"你确定停用吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">停用</a>\r\n              </Popconfirm>\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreatePrivilege(record)}\r\n              >\r\n                编辑\r\n              </a>\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {}\r\n  getPrivilegePage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        if (params.current === 1) {\r\n          params.ts = new Date().valueOf();\r\n        } else {\r\n          // params.ts = this.props.message.messagePage.ts;\r\n        }\r\n        if (!params.page_size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        // this.props.message.getMessagePage({\r\n        //   data: {\r\n        //     ...payload,\r\n        //   },\r\n\r\n        //   callback: res => {\r\n        //     if (res.code === 200) {\r\n        //       this.setState({\r\n        //         loading: false\r\n        //       })\r\n        //     }\r\n        //   },\r\n        // });\r\n      } else {\r\n        console.log('PrivilegePage error');\r\n      }\r\n    });\r\n  };\r\n  EnableShutdown = (record: object) => {\r\n    // this.props.mito.DeleteMito({\r\n    //   data: {\r\n    //     id:  record.id\r\n    //     )\r\n    //   },\r\n    //   callback: (res) => {\r\n    //     if (res.code === 200) {\r\n    //       message.success(res.msg || \"操作成功\")\r\n    //       this.getMitoList();\r\n    //     } else {\r\n    //       message.error(res.msg || \"操作失败\")\r\n    //     }\r\n    //   }\r\n    // })\r\n  };\r\n  isCreatePrivilege = (bool: boolean) => {\r\n    this.setState({\r\n      visible: bool\r\n    });\r\n  };\r\n  CreatePrivilege = (item?: any) => {\r\n    console.log('TCL: SupplierManagement -> CreatePrivilege -> item', item);\r\n    this.isCreatePrivilege(true);\r\n    this.setState({\r\n      currItem: item\r\n    });\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 0;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  render() {\r\n    return (\r\n      <Card\r\n        title=\"供应商管理\"\r\n        bordered={false}\r\n        // loading={this.state.loading}\r\n      >\r\n        {this.state.visible && (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width={900}\r\n            onCancel={() => this.isCreatePrivilege(false)}\r\n            footer={null}\r\n          >\r\n            <CreatePrivilege\r\n              // form={this.props.form}\r\n              // mito={this.props.mito}\r\n              // system={this.props.system}\r\n              data={this.state.currItem}\r\n              // onClose={() => {\r\n              //     this.PropsInfo(false);\r\n              //     this.getMitoList({\r\n              //         page_size: this.state.pagination.page_size,\r\n              //         page: this.state.pagination.current,\r\n              //     });\r\n              // }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Col xl={12} md={24} sm={24} style={{ marginBottom: '10px' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"listsearch\"\r\n              onClick={() => {\r\n                this.CreatePrivilege();\r\n              }}\r\n            >\r\n              添加供应商\r\n            </Button>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={[]}\r\n              pagination={{\r\n                // ...this.state.pagination,\r\n                // total: info.total,\r\n                // current: info.page,\r\n                showQuickJumper: true,\r\n                hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<SupplyProps>()(SupplierManagement);\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport urlMaps from '../../common/urlMaps';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport NewBraft from '../../components/BraftEditor';\r\nimport store from '../../models/index';\r\nimport BraftEditor, { EditorState } from 'braft-editor';\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css';\r\nimport '../../components/BraftEditor/index.less';\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\nconst Option = Select.Option;\r\nconst RadioButton = Radio.Button;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst { Dragger } = Upload;\r\ninterface ScenicProps {\r\n  form: FormComponentProps['form'];\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n}\r\n@inject('resource')\r\n@observer\r\nclass CreateScenicSpot extends Component<ScenicProps, State> {\r\n  constructor(props: ScenicProps) {\r\n    super(props);\r\n    this.state = {\r\n      status: true\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.data &&\r\n      store.resource.getScenicSpotSingle({\r\n        data: { id: this.props.data.id },\r\n        callback: (res: any) => {\r\n          if (res.code === 0) {\r\n            this.props.form.setFieldsValue({\r\n              introduce: BraftEditor.createEditorState(res.data.introduce),\r\n              convenient: BraftEditor.createEditorState(res.data.convenient)\r\n            });\r\n          }\r\n        }\r\n      });\r\n    store.global.getCityList({\r\n      data: {}\r\n    });\r\n  }\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.props.data\r\n          ? store.resource.EditScenicSpot({\r\n              data: {\r\n                id: this.props.data.id,\r\n                ...values,\r\n                introduce: values.introduce.toHTML(),\r\n                convenient: values.convenient.toHTML()\r\n              },\r\n              callback: res => {\r\n                if (res.code === 0) {\r\n                  message.success('保存成功');\r\n                  if (this.props.onClose) {\r\n                    this.props.onClose();\r\n                  }\r\n                }\r\n              }\r\n            })\r\n          : store.resource.CreateScenicSpot({\r\n              data: {\r\n                ...values,\r\n                introduce: values.introduce.toHTML(),\r\n                convenient: values.convenient.toHTML()\r\n              },\r\n              callback: res => {\r\n                if (res.code === 0) {\r\n                  message.success('保存成功');\r\n                  if (this.props.onClose) {\r\n                    this.props.onClose();\r\n                  }\r\n                }\r\n              }\r\n            });\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const CityList = store.global.cityList;\r\n    console.log('TCL: CreateScenicSpot -> render -> CityList', CityList);\r\n    const isEdit = this.props.data !== undefined;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const singleInfo = store.resource.scenicCreateSingle;\r\n    let baseUrl =\r\n      window.location.protocol +\r\n      '//' +\r\n      document.domain +\r\n      ':' +\r\n      window.location.port +\r\n      '/api';\r\n    return (\r\n      <Card\r\n        bordered={false}\r\n        title={isEdit ? '编辑景点' : '添加景点'}\r\n        className=\"CreateMito\"\r\n      >\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"景点名称\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('name', {\r\n                  initialValue: isEdit ? singleInfo.name : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '景点名称'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入景点名称\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"所属城市\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('city', {\r\n                  initialValue: isEdit ? singleInfo.city : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '所属城市'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    style={{ width: 300 }}\r\n                    placeholder=\"选择所属城市\"\r\n                    // onChange={handleChange}\r\n                  >\r\n                    {CityList.map((item: any, index: number) => (\r\n                      <Option key={item.id} value={item.id}>\r\n                        {item.name}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem {...formItemLayout} label=\"便捷信息\">\r\n                {getFieldDecorator('convenient', {\r\n                  initialValue: isEdit\r\n                    ? BraftEditor.createEditorState(singleInfo.convenient)\r\n                    : BraftEditor.createEditorState(null),\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '请输入便捷信息'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <BraftEditor\r\n                    className=\"my-editor\"\r\n                    style={{ width: '750px' }}\r\n                    excludeControls={[\r\n                      'link',\r\n                      'code',\r\n                      'media',\r\n                      'clear',\r\n                      'blockquote'\r\n                    ]}\r\n                    placeholder=\"请输入正文内容\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem {...formItemLayout} label=\"景点介绍\">\r\n                {getFieldDecorator('introduce', {\r\n                  initialValue: isEdit\r\n                    ? BraftEditor.createEditorState(singleInfo.introduce)\r\n                    : BraftEditor.createEditorState(null),\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '请输入景点介绍'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <BraftEditor\r\n                    className=\"my-editor\"\r\n                    style={{ width: '750px' }}\r\n                    excludeControls={[\r\n                      'link',\r\n                      'code',\r\n                      'media',\r\n                      'clear',\r\n                      'blockquote'\r\n                    ]}\r\n                    placeholder=\"请输入正文内容\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={12} md={24} sm={24} offset={6}>\r\n              <div className=\"submitButtons\">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  确定\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create<ScenicProps>()(CreateScenicSpot);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Resource from '../../models/Resource';\r\nimport Global from '../../models/Global';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport CreateScenicSpot from './CreateScenicSpot';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface ScenicProps {\r\n  form: FormComponentProps['form'];\r\n  resource: Resource;\r\n  global: Global;\r\n}\r\ninterface ScenicState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: any;\r\n  pagination: TableListPagination;\r\n}\r\n@inject('resource', 'global')\r\n@observer\r\nclass ScenicSpot extends React.Component<ScenicProps, ScenicState> {\r\n  constructor(props: ScenicProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '景点',\r\n          dataIndex: 'name'\r\n        },\r\n        {\r\n          title: '所属城市',\r\n          dataIndex: 'city'\r\n        },\r\n        {\r\n          title: '便捷信息',\r\n          dataIndex: 'convenient',\r\n          render: (text: string) => (\r\n            <div dangerouslySetInnerHTML={{ __html: text }}></div>\r\n          )\r\n        },\r\n        {\r\n          title: '景点介绍',\r\n          dataIndex: 'introduce',\r\n          render: (text: string) => (\r\n            <div dangerouslySetInnerHTML={{ __html: text }}></div>\r\n          )\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {/* <Popconfirm\r\n                title=\"你确定启用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">启用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定停用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">停用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" /> */}\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreatePrivilege(record)}\r\n              >\r\n                编辑\r\n              </a>\r\n              {/* <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm> */}\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getScenicSpot();\r\n    this.props.global.getCityList({\r\n      data: {}\r\n    });\r\n  }\r\n  getScenicSpot = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        // if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.page_size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.resource.getScenicSpot({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('PrivilegePage error');\r\n      }\r\n    });\r\n  };\r\n  DeleteSingle = (record: { id: string }) => {\r\n    this.props.resource.DeleteScenic({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getScenicSpot();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  EnableShutdown = (record: object) => {\r\n    // this.props.mito.DeleteMito({\r\n    //   data: {\r\n    //     id:  record.id\r\n    //     )\r\n    //   },\r\n    //   callback: (res) => {\r\n    //     if (res.code === 200) {\r\n    //       message.success(res.msg || \"操作成功\")\r\n    //       this.getMitoList();\r\n    //     } else {\r\n    //       message.error(res.msg || \"操作失败\")\r\n    //     }\r\n    //   }\r\n    // })\r\n  };\r\n  isCreatePrivilege = (bool: boolean) => {\r\n    this.setState({\r\n      visible: bool\r\n    });\r\n  };\r\n  CreatePrivilege = (item?: any) => {\r\n    this.isCreatePrivilege(true);\r\n    this.setState({\r\n      currItem: item\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isCreatePrivilege(false);\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getScenicSpot({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getScenicSpot(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = this.props.resource.scenicPage;\r\n    const { getFieldDecorator } = this.props.form;\r\n    const CityList = this.props.global.cityList;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    return (\r\n      <Card title=\"景点管理\" bordered={false} loading={this.state.loading}>\r\n        {this.state.visible && (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width={1100}\r\n            onCancel={() => this.isCreatePrivilege(false)}\r\n            footer={null}\r\n          >\r\n            <CreateScenicSpot\r\n              data={this.state.currItem}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getScenicSpot({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row\r\n              gutter={{ md: 8, lg: 24, xl: 48 }}\r\n              style={{ marginTop: '20px' }}\r\n            >\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"景点名称\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('name')(<Input placeholder=\"景点名称\" />)}\r\n                </FormItem>\r\n              </Col>\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"搜索城市\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('city')(\r\n                    <Select style={{ width: 200 }} placeholder=\"请选择搜索城市\">\r\n                      {CityList.map((item: any, index: number) => (\r\n                        <Option key={item.id} value={item.id}>\r\n                          {item.name}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col\r\n                xl={10}\r\n                md={24}\r\n                sm={24}\r\n                offset={2}\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <div className=\"submitButtons\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"listsearch\"\r\n                  >\r\n                    查询\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Col xl={12} md={24} sm={24} style={{ marginBottom: '10px' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"listsearch\"\r\n              onClick={() => {\r\n                this.CreatePrivilege();\r\n              }}\r\n            >\r\n              添加景点\r\n            </Button>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<ScenicProps>()(ScenicSpot);\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport urlMaps from '../../common/urlMaps';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport NewBraft from '../../components/BraftEditor';\r\nimport store from '../../models/index';\r\nimport BraftEditor, { EditorState } from 'braft-editor';\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css';\r\nimport '../../components/BraftEditor/index.less';\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\nconst Option = Select.Option;\r\nconst RadioButton = Radio.Button;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst { Dragger } = Upload;\r\ninterface HotelProps {\r\n  form: FormComponentProps['form'];\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n}\r\n@inject('resource')\r\n@observer\r\nclass CreateHotel extends Component<HotelProps, State> {\r\n  constructor(props: HotelProps) {\r\n    super(props);\r\n    this.state = {\r\n      status: true\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.data &&\r\n      store.resource.getHotelSingle({\r\n        data: { id: this.props.data.id },\r\n        callback: (res: any) => {\r\n          if (res.code === 0) {\r\n            this.props.form.setFieldsValue({\r\n              introduce: BraftEditor.createEditorState(res.data.introduce)\r\n            });\r\n          }\r\n        }\r\n      });\r\n    store.global.getCityList({\r\n      data: {}\r\n    });\r\n  }\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      console.log('TCL: handleSubmit -> values', values);\r\n      if (!err) {\r\n        this.props.data\r\n          ? store.resource.EditHotel({\r\n              data: {\r\n                id: this.props.data.id,\r\n                ...values,\r\n                introduce: values.introduce.toHTML()\r\n              },\r\n              callback: res => {\r\n                if (res.code === 0) {\r\n                  message.success('保存成功');\r\n                  if (this.props.onClose) {\r\n                    this.props.onClose();\r\n                  }\r\n                }\r\n              }\r\n            })\r\n          : store.resource.CreateHotel({\r\n              data: {\r\n                ...values,\r\n                introduce: values.introduce.toHTML()\r\n              },\r\n              callback: res => {\r\n                if (res.code === 0) {\r\n                  message.success('保存成功');\r\n                  if (this.props.onClose) {\r\n                    this.props.onClose();\r\n                  }\r\n                }\r\n              }\r\n            });\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const CityList = store.global.cityList;\r\n    const isEdit = this.props.data !== undefined;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const singleInfo = store.resource.hotelSingle;\r\n    return (\r\n      <Card\r\n        bordered={false}\r\n        title={isEdit ? '编辑酒店' : '添加酒店'}\r\n        className=\"CreateMito\"\r\n      >\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"酒店名称\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('name', {\r\n                  initialValue: isEdit ? singleInfo.name : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '酒店名称'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入酒店名称\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"所属城市\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('city', {\r\n                  initialValue: isEdit ? singleInfo.city : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '所属城市'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    style={{ width: 300 }}\r\n                    placeholder=\"选择所属城市\"\r\n                    // onChange={handleChange}\r\n                  >\r\n                    {CityList.map((item: any, index: number) => (\r\n                      <Option key={item.id} value={item.id}>\r\n                        {item.name}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"酒店地址\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('address', {\r\n                  initialValue: isEdit ? singleInfo.address : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '酒店地址'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入酒店地址\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"酒店电话\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('telephone', {\r\n                  initialValue: isEdit ? singleInfo.telephone : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '酒店电话'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入酒店电话\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"星级\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('star', {\r\n                  initialValue: isEdit ? singleInfo.star : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '星级'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入星级\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"交通攻略\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('traffic', {\r\n                  initialValue: isEdit ? singleInfo.traffic : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '交通攻略'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <TextArea\r\n                    placeholder=\"请输入交通攻略\"\r\n                    autoSize={{ minRows: 5 }}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem {...formItemLayout} label=\"酒店介绍\">\r\n                {getFieldDecorator('introduce', {\r\n                  initialValue: isEdit\r\n                    ? BraftEditor.createEditorState(singleInfo.introduce)\r\n                    : BraftEditor.createEditorState(null),\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '请输入酒店介绍'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <BraftEditor\r\n                    className=\"my-editor\"\r\n                    style={{ width: '750px' }}\r\n                    excludeControls={[\r\n                      'link',\r\n                      'code',\r\n                      'media',\r\n                      'clear',\r\n                      'blockquote'\r\n                    ]}\r\n                    placeholder=\"请输入正文内容\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={12} md={24} sm={24} offset={6}>\r\n              <div className=\"submitButtons\">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  确定\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create<HotelProps>()(CreateHotel);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Resource from '../../models/Resource';\r\nimport Global from '../../models/Global';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport CreateHotel from './CreateHotel';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface HotelProps {\r\n  form: FormComponentProps['form'];\r\n  resource: Resource;\r\n  global: Global;\r\n}\r\ninterface HotelState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: any;\r\n  pagination: TableListPagination;\r\n}\r\n@inject('resource', 'global')\r\n@observer\r\nclass Hotel extends React.Component<HotelProps, HotelState> {\r\n  constructor(props: HotelProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '酒店名称',\r\n          dataIndex: 'name'\r\n        },\r\n        {\r\n          title: '所属城市',\r\n          dataIndex: 'city'\r\n        },\r\n        {\r\n          title: '星级',\r\n          dataIndex: 'star'\r\n        },\r\n        {\r\n          title: '酒店介绍',\r\n          dataIndex: 'introduce',\r\n          render: (text: string) => (\r\n            <div dangerouslySetInnerHTML={{ __html: text }}></div>\r\n          )\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {/* <Popconfirm\r\n                title=\"你确定启用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">启用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定停用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">停用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" /> */}\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreateHotel(record)}\r\n              >\r\n                编辑\r\n              </a>\r\n              {/* <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm> */}\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getHotelPage();\r\n    this.props.global.getCityList({\r\n      data: {}\r\n    });\r\n  }\r\n  getHotelPage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        //  if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.resource.getHotelPage({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getHotelPage error');\r\n      }\r\n    });\r\n  };\r\n  DeleteSingle = (record: { id: string }) => {\r\n    this.props.resource.DeleteHotel({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getHotelPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  EnableShutdown = (record: object) => {\r\n    // this.props.mito.DeleteMito({\r\n    //   data: {\r\n    //     id:  record.id\r\n    //     )\r\n    //   },\r\n    //   callback: (res) => {\r\n    //     if (res.code === 200) {\r\n    //       message.success(res.msg || \"操作成功\")\r\n    //       this.getMitoList();\r\n    //     } else {\r\n    //       message.error(res.msg || \"操作失败\")\r\n    //     }\r\n    //   }\r\n    // })\r\n  };\r\n  isCreateHotel = (bool: boolean) => {\r\n    this.setState({\r\n      visible: bool\r\n    });\r\n  };\r\n  CreateHotel = (item?: any) => {\r\n    this.isCreateHotel(true);\r\n    this.setState({\r\n      currItem: item\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isCreateHotel(false);\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getHotelPage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getHotelPage(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = this.props.resource.hotelPage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    const CityList = this.props.global.cityList;\r\n    return (\r\n      <Card title=\"酒店管理\" bordered={false} loading={this.state.loading}>\r\n        {this.state.visible && (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width={1100}\r\n            onCancel={() => this.isCreateHotel(false)}\r\n            footer={null}\r\n          >\r\n            <CreateHotel\r\n              data={this.state.currItem}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getHotelPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row\r\n              gutter={{ md: 8, lg: 24, xl: 48 }}\r\n              style={{ marginTop: '20px' }}\r\n            >\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"酒店名称\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('name')(<Input placeholder=\"酒店名称\" />)}\r\n                </FormItem>\r\n              </Col>\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"搜索城市\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('city')(\r\n                    <Select style={{ width: 200 }} placeholder=\"请选择搜索城市\">\r\n                      {CityList.map((item: any, index: number) => (\r\n                        <Option key={item.id} value={item.id}>\r\n                          {item.name}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col\r\n                xl={10}\r\n                md={24}\r\n                sm={24}\r\n                offset={2}\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <div className=\"submitButtons\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"listsearch\"\r\n                  >\r\n                    查询\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Col xl={12} md={24} sm={24} style={{ marginBottom: '10px' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"listsearch\"\r\n              onClick={() => {\r\n                this.CreateHotel();\r\n              }}\r\n            >\r\n              添加酒店\r\n            </Button>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<HotelProps>()(Hotel);\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport urlMaps from '../../common/urlMaps';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport NewBraft from '../../components/BraftEditor';\r\nimport store from '../../models/index';\r\nimport BraftEditor, { EditorState } from 'braft-editor';\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css';\r\nimport '../../components/BraftEditor/index.less';\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\nconst Option = Select.Option;\r\nconst RadioButton = Radio.Button;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst { Dragger } = Upload;\r\ninterface RestaurantProps {\r\n  form: FormComponentProps['form'];\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n}\r\n@inject('resource')\r\n@observer\r\nclass CreateRestaurant extends Component<RestaurantProps, State> {\r\n  constructor(props: RestaurantProps) {\r\n    super(props);\r\n    this.state = {\r\n      status: true\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.data &&\r\n      store.resource.getRestaurantSingle({\r\n        data: { id: this.props.data.id },\r\n        callback: (res: any) => {\r\n          if (res.code === 0) {\r\n            this.props.form.setFieldsValue({\r\n              introduce: BraftEditor.createEditorState(res.data.introduce)\r\n            });\r\n          }\r\n        }\r\n      });\r\n    store.global.getCityList({\r\n      data: {}\r\n    });\r\n  }\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.props.data\r\n          ? store.resource.EditRestaurant({\r\n              data: {\r\n                id: this.props.data.id,\r\n                ...values,\r\n                introduce: values.introduce.toHTML()\r\n              },\r\n              callback: res => {\r\n                if (res.code === 0) {\r\n                  message.success('保存成功');\r\n                  if (this.props.onClose) {\r\n                    this.props.onClose();\r\n                  }\r\n                }\r\n              }\r\n            })\r\n          : store.resource.CreateRestaurant({\r\n              data: {\r\n                ...values,\r\n                introduce: values.introduce.toHTML()\r\n              },\r\n              callback: res => {\r\n                if (res.code === 0) {\r\n                  message.success('保存成功');\r\n                  if (this.props.onClose) {\r\n                    this.props.onClose();\r\n                  }\r\n                }\r\n              }\r\n            });\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const CityList = store.global.cityList;\r\n    const isEdit = this.props.data !== undefined;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const singleInfo = store.resource.restaurantSingle;\r\n    return (\r\n      <Card\r\n        bordered={false}\r\n        title={isEdit ? '编辑餐厅' : '添加餐厅'}\r\n        className=\"CreateMito\"\r\n      >\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"餐厅名称\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('name', {\r\n                  initialValue: isEdit ? singleInfo.name : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '餐厅名称'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入餐厅名称\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"所属城市\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('city', {\r\n                  initialValue: isEdit ? singleInfo.city : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '所属城市'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    style={{ width: 300 }}\r\n                    placeholder=\"选择所属城市\"\r\n                    // onChange={handleChange}\r\n                  >\r\n                    {CityList.map((item: any, index: number) => (\r\n                      <Option key={item.id} value={item.id}>\r\n                        {item.name}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"餐厅地址\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('address', {\r\n                  initialValue: isEdit ? singleInfo.address : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '餐厅地址'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入餐厅地址\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"餐厅电话\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('telephone', {\r\n                  initialValue: isEdit ? singleInfo.telephone : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '餐厅电话'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入餐厅电话\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            {/* <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"星级\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('star', {\r\n                  initialValue: isEdit ? singleInfo.star : \"\",\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '星级',\r\n                    },\r\n                  ],\r\n                })(\r\n                  <Input\r\n                    placeholder=\"请输入星级\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col> */}\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"交通攻略\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('traffic', {\r\n                  initialValue: isEdit ? singleInfo.traffic : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '交通攻略'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <TextArea\r\n                    placeholder=\"请输入交通攻略\"\r\n                    autoSize={{ minRows: 5 }}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem {...formItemLayout} label=\"餐厅介绍\">\r\n                {getFieldDecorator('introduce', {\r\n                  initialValue: isEdit\r\n                    ? BraftEditor.createEditorState(singleInfo.introduce)\r\n                    : BraftEditor.createEditorState(null),\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '请输入餐厅介绍'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <BraftEditor\r\n                    className=\"my-editor\"\r\n                    style={{ width: '750px' }}\r\n                    excludeControls={[\r\n                      'link',\r\n                      'code',\r\n                      'media',\r\n                      'clear',\r\n                      'blockquote'\r\n                    ]}\r\n                    placeholder=\"请输入正文内容\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={12} md={24} sm={24} offset={6}>\r\n              <div className=\"submitButtons\">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  确定\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create<RestaurantProps>()(CreateRestaurant);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Resource from '../../models/Resource';\r\nimport Global from '../../models/Global';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport CreateRestaurant from './CreateRestaurant';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface RestaurantProps {\r\n  form: FormComponentProps['form'];\r\n  resource: Resource;\r\n  global: Global;\r\n}\r\ninterface RestaurantState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: any;\r\n  pagination: TableListPagination;\r\n}\r\n@inject('resource', 'global')\r\n@observer\r\nclass Restaurant extends React.Component<RestaurantProps, RestaurantState> {\r\n  constructor(props: RestaurantProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '餐厅名称',\r\n          dataIndex: 'name'\r\n        },\r\n        {\r\n          title: '所属城市',\r\n          dataIndex: 'city'\r\n        },\r\n        // {\r\n        //   title: '星级',\r\n        //   dataIndex: 'star',\r\n        // },\r\n        {\r\n          title: '餐厅介绍',\r\n          dataIndex: 'introduce',\r\n          render: (text: string) => (\r\n            <div dangerouslySetInnerHTML={{ __html: text }}></div>\r\n          )\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {/* <Popconfirm\r\n                title=\"你确定启用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">启用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定停用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">停用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" /> */}\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreateRestaurant(record)}\r\n              >\r\n                编辑\r\n              </a>\r\n              {/* <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm> */}\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getRestaurantPage();\r\n    this.props.global.getCityList({\r\n      data: {}\r\n    });\r\n  }\r\n  getRestaurantPage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        // if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.page_size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.resource.getRestaurantPage({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getRestaurantPage error');\r\n      }\r\n    });\r\n  };\r\n  DeleteSingle = (record: { id: string }) => {\r\n    this.props.resource.DeleteRestaurant({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getRestaurantPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  EnableShutdown = (record: object) => {\r\n    // this.props.mito.DeleteMito({\r\n    //   data: {\r\n    //     id:  record.id\r\n    //     )\r\n    //   },\r\n    //   callback: (res) => {\r\n    //     if (res.code === 200) {\r\n    //       message.success(res.msg || \"操作成功\")\r\n    //       this.getMitoList();\r\n    //     } else {\r\n    //       message.error(res.msg || \"操作失败\")\r\n    //     }\r\n    //   }\r\n    // })\r\n  };\r\n  isCreateRestaurant = (bool: boolean) => {\r\n    this.setState({\r\n      visible: bool\r\n    });\r\n  };\r\n  CreateRestaurant = (item?: any) => {\r\n    this.isCreateRestaurant(true);\r\n    this.setState({\r\n      currItem: item\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isCreateRestaurant(false);\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getRestaurantPage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getRestaurantPage(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = this.props.resource.restaurantPage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    const CityList = this.props.global.cityList;\r\n    return (\r\n      <Card title=\"餐厅管理\" bordered={false} loading={this.state.loading}>\r\n        {this.state.visible && (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width={1100}\r\n            onCancel={() => this.isCreateRestaurant(false)}\r\n            footer={null}\r\n          >\r\n            <CreateRestaurant\r\n              data={this.state.currItem}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getRestaurantPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row\r\n              gutter={{ md: 8, lg: 24, xl: 48 }}\r\n              style={{ marginTop: '20px' }}\r\n            >\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"餐厅名称\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('name')(<Input placeholder=\"餐厅名称\" />)}\r\n                </FormItem>\r\n              </Col>\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"搜索城市\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('city')(\r\n                    <Select style={{ width: 200 }} placeholder=\"请选择搜索城市\">\r\n                      {CityList.map((item: any, index: number) => (\r\n                        <Option key={item.id} value={item.id}>\r\n                          {item.name}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col\r\n                xl={10}\r\n                md={24}\r\n                sm={24}\r\n                offset={2}\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <div className=\"submitButtons\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"listsearch\"\r\n                  >\r\n                    查询\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Col xl={12} md={24} sm={24} style={{ marginBottom: '10px' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"listsearch\"\r\n              onClick={() => {\r\n                this.CreateRestaurant();\r\n              }}\r\n            >\r\n              添加餐厅\r\n            </Button>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<RestaurantProps>()(Restaurant);\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport urlMaps from '../../common/urlMaps';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport NewBraft from '../../components/BraftEditor';\r\nimport store from '../../models/index';\r\nimport BraftEditor, { EditorState } from 'braft-editor';\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css';\r\nimport '../../components/BraftEditor/index.less';\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\nconst Option = Select.Option;\r\nconst RadioButton = Radio.Button;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst { Dragger } = Upload;\r\ninterface TripModeProps {\r\n  form: FormComponentProps['form'];\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n}\r\n@inject('resource')\r\n@observer\r\nclass CreateTripMode extends Component<TripModeProps, State> {\r\n  constructor(props: TripModeProps) {\r\n    super(props);\r\n    this.state = {\r\n      status: true\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.data &&\r\n      store.resource.getTripModeSingle({\r\n        data: { id: this.props.data.id }\r\n      });\r\n    store.global.getCityList({\r\n      data: {}\r\n    });\r\n  }\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.props.data\r\n          ? store.resource.EditTripMode({\r\n              data: {\r\n                id: this.props.data.id,\r\n                ...values\r\n              },\r\n              callback: res => {\r\n                if (res.code === 0) {\r\n                  message.success('保存成功');\r\n                  if (this.props.onClose) {\r\n                    this.props.onClose();\r\n                  }\r\n                }\r\n              }\r\n            })\r\n          : store.resource.CreateTripMode({\r\n              data: {\r\n                ...values\r\n              },\r\n              callback: res => {\r\n                if (res.code === 0) {\r\n                  message.success('保存成功');\r\n                  if (this.props.onClose) {\r\n                    this.props.onClose();\r\n                  }\r\n                }\r\n              }\r\n            });\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const isEdit = this.props.data !== undefined;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const singleInfo = store.resource.tripModeSingle;\r\n    return (\r\n      <Card\r\n        bordered={false}\r\n        title={isEdit ? '编辑出行方式' : '添加出行方式'}\r\n        className=\"CreateMito\"\r\n      >\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"出行方式\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('tirpMode', {\r\n                  initialValue: isEdit ? singleInfo.tirpMode : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '选择出行方式'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    style={{ width: 300 }}\r\n                    placeholder=\"选择出行方式\"\r\n                    // onChange={handleChange}\r\n                  >\r\n                    <Option value=\"1\">航空</Option>\r\n                    <Option value=\"2\">铁路</Option>\r\n                    <Option value=\"3\">包车</Option>\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"所属\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('subordinate', {\r\n                  initialValue: isEdit ? singleInfo.subordinate : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '请输入所属'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入所属\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"起点\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('start', {\r\n                  initialValue: isEdit ? singleInfo.start : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '请输入起点'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入起点\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"中转点\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('transfer', {\r\n                  initialValue: isEdit ? singleInfo.transfer : '',\r\n                  rules: [\r\n                    {\r\n                      required: false,\r\n                      whitespace: true,\r\n                      message: '请输入中转点'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入中转点\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"终点\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('end', {\r\n                  initialValue: isEdit ? singleInfo.end : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '请输入终点'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入终点\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"班次\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('number', {\r\n                  initialValue: isEdit ? singleInfo.number : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '请输入班次'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入班次\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"出发时间（'小时'）\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('startHour', {\r\n                  initialValue: isEdit ? singleInfo.startHour : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: \"请输入出发时间（'小时'）\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    placeholder=\"请输入出发时间（'小时'）\"\r\n                    style={{ width: '250px' }}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"出发时间（'分钟'）\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('startMin', {\r\n                  initialValue: isEdit ? singleInfo.startMin : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: \"请输入出发时间（'分钟'）\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    placeholder=\"请输入出发时间（'分钟'）\"\r\n                    style={{ width: '250px' }}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={12} md={24} sm={24} offset={6}>\r\n              <div className=\"submitButtons\">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  确定\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create<TripModeProps>()(CreateTripMode);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Resource from '../../models/Resource';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport CreateTripMode from './CreateTripMode';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Record } from 'immutable';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface TripModeProps {\r\n  form: FormComponentProps['form'];\r\n  resource: Resource;\r\n}\r\ninterface TripModeState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: any;\r\n  pagination: TableListPagination;\r\n  trip_mode: {\r\n    [index: string]: string;\r\n  };\r\n}\r\n@inject('resource', 'global')\r\n@observer\r\nclass TripMode extends React.Component<TripModeProps, TripModeState> {\r\n  constructor(props: TripModeProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      trip_mode: {\r\n        1: '航空',\r\n        2: '铁路',\r\n        3: '包车'\r\n      },\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '出行方式',\r\n          dataIndex: 'tirpMode',\r\n          render: (text: string) => <span>{this.state.trip_mode[text]}</span>\r\n        },\r\n        {\r\n          title: '所属',\r\n          dataIndex: 'subordinate'\r\n        },\r\n        {\r\n          title: '起止点',\r\n          dataIndex: 'start',\r\n          render: (text: string, record: any) => (\r\n            <div>\r\n              <span>{record.start + '---'}</span>\r\n              {record.transfer && <span>{record.transfer + '---'}</span>}\r\n              <span>{record.end}</span>\r\n            </div>\r\n          )\r\n        },\r\n        {\r\n          title: '班次',\r\n          dataIndex: 'number'\r\n        },\r\n        {\r\n          title: '出发时间',\r\n          dataIndex: 'time',\r\n          render: (text: string, record: any) => (\r\n            <span>{record.startHour + ':' + record.startMin}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {/* <Popconfirm\r\n                title=\"你确定启用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">启用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定停用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">停用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" /> */}\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreateTripMode(record)}\r\n              >\r\n                编辑\r\n              </a>\r\n              {/* <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm> */}\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getTripModePage();\r\n  }\r\n  getTripModePage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        // if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.page_size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.resource.getTripModePage({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getTripModePage error');\r\n      }\r\n    });\r\n  };\r\n  DeleteSingle = (record: { id: string }) => {\r\n    this.props.resource.DeleteTripMode({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getTripModePage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  EnableShutdown = (record: object) => {\r\n    // this.props.mito.DeleteMito({\r\n    //   data: {\r\n    //     id:  record.id\r\n    //     )\r\n    //   },\r\n    //   callback: (res) => {\r\n    //     if (res.code === 200) {\r\n    //       message.success(res.msg || \"操作成功\")\r\n    //       this.getMitoList();\r\n    //     } else {\r\n    //       message.error(res.msg || \"操作失败\")\r\n    //     }\r\n    //   }\r\n    // })\r\n  };\r\n  isCreateTripMode = (bool: boolean) => {\r\n    this.setState({\r\n      visible: bool\r\n    });\r\n  };\r\n  CreateTripMode = (item?: any) => {\r\n    this.isCreateTripMode(true);\r\n    this.setState({\r\n      currItem: item\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isCreateTripMode(false);\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getTripModePage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getTripModePage(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = this.props.resource.tripModePage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Card title=\"出行方式\" bordered={false} loading={this.state.loading}>\r\n        {this.state.visible && (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width={1100}\r\n            onCancel={() => this.isCreateTripMode(false)}\r\n            footer={null}\r\n          >\r\n            <CreateTripMode\r\n              data={this.state.currItem}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getTripModePage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row\r\n              gutter={{ md: 8, lg: 24, xl: 48 }}\r\n              style={{ marginTop: '20px' }}\r\n            >\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"搜索地点或班次\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('start')(\r\n                    <Input placeholder=\"输入地点或班次\" />\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col\r\n                xl={10}\r\n                md={24}\r\n                sm={24}\r\n                offset={2}\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <div className=\"submitButtons\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"listsearch\"\r\n                  >\r\n                    查询\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Col xl={12} md={24} sm={24} style={{ marginBottom: '10px' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"listsearch\"\r\n              onClick={() => {\r\n                this.CreateTripMode();\r\n              }}\r\n            >\r\n              添加出行方式\r\n            </Button>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<TripModeProps>()(TripMode);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal } from 'antd';\r\ninterface Props {\r\n  styleType?: any;\r\n  alt: string;\r\n  src: string;\r\n}\r\nconst PreviewImg = (Props: Props) => {\r\n  console.log('TCL: PreviewImg -> Props', Props.styleType);\r\n  const [Visible, setVisible] = useState<boolean>(false);\r\n  useEffect(() => {\r\n    setVisible(Visible);\r\n  });\r\n\r\n  return (\r\n    <span>\r\n      <img\r\n        {...Props}\r\n        alt={Props.alt}\r\n        onClick={() => setVisible(true)}\r\n        style={{\r\n          height: Props.styleType ? Props.styleType[0] : '50px',\r\n          width: Props.styleType ? Props.styleType[0] : '50px'\r\n        }}\r\n      />\r\n      {Props.src && (\r\n        <Modal\r\n          visible={Visible}\r\n          footer={null}\r\n          maskClosable={true}\r\n          onCancel={() => setVisible(false)}\r\n        >\r\n          <img\r\n            alt=\"\"\r\n            style={{ width: '100%' }}\r\n            src={Props.src.toString()}\r\n            onClick={() => setVisible(false)}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </span>\r\n  );\r\n};\r\nexport default PreviewImg;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Form, Upload, message, Button, Icon, Modal, Progress } from 'antd';\r\nimport store from '../../models/index';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { UploadFile } from 'antd/lib/upload/interface';\r\nimport './index.less';\r\ninterface Props {\r\n  isShowUploadList: boolean;\r\n  onChange?: any;\r\n  type: string;\r\n  data?: any;\r\n  uploadNumber?: number;\r\n  disabled?: boolean;\r\n}\r\ninterface State {\r\n  fileList: any;\r\n  OSSData: any;\r\n  loading: boolean;\r\n  height: string;\r\n  width: string;\r\n  previewImage: string;\r\n  previewVisible: boolean;\r\n  file: {\r\n    uid: string;\r\n    url: string;\r\n    lastModified: string;\r\n    lastModifiedDate: string;\r\n    name: string;\r\n    size: number;\r\n    type: string;\r\n    percent: number;\r\n    originFileObj: {\r\n      uid: string;\r\n      url: string;\r\n    };\r\n    status: string;\r\n    response: {\r\n      code: number;\r\n      msg: any;\r\n      data: {\r\n        filename: string;\r\n        size: string;\r\n        mimeType: string;\r\n        width: string;\r\n        height: string;\r\n      };\r\n    };\r\n    xhr: any;\r\n  };\r\n}\r\n@inject('global')\r\n@observer\r\nexport default class OssUpload extends React.Component<Props, State> {\r\n  state = {\r\n    fileList: [],\r\n    previewImage: '',\r\n    previewVisible: false,\r\n    OSSData: {\r\n      accessKeyId: '',\r\n      policy: '',\r\n      signature: '',\r\n      key: '',\r\n      host: '',\r\n      callback: '',\r\n      dir: ''\r\n    },\r\n    loading: false,\r\n    height: '',\r\n    width: '',\r\n    file: {\r\n      uid: '',\r\n      url: '',\r\n      lastModified: '',\r\n      lastModifiedDate: '',\r\n      name: '',\r\n      size: 0,\r\n      type: '',\r\n      percent: 0,\r\n      originFileObj: {\r\n        uid: '',\r\n        url: ''\r\n      },\r\n      status: '',\r\n      response: {\r\n        code: 0,\r\n        msg: null,\r\n        data: {\r\n          filename: '',\r\n          size: '',\r\n          mimeType: '',\r\n          width: '',\r\n          height: ''\r\n        }\r\n      },\r\n      xhr: null\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await store.global.getPolicy({\r\n      data: {\r\n        type: this.props.type\r\n      },\r\n      callback: (res: any) => {\r\n        if (res.code === 0) {\r\n          this.setState({\r\n            OSSData: res.data\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n  componentWillReceiveProps(nextProps: any, preState: any) {\r\n    console.log(\"TCL: OssUpload -> componentWillReceiveProps -> nextProps\", nextProps)\r\n    if (nextProps.value !== this.state.fileList) {\r\n      this.setState({\r\n        fileList: nextProps.value\r\n      });\r\n    }\r\n  }\r\n  handleChange = (info: any) => {\r\n    let fileList = [...info.fileList];\r\n    // 1. Limit the number of uploaded files\r\n    // Only to show two recent uploaded files, and old ones will be replaced by the new\r\n    if (this.props.uploadNumber) {\r\n      fileList = fileList.slice(Number('-' + this.props.uploadNumber));\r\n    }\r\n    // 2. Read from response and show file link\r\n    fileList = fileList.map(file => {\r\n      if (file.response) {\r\n        // Component will show file.url as link\r\n        file.url = file.response.url;\r\n      }\r\n      return file;\r\n    });\r\n    const isChange = fileList.find(item => item.status === 'uploading'); //非formitem情况下多个上传\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({\r\n        fileList,\r\n        file: info.file,\r\n        loading: true\r\n      });\r\n    } else if (info.file.status === 'done') {\r\n      this.props.type === '2' &&\r\n        store.global.getVideoStyle({\r\n          data: {\r\n            url: info.file.response && info.file.response.data.filename\r\n          },\r\n          callback: res => {\r\n            if (res.code === 200) {\r\n              const infoStyle = store.global.videoStyle;\r\n              this.setState(\r\n                {\r\n                  file: {\r\n                    ...this.state.file,\r\n                    ...info.file,\r\n                    response: {\r\n                      ...info.file.response,\r\n                      data: {\r\n                        ...info.file.response.data,\r\n                        height: infoStyle.data.ImageHeight.value,\r\n                        width: infoStyle.data.ImageWidth.value,\r\n                        filename:\r\n                          info.file.response.data.filename +\r\n                          '?width=' +\r\n                          infoStyle.data.ImageWidth.value +\r\n                          '&height=' +\r\n                          infoStyle.data.ImageHeight.value\r\n                      }\r\n                    }\r\n                  }\r\n                },\r\n                () => {\r\n                  this.setState(\r\n                    {\r\n                      fileList: [\r\n                        this.state.file,\r\n                        ...fileList.filter(\r\n                          (item: any) => item.uid !== this.state.file.uid\r\n                        )\r\n                      ],\r\n                      loading: false\r\n                    },\r\n                    () => {\r\n                      !isChange &&\r\n                        this.props.onChange &&\r\n                        this.props.onChange(this.state.fileList);\r\n                    }\r\n                  );\r\n                }\r\n              );\r\n            }\r\n          }\r\n        });\r\n      this.props.type !== '2' &&\r\n        this.setState(\r\n          {\r\n            fileList,\r\n            loading: false\r\n          },\r\n          () => {\r\n\r\n            !isChange &&\r\n              this.props.onChange &&\r\n              this.props.onChange(this.state.fileList.map((item: any) => {\r\n                return {\r\n                  ...item,\r\n                  response: {\r\n                    code: item.response.code,\r\n                    msg: item.response.msg,\r\n                    data: {\r\n                      ...item.response.data,\r\n                      filename: item.response.data.filename + \"?width=\" + item.response.data.width + \"&height=\" + item.response.data.height\r\n                    }\r\n                  }\r\n                }\r\n\r\n              }));\r\n          }\r\n        );\r\n    } else if (info.file.status === 'err') {\r\n      message.error('网络错误!');\r\n      this.setState({\r\n        fileList: [],\r\n        loading: false\r\n      });\r\n    }\r\n  };\r\n  transformFile = (file: any) => {\r\n    const { OSSData } = this.state;\r\n    const suffix = file.name.slice(file.name.lastIndexOf('.'));\r\n    const filename = Date.now() + suffix;\r\n    file.url = OSSData.dir + filename;\r\n    return file;\r\n  };\r\n  getExtraData = (file: any) => {\r\n    const { OSSData } = this.state;\r\n    return {\r\n      key: file.url,\r\n      OSSAccessKeyId: OSSData.accessKeyId,\r\n      policy: OSSData.policy,\r\n      Signature: OSSData.signature,\r\n      callback: OSSData.callback,\r\n      host: OSSData.host\r\n    };\r\n  };\r\n  removeListItem = (file: any) => {\r\n    this.setState({\r\n      fileList: this.state.fileList.filter(item => {\r\n        return item !== file;\r\n      })\r\n    }, () => {\r\n      this.props.onChange &&\r\n        this.props.onChange(this.state.fileList);\r\n    });\r\n  };\r\n  // downLoadFile = (value: any) => {\r\n  //   window.open(value.response.data.filename)\r\n  // }\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n  beforeUpload = (file: any) => {\r\n    const isPass =\r\n      (this.props.type === '1' &&\r\n        (file.type === 'image/jpeg' ||\r\n          file.type === 'image/png' ||\r\n          file.type === 'image/gif')) ||\r\n      (this.props.type === '2' &&\r\n        (file.type === 'video/mp4' ||\r\n          file.type === 'video/webm' ||\r\n          file.type === 'video/ogg')) ||\r\n      (this.props.type === '3' && file.type === 'application/pdf');\r\n\r\n    if (!isPass) {\r\n      message.error('上传文件格式错误!');\r\n    }\r\n    return isPass;\r\n  };\r\n  handlePreview = async (file: any) => {\r\n    console.log('TCL: handlePreview -> file', file);\r\n    this.setState({\r\n      previewImage: file.response.data.filename,\r\n      previewVisible: true,\r\n      file: file\r\n    });\r\n  };\r\n  render() {\r\n    const props = {\r\n      name: 'file',\r\n      fileList: this.state.fileList,\r\n      action: this.state.OSSData.host,\r\n      onChange: this.handleChange,\r\n      multiple: true,\r\n      transformFile: this.transformFile,\r\n      data: this.getExtraData,\r\n      onPreview: this.handlePreview,\r\n      onRemove: this.removeListItem,\r\n      beforeUpload: this.beforeUpload\r\n      // onDownload: this.downLoadFile\r\n    };\r\n    return (\r\n      <div>\r\n        <Upload\r\n          {...props}\r\n          fileList={this.state.fileList}\r\n          showUploadList={true}\r\n        >\r\n          <Button\r\n            disabled={this.props.disabled ? this.props.disabled : false}\r\n            loading={this.state.loading}\r\n            style={{ marginTop: 5 }}\r\n          >\r\n            {this.props.type === '1'\r\n              ? '上传图片'\r\n              : this.props.type === '2'\r\n                ? '上传视频'\r\n                : '上传PDF'}\r\n          </Button>\r\n        </Upload>\r\n        <Modal\r\n          visible={this.state.previewVisible}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n          width={800}\r\n        >\r\n          {this.props.type === '1' && (\r\n            <img\r\n              alt=\"example\"\r\n              style={{ width: '100%' }}\r\n              src={this.state.previewImage}\r\n            />\r\n          )}\r\n          {this.props.type === '2' && (\r\n            <video\r\n              style={{ width: '100%' }}\r\n              src={this.state.previewImage}\r\n              controls\r\n            />\r\n          )}\r\n          {this.props.type === '3' &&\r\n            this.state.previewVisible &&\r\n            (window.location.href = this.state.previewImage)}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport urlMaps from '../../common/urlMaps';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport NewBraft from '../../components/BraftEditor';\r\nimport store from '../../models/index';\r\nimport BraftEditor, { EditorState } from 'braft-editor';\r\nimport OssUpload from '../../components/Upload';\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css';\r\nimport '../../components/BraftEditor/index.less';\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\nconst Option = Select.Option;\r\nconst RadioButton = Radio.Button;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst { Dragger } = Upload;\r\ninterface PictureProps {\r\n  form: FormComponentProps['form'];\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n  type: number;\r\n}\r\n@inject('resource')\r\n@observer\r\nclass CreatePicture extends Component<PictureProps, State> {\r\n  constructor(props: PictureProps) {\r\n    super(props);\r\n    this.state = {\r\n      status: true,\r\n      type: 0\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    console.log(\r\n      'TCL: CreatePicture -> componentDidMount -> this.props.data',\r\n      this.props.data\r\n    );\r\n    await store.global.getCityList({\r\n      data: {}\r\n    });\r\n    (await this.props.data) !== undefined &&\r\n      store.resource.getPictureSingle({\r\n        data: { id: this.props.data.id },\r\n        callback: (res: any) => {\r\n          if (res.code === 0) {\r\n            this.setState({\r\n              type: +res.data.type\r\n            });\r\n          }\r\n        }\r\n      });\r\n    await store.resource.getScenicSpot({\r\n      data: { city: store.resource.pictureSingle.city }\r\n    });\r\n    await store.resource.getHotelPage({\r\n      data: { city: store.resource.pictureSingle.city }\r\n    });\r\n    await store.resource.getRestaurantPage({\r\n      data: { city: store.resource.pictureSingle.city }\r\n    });\r\n    (await this.props.data) !== undefined &&\r\n      store.global.getPictureCity({\r\n        data: { type: store.resource.pictureSingle.type }\r\n      });\r\n  }\r\n  getCity = (item?: any) => {\r\n    store.global.getPictureCity({\r\n      data: item ? { type: item } : {}\r\n    });\r\n  };\r\n  getHotel = (item?: any) => {\r\n    store.resource.getHotelPage({\r\n      data: item ? { city: item } : {}\r\n    });\r\n  };\r\n  getScenicSpot = (item?: any) => {\r\n    store.resource.getScenicSpot({\r\n      data: item ? { city: item } : {}\r\n    });\r\n  };\r\n  getRestaurantPage = (item?: any) => {\r\n    console.log('++++++', item);\r\n    store.resource.getRestaurantPage({\r\n      data: item ? { city: item } : {}\r\n    });\r\n  };\r\n  handleChangeType = (info: any) => {\r\n    this.getCity(info);\r\n  };\r\n  handleChangeCity = (info: any) => {\r\n    this.props.form.getFieldValue('type') === 2 && this.getHotel(info);\r\n    this.props.form.getFieldValue('type') === 4 && this.getScenicSpot(info);\r\n    this.props.form.getFieldValue('type') === 5 && this.getRestaurantPage(info);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      console.log('TCL: handleSubmit -> values', values);\r\n      if (!err) {\r\n        let newArr: any = [];\r\n        values.url.map((item: any, index: number) => {\r\n          newArr.push(item.response.data);\r\n        });\r\n        let arr = newArr.map((item: any, index: number) => {\r\n          return {\r\n            wide: item.width,\r\n            high: item.height,\r\n            url: item.filename\r\n          };\r\n        });\r\n        let { url, ...data_send } = values;\r\n        this.props.data\r\n          ? store.resource.EditPicture({\r\n              data: {\r\n                id: this.props.data.id,\r\n                ...values,\r\n                url: values.url[0].response.data.filename,\r\n                wide: values.url[0].response.data.width,\r\n                height: values.url[0].response.data.height\r\n              },\r\n              callback: res => {\r\n                if (res.code === 0) {\r\n                  message.success('保存成功');\r\n                  if (this.props.onClose) {\r\n                    this.props.onClose();\r\n                  }\r\n                }\r\n              }\r\n            })\r\n          : store.resource.CreatePicture({\r\n              data: {\r\n                ...data_send,\r\n                urls: arr\r\n              },\r\n              callback: res => {\r\n                if (res.code === 0) {\r\n                  message.success('保存成功');\r\n                  if (this.props.onClose) {\r\n                    this.props.onClose();\r\n                  }\r\n                }\r\n              }\r\n            });\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const singleInfo = store.resource.pictureSingle;\r\n    const isEdit = this.props.data !== undefined;\r\n    let url = singleInfo.url;\r\n    const json_img = [\r\n      {\r\n        uid: 'rc-upload-1574925611551-2',\r\n        url: 'img/15749256138437071375449767021574925617190.jpg',\r\n        lastModified: 1574400765576,\r\n        lastModifiedDate: '2019-11-22T05:32:45.576Z',\r\n        name: 'b17123b76cb838e9cc2d291f5bf62ba8.jpg',\r\n        size: 1411649,\r\n        type: 'image/jpeg',\r\n        percent: 100,\r\n        originFileObj: {\r\n          uid: 'rc-upload-1574925611551-2',\r\n          url: 'img/15749256138437071375449767021574925617190.jpg'\r\n        },\r\n        status: 'done',\r\n        thumbUrl: '',\r\n        response: {\r\n          code: 0,\r\n          msg: null,\r\n          data: {\r\n            filename:\r\n              'http://miramartravel.oss-cn-shenzhen.aliyuncs.com/img/15749256138437071375449767021574925617190.jpg',\r\n            size: '1411649',\r\n            mimeType: 'image/jpeg',\r\n            width: '1920',\r\n            height: '1080'\r\n          }\r\n        },\r\n        xhr: {}\r\n      }\r\n    ];\r\n    json_img.map((item: any, index: number) => {\r\n      if (url) {\r\n        item.name = url;\r\n        item.uid = '16549861321684';\r\n        item.url = url;\r\n        console.log(\r\n          'TCL: CreateVideo -> render ->  url.split',\r\n          url.split('com/')[1]\r\n        );\r\n        item.type = 'img/' + url.split('com/')[1].split('.')[1];\r\n        item.originFileObj.uid = '16549861321684';\r\n        item.originFileObj.url = url;\r\n        item.response.data.filename = url;\r\n        item.response.data.mimeType =\r\n          'img/' + url.split('com/')[1].split('.')[1];\r\n      }\r\n    });\r\n    return (\r\n      <Card\r\n        bordered={false}\r\n        title={isEdit ? '编辑图片' : '添加图片'}\r\n        className=\"CreateMito\"\r\n      >\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"分类\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('type', {\r\n                  initialValue: isEdit ? Number(singleInfo.type) : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '选择分类'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    style={{ width: 300 }}\r\n                    placeholder=\"请选择分类\"\r\n                    onChange={this.handleChangeType}\r\n                  >\r\n                    <Option value={2}>酒店</Option>\r\n                    <Option value={3}>城市</Option>\r\n                    <Option value={4}>景点</Option>\r\n                    <Option value={5}>餐厅</Option>\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            {this.props.form.getFieldValue('type') && (\r\n              <Col xl={24} md={24} sm={24}>\r\n                <FormItem\r\n                  label={'请选择城市'}\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('city', {\r\n                    initialValue: isEdit ? singleInfo.city : undefined,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        whitespace: true,\r\n                        message: '请选择城市'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      style={{ width: 300 }}\r\n                      placeholder={'请选择城市'}\r\n                      onChange={this.handleChangeCity}\r\n                    >\r\n                      {this.props.form.getFieldValue('type') === 3\r\n                        ? store.global.cityList.map(\r\n                            (item: any, index: number) => (\r\n                              <Option key={item.id} value={item.id}>\r\n                                {item.name}\r\n                              </Option>\r\n                            )\r\n                          )\r\n                        : store.global.pictureCity.map(\r\n                            (item: any, index: number) => (\r\n                              <Option key={item.id} value={item.id}>\r\n                                {item.name}\r\n                              </Option>\r\n                            )\r\n                          )}\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n            )}\r\n            {this.props.form.getFieldValue('type') === 2 && (\r\n              <Col xl={24} md={24} sm={24}>\r\n                <FormItem\r\n                  label={'请选择酒店'}\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('itemId', {\r\n                    initialValue: isEdit ? singleInfo.itemId : undefined,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        whitespace: true,\r\n                        message: '请选择酒店'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select style={{ width: 300 }} placeholder={'请选择酒店'}>\r\n                      {store.resource.hotelPage.records.map(\r\n                        (item: any, index: number) => (\r\n                          <Option key={item.id} value={item.id}>\r\n                            {item.name}\r\n                          </Option>\r\n                        )\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n            )}\r\n            {this.props.form.getFieldValue('type') === 4 && (\r\n              <Col xl={24} md={24} sm={24}>\r\n                <FormItem\r\n                  label={'请选择景点'}\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('itemId', {\r\n                    initialValue: isEdit ? singleInfo.itemId : undefined,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        whitespace: true,\r\n                        message: '请选择景点'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select style={{ width: 300 }} placeholder={'请选择景点'}>\r\n                      {store.resource.scenicPage.records.map(\r\n                        (item: any, index: number) => (\r\n                          <Option key={item.id} value={item.id}>\r\n                            {' '}\r\n                            {item.name}\r\n                          </Option>\r\n                        )\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n            )}\r\n            {this.props.form.getFieldValue('type') === 5 && (\r\n              <Col xl={24} md={24} sm={24}>\r\n                <FormItem\r\n                  label={'请选择餐厅'}\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('itemId', {\r\n                    initialValue: isEdit ? singleInfo.itemId : undefined,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        whitespace: true,\r\n                        message: '请选择餐厅'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select style={{ width: 300 }} placeholder={'请选择餐厅'}>\r\n                      {store.resource.restaurantPage.records.map(\r\n                        (item: any, index: number) => (\r\n                          <Option key={item.id} value={item.id}>\r\n                            {item.name}\r\n                          </Option>\r\n                        )\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n            )}\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"上传图片\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('url', {\r\n                  initialValue: isEdit ? json_img : [],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '选择图片'\r\n                    }\r\n                  ]\r\n                })(<OssUpload type={'1'} isShowUploadList={true} />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={12} md={24} sm={24} offset={6}>\r\n              <div className=\"submitButtons\">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  确定\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create<PictureProps>()(CreatePicture);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Resource from '../../models/Resource';\r\nimport PreviewImg from '../../components/PreviewImg';\r\nimport Global from '../../models/Global';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport CreatePicture from './CreatePicture';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface PictureProps {\r\n  form: FormComponentProps['form'];\r\n  resource: Resource;\r\n  global: Global;\r\n}\r\ninterface PictureState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: any;\r\n  pagination: TableListPagination;\r\n  type: {\r\n    [index: string]: string;\r\n  };\r\n}\r\n@inject('resource', 'global')\r\n@observer\r\nclass Picture extends React.Component<PictureProps, PictureState> {\r\n  constructor(props: PictureProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      type: {\r\n        2: '酒店',\r\n        3: '城市',\r\n        4: '景点',\r\n        5: '餐厅'\r\n      },\r\n      columns: [\r\n        {\r\n          title: '图片',\r\n          dataIndex: 'url',\r\n          render: (text: string) => <PreviewImg alt={'img'} src={text} />\r\n        },\r\n        {\r\n          title: '分类',\r\n          dataIndex: 'type',\r\n          render: (text: string, record: any) => (\r\n            <span>{this.state.type[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '城市',\r\n          dataIndex: 'city'\r\n        },\r\n        {\r\n          title: '景点/酒店/餐厅',\r\n          dataIndex: 'itemId'\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {/* <Popconfirm\r\n                title=\"你确定启用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">启用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定停用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">停用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" /> */}\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreatePicture(record)}\r\n              >\r\n                编辑\r\n              </a>\r\n              {/* <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm> */}\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getPicturePage();\r\n    this.props.global.getCityList({\r\n      data: {}\r\n    });\r\n  }\r\n  getPicturePage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        //  if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.resource.getPicturePage({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getPicturePage error');\r\n      }\r\n    });\r\n  };\r\n  DeleteSingle = (record: { id: string }) => {\r\n    this.props.resource.DeletePicture({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getPicturePage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  EnableShutdown = (record: object) => {\r\n    // this.props.mito.DeleteMito({\r\n    //   data: {\r\n    //     id:  record.id\r\n    //     )\r\n    //   },\r\n    //   callback: (res) => {\r\n    //     if (res.code === 200) {\r\n    //       message.success(res.msg || \"操作成功\")\r\n    //       this.getMitoList();\r\n    //     } else {\r\n    //       message.error(res.msg || \"操作失败\")\r\n    //     }\r\n    //   }\r\n    // })\r\n  };\r\n  isCreatePicture = (bool: boolean) => {\r\n    this.setState({\r\n      visible: bool\r\n    });\r\n  };\r\n  CreatePicture = (item?: any) => {\r\n    this.isCreatePicture(true);\r\n    this.setState({\r\n      currItem: item\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isCreatePicture(false);\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getPicturePage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getPicturePage(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = this.props.resource.picturePage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    const CityList = this.props.global.cityList;\r\n    return (\r\n      <Card title=\"图片管理\" bordered={false} loading={this.state.loading}>\r\n        {this.state.visible && (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width={1100}\r\n            onCancel={() => this.isCreatePicture(false)}\r\n            footer={null}\r\n          >\r\n            <CreatePicture\r\n              data={this.state.currItem}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getPicturePage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row\r\n              gutter={{ md: 8, lg: 24, xl: 48 }}\r\n              style={{ marginTop: '20px' }}\r\n            >\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"搜索分类\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('type')(\r\n                    <Select placeholder=\"请选择搜索分类\">\r\n                      <Option value=\"2\">酒店</Option>\r\n                      <Option value=\"3\">城市</Option>\r\n                      <Option value=\"4\">景点</Option>\r\n                      <Option value=\"5\">餐厅</Option>\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"搜索城市\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('city')(\r\n                    <Select style={{ width: 200 }} placeholder=\"请选择搜索城市\">\r\n                      {CityList.map((item: any, index: number) => (\r\n                        <Option key={item.id} value={item.id}>\r\n                          {item.name}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col\r\n                xl={10}\r\n                md={24}\r\n                sm={24}\r\n                offset={2}\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <div className=\"submitButtons\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"listsearch\"\r\n                  >\r\n                    查询\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Col xl={12} md={24} sm={24} style={{ marginBottom: '10px' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"listsearch\"\r\n              onClick={() => {\r\n                this.CreatePicture();\r\n              }}\r\n            >\r\n              添加图片\r\n            </Button>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<PictureProps>()(Picture);\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport urlMaps from '../../common/urlMaps';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport NewBraft from '../../components/BraftEditor';\r\nimport store from '../../models/index';\r\nimport BraftEditor, { EditorState } from 'braft-editor';\r\nimport OssUpload from '../../components/Upload';\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css';\r\nimport '../../components/BraftEditor/index.less';\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\nconst Option = Select.Option;\r\nconst RadioButton = Radio.Button;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst { Dragger } = Upload;\r\ninterface VideoProps {\r\n  form: FormComponentProps['form'];\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n}\r\n@inject('resource')\r\n@observer\r\nclass CreateVideo extends Component<VideoProps, State> {\r\n  constructor(props: VideoProps) {\r\n    super(props);\r\n    this.state = {\r\n      status: true\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.data &&\r\n      store.resource.getVideoSingle({\r\n        data: { id: this.props.data.id }\r\n      });\r\n    store.global.getCityList({\r\n      data: {}\r\n    });\r\n  }\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      console.log('TCL: CreateVideo -> handleSubmit -> values', values);\r\n      if (!err) {\r\n        this.props.data\r\n          ? store.resource.EditVideo({\r\n              data: {\r\n                id: this.props.data.id,\r\n                ...values,\r\n                url: values.url[0].response.data.filename\r\n              },\r\n              callback: res => {\r\n                if (res.code === 0) {\r\n                  message.success('保存成功');\r\n                  if (this.props.onClose) {\r\n                    this.props.onClose();\r\n                  }\r\n                }\r\n              }\r\n            })\r\n          : store.resource.CreateVideo({\r\n              data: {\r\n                ...values,\r\n                url: values.url[0].response.data.filename\r\n              },\r\n              callback: res => {\r\n                if (res.code === 0) {\r\n                  message.success('保存成功');\r\n                  if (this.props.onClose) {\r\n                    this.props.onClose();\r\n                  }\r\n                }\r\n              }\r\n            });\r\n      }\r\n    });\r\n  };\r\n  handleChange = () => {};\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const isEdit = this.props.data !== undefined;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const singleInfo = store.resource.videoSingle;\r\n    let json = [\r\n      {\r\n        uid: 'rc-upload-1574914933264-5',\r\n        url: 'video/15749153445156968682166871161574915347978.mp4',\r\n        lastModified: 1574825447064,\r\n        lastModifiedDate: '2019-11-27T03:30:47.064Z',\r\n        name: 'b0c2bb249c564e3b24785f73fea77905.mp4',\r\n        size: 901823,\r\n        type: 'video/mp4',\r\n        percent: 100,\r\n        originFileObj: {\r\n          uid: 'rc-upload-1574914933264-5',\r\n          url: 'video/15749153445156968682166871161574915347978.mp4'\r\n        },\r\n        status: 'done',\r\n        thumbUrl: '',\r\n        response: {\r\n          code: 0,\r\n          msg: null,\r\n          data: {\r\n            filename:\r\n              'http://miramartravel.oss-cn-shenzhen.aliyuncs.com/video/15749153445156968682166871161574915347978.mp4',\r\n            size: '901823',\r\n            mimeType: 'video/mp4',\r\n            width: '',\r\n            height: ''\r\n          }\r\n        },\r\n        xhr: {}\r\n      }\r\n    ];\r\n    let url = singleInfo.url;\r\n    console.log('TCL: CreateVideo -> render -> url', url);\r\n    json.map((item: any, index: number) => {\r\n      if (url) {\r\n        item.name = url;\r\n        item.uid = '16549861321684';\r\n        item.url = url.split('com/')[1];\r\n        console.log(\r\n          'TCL: CreateVideo -> render ->  url.split',\r\n          url.split('com/')[1]\r\n        );\r\n        item.type = 'video/' + url.split('com/')[1].split('.')[1];\r\n        item.originFileObj.uid = '16549861321684';\r\n        item.originFileObj.url = url.split('com/')[1];\r\n        item.response.data.filename = url;\r\n        item.response.data.mimeType =\r\n          'video/' + url.split('com/')[1].split('.')[1];\r\n      }\r\n    });\r\n    return (\r\n      <Card\r\n        bordered={false}\r\n        title={isEdit ? '编辑视频' : '添加视频'}\r\n        className=\"CreateMito\"\r\n      >\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"视频名称\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('name', {\r\n                  initialValue: isEdit ? singleInfo.name : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '请输入视频名称'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"视频名称\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"所属城市\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('city', {\r\n                  initialValue: isEdit ? singleInfo.city : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '选择城市'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select style={{ width: 300 }} placeholder=\"请选择城市\">\r\n                    {store.global.cityList.map((item: any, index: number) => (\r\n                      <Option key={item.id} value={item.id}>\r\n                        {item.name}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label={\r\n                  <span>\r\n                    上传视频&nbsp;\r\n                    <Tooltip title=\"只能上传一个视频！！！\">\r\n                      <Icon type=\"info-circle\" />\r\n                    </Tooltip>\r\n                  </span>\r\n                }\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('url', {\r\n                  initialValue: isEdit ? json : [],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      // whitespace: true,\r\n                      message: '上传视频'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <OssUpload\r\n                    type={'2'}\r\n                    isShowUploadList={true}\r\n                    uploadNumber={1}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={12} md={24} sm={24} offset={6}>\r\n              <div className=\"submitButtons\">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  确定\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create<VideoProps>()(CreateVideo);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Resource from '../../models/Resource';\r\nimport Global from '../../models/Global';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport CreateVideo from './CreateVideo';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface VideoProps {\r\n  form: FormComponentProps['form'];\r\n  resource: Resource;\r\n  global: Global;\r\n}\r\ninterface VideoState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: any;\r\n  pagination: TableListPagination;\r\n}\r\n@inject('resource', 'global')\r\n@observer\r\nclass Video extends React.Component<VideoProps, VideoState> {\r\n  constructor(props: VideoProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '视频名称',\r\n          dataIndex: 'name'\r\n        },\r\n        {\r\n          title: '视频',\r\n          dataIndex: 'url',\r\n          render: (text: string, record: any) => (\r\n            <video\r\n              style={{ maxWidth: '150px', maxHeight: '150px' }}\r\n              src={text}\r\n              controls\r\n            ></video>\r\n          )\r\n        },\r\n        {\r\n          title: '所属城市',\r\n          dataIndex: 'city'\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {/* <Popconfirm\r\n                title=\"你确定启用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">启用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定停用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">停用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" /> */}\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreateVideo(record)}\r\n              >\r\n                编辑\r\n              </a>\r\n              {/* <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm> */}\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getVideoPage();\r\n    this.props.global.getCityList({\r\n      data: {}\r\n    });\r\n  }\r\n  getVideoPage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        // if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.page_size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.resource.getVideoPage({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getVideoPage error');\r\n      }\r\n    });\r\n  };\r\n  DeleteSingle = (record: { id: string }) => {\r\n    this.props.resource.DeleteVideo({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getVideoPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  EnableShutdown = (record: object) => {\r\n    // this.props.mito.DeleteMito({\r\n    //   data: {\r\n    //     id:  record.id\r\n    //     )\r\n    //   },\r\n    //   callback: (res) => {\r\n    //     if (res.code === 200) {\r\n    //       message.success(res.msg || \"操作成功\")\r\n    //       this.getMitoList();\r\n    //     } else {\r\n    //       message.error(res.msg || \"操作失败\")\r\n    //     }\r\n    //   }\r\n    // })\r\n  };\r\n  isCreateVideo = (bool: boolean) => {\r\n    this.setState({\r\n      visible: bool\r\n    });\r\n  };\r\n  CreateVideo = (item?: any) => {\r\n    this.isCreateVideo(true);\r\n    this.setState({\r\n      currItem: item\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isCreateVideo(false);\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getVideoPage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getVideoPage(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = this.props.resource.videoPage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    const CityList = this.props.global.cityList;\r\n    return (\r\n      <Card title=\"视频管理\" bordered={false} loading={this.state.loading}>\r\n        {this.state.visible && (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width={1100}\r\n            onCancel={() => this.isCreateVideo(false)}\r\n            footer={null}\r\n          >\r\n            <CreateVideo\r\n              data={this.state.currItem}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getVideoPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row\r\n              gutter={{ md: 8, lg: 24, xl: 48 }}\r\n              style={{ marginTop: '20px' }}\r\n            >\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"视频名称\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('name')(<Input placeholder=\"视频名称\" />)}\r\n                </FormItem>\r\n              </Col>\r\n\r\n              <Col\r\n                xl={10}\r\n                md={24}\r\n                sm={24}\r\n                offset={2}\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <div className=\"submitButtons\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"listsearch\"\r\n                  >\r\n                    查询\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Col xl={12} md={24} sm={24} style={{ marginBottom: '10px' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"listsearch\"\r\n              onClick={() => {\r\n                this.CreateVideo();\r\n              }}\r\n            >\r\n              添加视频\r\n            </Button>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<VideoProps>()(Video);\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree,\r\n  Tag,\r\n  Popconfirm\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport urlMaps from '../../common/urlMaps';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport NewBraft from '../../components/BraftEditor';\r\nimport store from '../../models/index';\r\nimport BraftEditor, { EditorState } from 'braft-editor';\r\nimport OssUpload from '../../components/Upload';\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css';\r\nimport '../../components/BraftEditor/index.less';\r\nimport './index.less';\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\nconst Option = Select.Option;\r\nconst RadioButton = Radio.Button;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst Products: any = [\r\n  {\r\n    name: '出行',\r\n    type: 1\r\n  },\r\n  {\r\n    name: '酒店',\r\n    type: 2\r\n  },\r\n  {\r\n    name: '城市',\r\n    type: 3\r\n  },\r\n  {\r\n    name: '景点',\r\n    type: 4\r\n  },\r\n  {\r\n    name: '餐厅',\r\n    type: 5\r\n  },\r\n  {\r\n    name: '文本',\r\n    type: 6\r\n  }\r\n];\r\nconst { Dragger } = Upload;\r\nconst Number2Data: any = {\r\n  '0': '零',\r\n  '1': '一',\r\n  '2': '二',\r\n  '3': '三',\r\n  '4': '四',\r\n  '5': '五',\r\n  '6': '六',\r\n  '7': '七',\r\n  '8': '八',\r\n  '9': '九'\r\n};\r\nconst columns: any = [\r\n  // {\r\n  //   title: '序号',\r\n  //   dataIndex: 'sort',\r\n  //   editable: false\r\n  // },\r\n  {\r\n    title: '行程',\r\n    dataIndex: 'day',\r\n    editable: false,\r\n    render: (text: string, record: any) => (\r\n      <div>{'第' + Number2Data[text] + '天'}</div>\r\n    )\r\n  },\r\n  {\r\n    title: '插入资源类型',\r\n    dataIndex: 'type',\r\n    editable: true\r\n  },\r\n  {\r\n    title: '出行方式(非必选)',\r\n    dataIndex: 'tirpType',\r\n    editable: true\r\n  },\r\n  {\r\n    title: '资源内容',\r\n    dataIndex: 'itemId',\r\n    editable: true\r\n  },\r\n  {\r\n    title: '操作',\r\n    dataIndex: 'operation'\r\n  }\r\n];\r\ninterface HotelProps {\r\n  form: FormComponentProps['form'];\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n  days: number;\r\n  sort: number;\r\n  dataSource: any[];\r\n  type: string;\r\n  tMode: string;\r\n}\r\n@inject('resource')\r\n@observer\r\nclass CreateBasicProducts extends Component<HotelProps, State> {\r\n  constructor(props: HotelProps) {\r\n    super(props);\r\n    this.state = {\r\n      status: true,\r\n      sort: 1,\r\n      days: 0,\r\n      dataSource: [],\r\n      type: '',\r\n      tMode: ''\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.data &&\r\n      store.resource.getProductSingle({\r\n        data: { id: this.props.data.id },\r\n        callback: res => {\r\n          if (res.code === 0) {\r\n            const arr = res.data.baseProductDaysList.map(\r\n              (item: any) => item.days\r\n            );\r\n            const arrSort = res.data.baseProductDaysList.map(\r\n              (item: any) => item.sort\r\n            );\r\n            this.setState({\r\n              dataSource: res.data.baseProductDaysList,\r\n              days: Math.max(...arr),\r\n              sort: Math.max(...arrSort) + 1\r\n            });\r\n          }\r\n        }\r\n      });\r\n    store.resource.getTripModePage({\r\n      data: {}\r\n    });\r\n    store.resource.getHotelPage({ data: {} });\r\n    store.global.getCityList({ data: {} });\r\n    store.resource.getScenicSpot({ data: {} });\r\n    store.resource.getRestaurantPage({ data: {} });\r\n  }\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.props.data\r\n          ? store.resource.EditBasicProducts({\r\n              data: {\r\n                id: this.props.data.id,\r\n                ...values,\r\n                pdfUrl: values.pdfUrl[0].response.data.filename,\r\n                baseProductDaysList: this.state.dataSource.map((item: any) => {\r\n                  return {\r\n                    ...item,\r\n                    productId: this.props.data.id\r\n                  };\r\n                })\r\n              },\r\n              callback: res => {\r\n                if (res.code === 0) {\r\n                  message.success('保存成功');\r\n                  if (this.props.onClose) {\r\n                    this.props.onClose();\r\n                  }\r\n                }\r\n              }\r\n            })\r\n          : store.resource.CreateBasicProducts({\r\n              data: {\r\n                ...values,\r\n                pdfUrl: values.pdfUrl[0].response.data.filename,\r\n                baseProductDaysList: this.state.dataSource\r\n              },\r\n              callback: res => {\r\n                if (res.code === 0) {\r\n                  message.success('保存成功');\r\n                  if (this.props.onClose) {\r\n                    this.props.onClose();\r\n                  }\r\n                }\r\n              }\r\n            });\r\n      }\r\n    });\r\n  };\r\n  handleDay = () => {\r\n    this.setState({\r\n      days: this.state.days + 1\r\n    });\r\n  };\r\n  handleChangeResouce = (item: any, value: any) => {\r\n    item.type = value;\r\n    this.setState({\r\n      dataSource: this.state.dataSource,\r\n      type: value\r\n    });\r\n  };\r\n  handleChageTrip = (item: any, value: any) => {\r\n    item.tirpType = value;\r\n    this.setState({\r\n      dataSource: this.state.dataSource,\r\n      tMode: value\r\n    });\r\n  };\r\n  handleChangeInfo = (item: any, value: any) => {\r\n    item.type === 6\r\n      ? (item.itemId = value.target.value)\r\n      : (item.itemId = value);\r\n    this.setState({\r\n      dataSource: this.state.dataSource\r\n    });\r\n  };\r\n  handleDelete = (value: any) => {\r\n    this.setState({\r\n      dataSource: this.state.dataSource.filter(item => {\r\n        return item !== value;\r\n      })\r\n    });\r\n  };\r\n  handleAdd = (item: any) => {\r\n    const newData = {\r\n      productId: this.props.data !== undefined ? this.props.data.id : '',\r\n      sort: this.state.sort,\r\n      type: item.type,\r\n      days: this.state.days,\r\n      itemId: '',\r\n      tirpType: 0\r\n    };\r\n    this.setState({\r\n      dataSource: [...this.state.dataSource, newData],\r\n      sort: this.state.sort + 1,\r\n      type: item.type\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log('this.state.sort', this.state.sort);\r\n\r\n    const tripModePage = store.resource.tripModePage.records.map(\r\n      (item: any, index: number) => {\r\n        return { ...item, type: '1' };\r\n      }\r\n    );\r\n    const hotelPage = store.resource.hotelPage.records.map(\r\n      (item: any, index: number) => {\r\n        return { ...item, type: '2' };\r\n      }\r\n    );\r\n    const cityList = store.global.cityList.map((item: any, index: number) => {\r\n      return { ...item, type: '3' };\r\n    });\r\n    const scenicPage = store.resource.scenicPage.records.map(\r\n      (item: any, index: number) => {\r\n        return { ...item, type: '4' };\r\n      }\r\n    );\r\n    const restaurantPage = store.resource.restaurantPage.records.map(\r\n      (item: any, index: number) => {\r\n        return { ...item, type: '5' };\r\n      }\r\n    );\r\n    let dataAll = [\r\n      ...tripModePage,\r\n      ...hotelPage,\r\n      ...cityList,\r\n      ...scenicPage,\r\n      ...restaurantPage\r\n    ];\r\n    console.log('TCL: CreateBasicProducts -> render -> dataAll', dataAll);\r\n    const { getFieldDecorator } = this.props.form;\r\n    const CityList = store.global.cityList;\r\n    const isEdit = this.props.data !== undefined;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const singleInfo = store.resource.productSingle;\r\n    let json = [\r\n      {\r\n        uid: 'rc-upload-1574914933264-5',\r\n        url: 'video/15749153445156968682166871161574915347978.mp4',\r\n        lastModified: 1574825447064,\r\n        lastModifiedDate: '2019-11-27T03:30:47.064Z',\r\n        name: 'b0c2bb249c564e3b24785f73fea77905.mp4',\r\n        size: 901823,\r\n        type: 'video/mp4',\r\n        percent: 100,\r\n        originFileObj: {\r\n          uid: 'rc-upload-1574914933264-5',\r\n          url: 'video/15749153445156968682166871161574915347978.mp4'\r\n        },\r\n        status: 'done',\r\n        thumbUrl: '',\r\n        response: {\r\n          code: 0,\r\n          msg: null,\r\n          data: {\r\n            filename:\r\n              'http://miramartravel.oss-cn-shenzhen.aliyuncs.com/video/15749153445156968682166871161574915347978.mp4',\r\n            size: '901823',\r\n            mimeType: 'video/mp4',\r\n            width: '',\r\n            height: ''\r\n          }\r\n        },\r\n        xhr: {}\r\n      }\r\n    ];\r\n    let url = singleInfo.pdfUrl;\r\n    json.map((item: any, index: number) => {\r\n      if (url) {\r\n        item.name = url;\r\n        item.uid = '16549861321684';\r\n        item.url = url.split('com/')[1];\r\n        item.type = 'video/' + url.split('com/')[1].split('.')[1];\r\n        item.originFileObj.uid = '16549861321684';\r\n        item.originFileObj.url = url.split('com/')[1];\r\n        item.response.data.filename = url;\r\n        item.response.data.mimeType =\r\n          'video/' + url.split('com/')[1].split('.')[1];\r\n      }\r\n    });\r\n\r\n    console.log('dataSource', this.state.dataSource);\r\n    return (\r\n      <Card bordered={false} title={isEdit ? '编辑基础产品' : '添加基础产品'}>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"产品类型\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('type', {\r\n                  initialValue: isEdit ? '' + singleInfo.type : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '产品类型'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select style={{ width: 200 }} placeholder=\"请选择产品类型\">\r\n                    <Option value={'1'}>国内游</Option>\r\n                    <Option value={'2'}>港澳游</Option>\r\n                    <Option value={'3'}>境外游</Option>\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"产品名称\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('name', {\r\n                  initialValue: isEdit ? singleInfo.name : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '产品名称'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入产品名称\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"副标题\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('copywriting', {\r\n                  initialValue: isEdit ? singleInfo.copywriting : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '副标题'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入副标题\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"行程天数\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('days', {\r\n                  initialValue: isEdit ? singleInfo.days : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '行程天数'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入行程天数\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"产品亮点\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('brightSpot', {\r\n                  initialValue: isEdit ? singleInfo.brightSpot : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '产品亮点'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <TextArea\r\n                    placeholder=\"请输入产品亮点\"\r\n                    autoSize={{ minRows: 5 }}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"行程\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('trip', {\r\n                  rules: [\r\n                    {\r\n                      required: this.state.dataSource ? false : true,\r\n                      message: '行程'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <div>\r\n                    <div\r\n                      style={{\r\n                        marginBottom: 16,\r\n                        marginRight: 50,\r\n                        marginLeft: 10\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        type=\"primary\"\r\n                        onClick={this.handleDay}\r\n                        style={{ marginRight: 50 }}\r\n                      >\r\n                        添加行程\r\n                      </Button>\r\n                      {this.state.days ? (\r\n                        <Tag color=\"#87d068\">\r\n                          {'第' + Number2Data[this.state.days] + '天'}\r\n                        </Tag>\r\n                      ) : null}\r\n                    </div>\r\n                    {Products.map((item: any, index: number) => (\r\n                      <Button\r\n                        type=\"primary\"\r\n                        disabled={this.state.days === 0 ? true : false}\r\n                        key={item.id}\r\n                        style={{ marginBottom: 16, marginLeft: 10 }}\r\n                        onClick={() => this.handleAdd(item)}\r\n                      >\r\n                        {item.name}\r\n                      </Button>\r\n                    ))}\r\n                    <table className={'tableSelf'}>\r\n                      <thead>\r\n                        <tr>\r\n                          {columns.map((item: any) => {\r\n                            return (\r\n                              <th key={item.dataIndex} className={'thSelf'}>\r\n                                {item.title}\r\n                              </th>\r\n                            );\r\n                          })}\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.dataSource.map(item => {\r\n                          return (\r\n                            <tr key={item.id}>\r\n                              {/* <td className={\"thSelf\"}>\r\n                                {item.sort}\r\n                              </td> */}\r\n                              <td className={'thSelf'}>\r\n                                {'第' + Number2Data[item.days] + '天'}\r\n                              </td>\r\n                              <td className={'thSelf'}>\r\n                                <FormItem label=\"\" className=\"form-inline-item\">\r\n                                  {getFieldDecorator(`type${item.sort}`, {\r\n                                    initialValue: item.type,\r\n                                    rules: [\r\n                                      {\r\n                                        required: true,\r\n                                        // whitespace: true,\r\n                                        message: '资源类型'\r\n                                      }\r\n                                    ]\r\n                                  })(\r\n                                    <Select\r\n                                      placeholder=\"请选择资源类型\"\r\n                                      disabled\r\n                                      onChange={value =>\r\n                                        this.handleChangeResouce(item, value)\r\n                                      }\r\n                                    >\r\n                                      {Products.map((item: any) => {\r\n                                        return (\r\n                                          <Option\r\n                                            key={item.id}\r\n                                            value={item.type}\r\n                                          >\r\n                                            {item.name}\r\n                                          </Option>\r\n                                        );\r\n                                      })}\r\n                                    </Select>\r\n                                  )}\r\n                                </FormItem>\r\n                              </td>\r\n                              <td className={'thSelf'}>\r\n                                {this.props.form.getFieldValue(\r\n                                  `type${item.sort}`\r\n                                ) === 1 && (\r\n                                  <FormItem\r\n                                    label=\"\"\r\n                                    className=\"form-inline-item\"\r\n                                  >\r\n                                    {getFieldDecorator(`tirpType${item.sort}`, {\r\n                                      initialValue: isEdit\r\n                                        ? item.tirpType === 0\r\n                                          ? undefined\r\n                                          : item.tirpType\r\n                                        : undefined,\r\n                                      rules: [\r\n                                        {\r\n                                          required: true,\r\n                                          // whitespace: true,\r\n                                          message: '资源类型'\r\n                                        }\r\n                                      ]\r\n                                    })(\r\n                                      <Select\r\n                                        placeholder=\"请选择内容\"\r\n                                        style={{ width: 120 }}\r\n                                        onChange={value =>\r\n                                          this.handleChageTrip(item, value)\r\n                                        }\r\n                                      >\r\n                                        <Option value={1}>航空</Option>\r\n                                        <Option value={2}>铁路</Option>\r\n                                        <Option value={3}>包车</Option>\r\n                                      </Select>\r\n                                    )}\r\n                                  </FormItem>\r\n                                )}\r\n                              </td>\r\n                              {this.props.form.getFieldValue(\r\n                                `type${item.sort}`\r\n                              ) === 6 ? (\r\n                                <td className={'thSelf'}>\r\n                                  <FormItem\r\n                                    label=\"\"\r\n                                    className=\"form-inline-item\"\r\n                                  >\r\n                                    {getFieldDecorator(`itemId${item.sort}`, {\r\n                                      initialValue: isEdit\r\n                                        ? item.itemId\r\n                                        : undefined,\r\n                                      rules: [\r\n                                        {\r\n                                          required: true,\r\n                                          whitespace: true,\r\n                                          message: '资源内容'\r\n                                        }\r\n                                      ]\r\n                                    })(\r\n                                      <TextArea\r\n                                        placeholder=\"请输入资源内容\"\r\n                                        onChange={value =>\r\n                                          this.handleChangeInfo(item, value)\r\n                                        }\r\n                                      />\r\n                                    )}\r\n                                  </FormItem>\r\n                                </td>\r\n                              ) : (\r\n                                <td className={'thSelf'}>\r\n                                  <FormItem\r\n                                    label=\"\"\r\n                                    className=\"form-inline-item\"\r\n                                  >\r\n                                    {getFieldDecorator(`itemId${item.sort}`, {\r\n                                      initialValue: isEdit\r\n                                        ? item.itemId\r\n                                        : undefined,\r\n                                      rules: [\r\n                                        {\r\n                                          required: true,\r\n                                          whitespace: true,\r\n                                          message: '资源内容'\r\n                                        }\r\n                                      ]\r\n                                    })(\r\n                                      <Select\r\n                                        onChange={value =>\r\n                                          this.handleChangeInfo(item, value)\r\n                                        }\r\n                                        placeholder=\"请选择资源内容\"\r\n                                      >\r\n                                        {dataAll.map((item_new: any) => {\r\n                                          return this.props.form.getFieldValue(\r\n                                            `type${item.sort}`\r\n                                          ) === 1\r\n                                            ? this.props.form.getFieldValue(\r\n                                                `tirpType${item.sort}`\r\n                                              ) +\r\n                                                '' ===\r\n                                                item_new.tirpMode && (\r\n                                                <Option\r\n                                                  key={item_new.id}\r\n                                                  value={item_new.id}\r\n                                                >\r\n                                                  {item_new.number}\r\n                                                </Option>\r\n                                              )\r\n                                            : this.props.form.getFieldValue(\r\n                                                `type${item.sort}`\r\n                                              ) +\r\n                                                '' ===\r\n                                                item_new.type && (\r\n                                                <Option\r\n                                                  key={item_new.id}\r\n                                                  value={item_new.id}\r\n                                                >\r\n                                                  {item_new.name}\r\n                                                </Option>\r\n                                              );\r\n                                        })}\r\n                                      </Select>\r\n                                    )}\r\n                                  </FormItem>\r\n                                </td>\r\n                              )}\r\n                              <td className={'thSelf'}>\r\n                                <Popconfirm\r\n                                  title=\"确定删除吗?\"\r\n                                  onConfirm={() => this.handleDelete(item)}\r\n                                  okText=\"确认\"\r\n                                  cancelText=\"取消\"\r\n                                >\r\n                                  <a>删除</a>\r\n                                </Popconfirm>\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label={\r\n                  <span>\r\n                    上传PDF&nbsp;\r\n                    <Tooltip title=\"只能上传一个PDF！！！\">\r\n                      <Icon type=\"info-circle\" />\r\n                    </Tooltip>\r\n                  </span>\r\n                }\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('pdfUrl', {\r\n                  initialValue: isEdit ? json : [],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      // whitespace: true,\r\n                      message: '上传PDF'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <OssUpload\r\n                    type={'3'}\r\n                    isShowUploadList={true}\r\n                    uploadNumber={1}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={12} md={24} sm={24} offset={6}>\r\n              <div className=\"submitButtons\">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  确定\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create<HotelProps>()(CreateBasicProducts);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Resource from '../../models/Resource';\r\nimport store from '../../models/index';\r\nimport Global from '../../models/Global';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst Number2Data: any = {\r\n  '0': '零',\r\n  '1': '一',\r\n  '2': '二',\r\n  '3': '三',\r\n  '4': '四',\r\n  '5': '五',\r\n  '6': '六',\r\n  '7': '七',\r\n  '8': '八',\r\n  '9': '九'\r\n};\r\nconst tirpType: any = {\r\n  '1': '航空',\r\n  '2': '铁路',\r\n  '3': '包车'\r\n};\r\nconst Products: any = [\r\n  {\r\n    name: '出行',\r\n    type: '1'\r\n  },\r\n  {\r\n    name: '酒店',\r\n    type: '2'\r\n  },\r\n  {\r\n    name: '城市',\r\n    type: '3'\r\n  },\r\n  {\r\n    name: '景点',\r\n    type: '4'\r\n  },\r\n  {\r\n    name: '餐厅',\r\n    type: '5'\r\n  },\r\n  {\r\n    name: '文本',\r\n    type: '6'\r\n  }\r\n];\r\ninterface ItineraryProps {\r\n  form: FormComponentProps['form'];\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface ItineraryState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: any;\r\n  pagination: TableListPagination;\r\n  dataSource: any;\r\n}\r\n@inject('resource')\r\n@observer\r\nclass CheckItinerary extends React.Component<ItineraryProps, ItineraryState> {\r\n  constructor(props: ItineraryProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      dataSource: [],\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '行程',\r\n          dataIndex: 'days',\r\n\r\n          render: (text: string, record: any) => (\r\n            <div>{'第' + Number2Data[text] + '天'}</div>\r\n          )\r\n        },\r\n        {\r\n          title: '插入资源类型',\r\n          dataIndex: 'type',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {Products.map((item: any) => (\r\n                <span>{item.type == text && item.name}</span>\r\n              ))}\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: '出行方式(非必选)',\r\n          dataIndex: 'tirpType',\r\n          render: (text: string, record: any) => <span>{tirpType[text]}</span>\r\n        },\r\n        {\r\n          title: '资源内容',\r\n          dataIndex: 'itemId',\r\n          render: (text: string, record: any) => {\r\n            const target = this.state.dataSource.find(\r\n              (item: any) => item.id === text && item.type !== 6\r\n            );\r\n            return (\r\n              <div>\r\n                {target && (\r\n                  <span>{target.type === 1 ? target.number : target.name}</span>\r\n                )}\r\n                {record.type === 6 && <span>{record.itemId}</span>}\r\n              </div>\r\n            );\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await store.resource.getTripModePage({\r\n      data: {}\r\n    });\r\n    await store.resource.getHotelPage({\r\n      data: {}\r\n    });\r\n    await store.global.getCityList({\r\n      data: {}\r\n    });\r\n    await store.resource.getScenicSpot({\r\n      data: {}\r\n    });\r\n    await store.resource.getRestaurantPage({\r\n      data: {}\r\n    });\r\n    await store.resource.getProductSingle({\r\n      data: { id: this.props.data.id },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          this.setState(\r\n            {\r\n              loading: false\r\n            },\r\n            () => {\r\n              const tripModePage = store.resource.tripModePage.records.map(\r\n                (item: any, index: number) => {\r\n                  return { ...item, type: 1 };\r\n                }\r\n              );\r\n              const hotelPage = store.resource.hotelPage.records.map(\r\n                (item: any, index: number) => {\r\n                  return { ...item, type: 2 };\r\n                }\r\n              );\r\n              const cityList = store.global.cityList.map(\r\n                (item: any, index: number) => {\r\n                  return { ...item, type: 3 };\r\n                }\r\n              );\r\n              const scenicPage = store.resource.scenicPage.records.map(\r\n                (item: any, index: number) => {\r\n                  return { ...item, type: 4 };\r\n                }\r\n              );\r\n              const restaurantPage = store.resource.restaurantPage.records.map(\r\n                (item: any, index: number) => {\r\n                  return { ...item, type: 5 };\r\n                }\r\n              );\r\n              let dataAll = [\r\n                ...tripModePage,\r\n                ...hotelPage,\r\n                ...cityList,\r\n                ...scenicPage,\r\n                ...restaurantPage\r\n              ];\r\n              this.setState({\r\n                dataSource: dataAll\r\n              });\r\n            }\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    const info = store.resource.productSingle;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Card title=\"查看行程\" bordered={false} loading={this.state.loading}>\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.baseProductDaysList}\r\n              pagination={false}\r\n              // onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<ItineraryProps>()(CheckItinerary);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Resource from '../../models/Resource';\r\nimport Global from '../../models/Global';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport CreateBasicProducts from './CreateBasicProducts';\r\nimport { inject, observer } from 'mobx-react';\r\nimport CheckItinerary from './CheckItinerary';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface BasicProductsProps {\r\n  form: FormComponentProps['form'];\r\n  resource: Resource;\r\n  global: Global;\r\n}\r\ninterface BasicProductsState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: any;\r\n  pagination: TableListPagination;\r\n  SeeItinerary: boolean;\r\n  searchData: any;\r\n  baseType: any;\r\n}\r\n@inject('resource', 'global')\r\n@observer\r\nclass BasicProducts extends React.Component<\r\n  BasicProductsProps,\r\n  BasicProductsState\r\n> {\r\n  constructor(props: BasicProductsProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      visible: false,\r\n      baseType: {\r\n        '1': '国内游',\r\n        '2': '港澳游',\r\n        '3': '境外游'\r\n      },\r\n      currItem: {},\r\n      SeeItinerary: false,\r\n      searchData: {},\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '产品类型',\r\n          dataIndex: 'type',\r\n          render: (text: string, record: any) => (\r\n            <span>{this.state.baseType[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '产品名称',\r\n          dataIndex: 'name'\r\n        },\r\n        {\r\n          title: '副文案',\r\n          dataIndex: 'copywriting'\r\n        },\r\n        {\r\n          title: '行程天数',\r\n          dataIndex: 'days'\r\n        },\r\n        {\r\n          title: '行程',\r\n          dataIndex: 'search',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CheckItinerary(record)}\r\n              >\r\n                查看行程\r\n              </a>\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {/* <Popconfirm\r\n                title=\"你确定启用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">启用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定停用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">停用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" /> */}\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreateBasicProducts(record)}\r\n              >\r\n                编辑\r\n              </a>\r\n              {/* <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm> */}\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getBasicProductsPage();\r\n  }\r\n  getBasicProductsPage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        //  if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.resource.getBasicProductsPage({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getBasicProductsPage error');\r\n      }\r\n    });\r\n  };\r\n  DeleteSingle = (record: { id: string }) => {\r\n    this.props.resource.DeleteBasicProducts({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getBasicProductsPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  EnableShutdown = (record: object) => {\r\n    // this.props.mito.DeleteMito({\r\n    //   data: {\r\n    //     id:  record.id\r\n    //     )\r\n    //   },\r\n    //   callback: (res) => {\r\n    //     if (res.code === 200) {\r\n    //       message.success(res.msg || \"操作成功\")\r\n    //       this.getMitoList();\r\n    //     } else {\r\n    //       message.error(res.msg || \"操作失败\")\r\n    //     }\r\n    //   }\r\n    // })\r\n  };\r\n  isCreateBasicProducts = (bool: boolean) => {\r\n    this.setState({\r\n      visible: bool\r\n    });\r\n  };\r\n  isCheckItinerary = (bool: boolean) => {\r\n    this.setState({\r\n      SeeItinerary: bool\r\n    });\r\n  };\r\n  CheckItinerary = (item?: any) => {\r\n    this.isCheckItinerary(true);\r\n    this.setState({\r\n      searchData: item\r\n    });\r\n  };\r\n  CreateBasicProducts = (item?: any) => {\r\n    this.isCreateBasicProducts(true);\r\n    this.setState({\r\n      currItem: item\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isCreateBasicProducts(false);\r\n    this.isCheckItinerary(false);\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getBasicProductsPage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getBasicProductsPage(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = this.props.resource.basicProductsPage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    const CityList = this.props.global.cityList;\r\n    return (\r\n      <Card title=\"基础产品管理\" bordered={false} loading={this.state.loading}>\r\n        {this.state.visible && (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width={1400}\r\n            onCancel={() => this.isCreateBasicProducts(false)}\r\n            footer={null}\r\n          >\r\n            <CreateBasicProducts\r\n              data={this.state.currItem}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getBasicProductsPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        {this.state.SeeItinerary && (\r\n          <Modal\r\n            visible={this.state.SeeItinerary}\r\n            width={1400}\r\n            onCancel={() => this.isCheckItinerary(false)}\r\n            footer={null}\r\n          >\r\n            <CheckItinerary\r\n              data={this.state.searchData}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getBasicProductsPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row\r\n              gutter={{ md: 8, lg: 24, xl: 48 }}\r\n              style={{ marginTop: '20px' }}\r\n            >\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"基础产品名称\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('name')(\r\n                    <Input placeholder=\"基础产品名称\" />\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"搜索城市\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('city')(\r\n                    <Select style={{ width: 200 }} placeholder=\"请选择搜索城市\">\r\n                      {CityList.map((item: any, index: number) => (\r\n                        <Option key={item.id} value={item.id}>\r\n                          {item.name}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col\r\n                xl={10}\r\n                md={24}\r\n                sm={24}\r\n                offset={2}\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <div className=\"submitButtons\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"listsearch\"\r\n                  >\r\n                    查询\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Col xl={12} md={24} sm={24} style={{ marginBottom: '10px' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"listsearch\"\r\n              onClick={() => {\r\n                this.CreateBasicProducts();\r\n              }}\r\n            >\r\n              添加基础产品\r\n            </Button>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<BasicProductsProps>()(BasicProducts);\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree,\r\n  Drawer,\r\n  Calendar,\r\n  Badge\r\n} from 'antd';\r\nimport moment, { localeData } from 'moment';\r\nimport urlMaps from '../../common/urlMaps';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport NewBraft from '../../components/BraftEditor';\r\nimport store from '../../models/index';\r\nimport BraftEditor, { EditorState } from 'braft-editor';\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css';\r\nimport '../../components/BraftEditor/index.less';\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\nconst Option = Select.Option;\r\nconst RadioButton = Radio.Button;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst { Dragger } = Upload;\r\ninterface Props {\r\n  form: FormComponentProps['form'];\r\n  // changeList?(url: any): void,\r\n  value?: any;\r\n  data: any;\r\n  content: any;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n  visible: boolean;\r\n  localDate: string;\r\n  CalendarDate: any;\r\n  listData: any[];\r\n}\r\n@inject('tourisms')\r\n// @observer\r\nclass SetPrice extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      status: true,\r\n      visible: false,\r\n      localDate: '',\r\n      CalendarDate: {},\r\n      listData: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n\r\n  }\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        store.tourisms.EditPrice(\r\n          { ...values, data: this.state.localDate },\r\n          this.props.content\r\n        );\r\n        this.props.form.resetFields();\r\n        this.setState(\r\n          {\r\n            visible: false\r\n          },\r\n\r\n        );\r\n      }\r\n    });\r\n  };\r\n  dateCellRender = (value: any) => {\r\n    const type = this.props.content.type;\r\n    const period = this.props.content.period;\r\n    const dataPicker = moment(value.valueOf()).day();\r\n    const dataShow =\r\n      moment(value.valueOf()).format('YYYY-MM-DD') >=\r\n      this.props.content.startTime &&\r\n      moment(value.valueOf()).format('YYYY-MM-DD') <=\r\n      this.props.content.endTime;\r\n    const num = moment(value.valueOf()).get('D');\r\n    let target: any;\r\n    let isShow: boolean;\r\n    if (type === '1') {\r\n      target = store.tourisms.tourismSingle.bmTourProductDaysList[0];\r\n    } else if (type === '2' && period === 1) {\r\n      target = store.tourisms.tourismSingle.bmTourProductDaysList.find(\r\n        item => moment(item.data).day() === dataPicker\r\n      );\r\n    } else if (type === '2' && period === 2) {\r\n      target = store.tourisms.tourismSingle.bmTourProductDaysList.find(\r\n        item => moment(item.data).get('D') === num\r\n      );\r\n    } else if (type === '3') {\r\n      target = store.tourisms.tourismSingle.bmTourProductDaysList.find(\r\n        item => moment(value.valueOf()).format('YYYY-MM-DD') === item.data\r\n      );\r\n    }\r\n    if (this.props.content.startTime && this.props.content.endTime) {\r\n      if (\r\n        moment(value).format('YYYY-MM-DD') >=\r\n        moment(this.props.content.startTime).format('YYYY-MM-DD') &&\r\n        moment(value).format('YYYY-MM-DD') <=\r\n        moment(this.props.content.endTime).format('YYYY-MM-DD')\r\n      ) {\r\n        isShow = true;\r\n      } else {\r\n        isShow = false;\r\n      }\r\n    } else {\r\n      isShow = true;\r\n    }\r\n    // console.log(\"TCL: SetPrice -> dateCellRender -> target\", target)\r\n    // console.log(\"TCL: SetPrice -> dateCellRender -> isShow\", isShow)\r\n    return target && isShow ? (\r\n      <ul className=\"events\">\r\n        <li key={target.data}>\r\n          <div style={{ fontSize: '12px' }}>\r\n            <div>\r\n              <span>成人价:</span>\r\n              <span>{target.price}元</span>\r\n            </div>\r\n            <div>\r\n              <span>儿童价:</span>\r\n              <span>{target.childrenPrice}元</span>\r\n            </div>\r\n            <div>\r\n              <span>婴儿价:</span>\r\n              <span>{target.babyPrice}元</span>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    ) : null;\r\n  };\r\n  onSelect = (value: any) => {\r\n    this.setState(\r\n      {\r\n        localDate: moment(value.valueOf()).format('YYYY-MM-DD')\r\n      },\r\n      () => {\r\n        let target;\r\n        const type = store.tourisms.tourismSingle.type;\r\n        const period = store.tourisms.tourismSingle.period;\r\n        const dataPicker = moment(value.valueOf()).day();\r\n        const num = moment(value.valueOf()).get('D');\r\n        if (type === '1') {\r\n          target = store.tourisms.tourismSingle.bmTourProductDaysList[0];\r\n\r\n        } else if (type === '2' && period === 1) {\r\n          target = store.tourisms.tourismSingle.bmTourProductDaysList.find(\r\n            item => moment(item.data).day() === dataPicker\r\n          );\r\n\r\n        } else if (type === '2' && period === 2) {\r\n          target = store.tourisms.tourismSingle.bmTourProductDaysList.find(\r\n            item => moment(item.data).get('D') === num\r\n          );\r\n\r\n        } else if (type === '3') {\r\n          target = store.tourisms.tourismSingle.bmTourProductDaysList.find(\r\n            item => moment(value.valueOf()).format('YYYY-MM-DD') === item.data\r\n          );\r\n        }\r\n\r\n        this.props.form.setFieldsValue({\r\n          data: this.state.localDate === target ? target.data : 0,\r\n          price: this.state.localDate === target ? target.price : 0,\r\n          childrenPrice: this.state.localDate === target ? target.childrenPrice : 0,\r\n          babyPrice: this.state.localDate === target ? target.babyPrice : 0\r\n        });\r\n      }\r\n    );\r\n    this.showDrawer();\r\n  };\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  handleDate = (current: any) => {\r\n    if (this.props.content.startTime && this.props.content.endTime) {\r\n      if (\r\n        moment(current).format('YYYY-MM-DD') >=\r\n        moment(this.props.content.startTime).format('YYYY-MM-DD') &&\r\n        moment(current).format('YYYY-MM-DD') <=\r\n        moment(this.props.content.endTime).format('YYYY-MM-DD')\r\n      ) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  render() {\r\n\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    return (\r\n      <div style={{ width: 800, border: '1px solid #d9d9d9', borderRadius: 4 }}>\r\n        <Calendar\r\n          dateCellRender={this.dateCellRender}\r\n          onSelect={this.onSelect}\r\n          disabledDate={this.handleDate}\r\n        />\r\n        <Drawer\r\n          title=\"设置价格\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          onClose={this.onClose}\r\n          width={500}\r\n          visible={this.state.visible}\r\n        >\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"成人价格\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('price', {\r\n                  initialValue: 0,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '成人价格'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <InputNumber\r\n                    style={{ width: 150 }}\r\n                    placeholder=\"请输入成人价格\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"儿童价格\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('childrenPrice', {\r\n                  initialValue: 0,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '儿童价格'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <InputNumber\r\n                    style={{ width: 150 }}\r\n                    placeholder=\"请输入儿童价格\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"婴儿价格\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('babyPrice', {\r\n                  initialValue: 0,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '婴儿价格'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <InputNumber\r\n                    style={{ width: 150 }}\r\n                    placeholder=\"请输入婴儿价格\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={12} md={24} sm={24} offset={6}>\r\n              <div className=\"submButtons\">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  确定\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<Props>()(SetPrice);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop,\r\n  Drawer\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Resource from '../../models/Resource';\r\nimport PreviewImg from '../../components/PreviewImg';\r\nimport store from '../../models/index';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../../modules/Table';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface PictureProps {\r\n  form: FormComponentProps['form'];\r\n  onChange: any;\r\n  type: string;\r\n  city?: any;\r\n}\r\ninterface PictureState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: any;\r\n  pagination: TableListPagination;\r\n  type: {\r\n    [index: string]: string;\r\n  };\r\n  selectedRowKeys: any[];\r\n  selectedRows: any[];\r\n}\r\n@inject('resource', 'global')\r\n@observer\r\nclass Picture extends React.Component<PictureProps, PictureState> {\r\n  constructor(props: PictureProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      selectedRowKeys: [],\r\n      selectedRows: [],\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 10,\r\n        current: 1\r\n      },\r\n      type: {\r\n        2: '酒店',\r\n        3: '城市',\r\n        4: '景点',\r\n        5: '餐厅'\r\n      },\r\n      columns: [\r\n        {\r\n          title: '图片',\r\n          dataIndex: 'url',\r\n          render: (text: string) => {\r\n            return this.props.type === '1' ? (\r\n              <PreviewImg alt={'img'} src={text} />\r\n            ) : (\r\n                <video style={{ width: 200 }} src={text}></video>\r\n              );\r\n          }\r\n        },\r\n        {\r\n          title: '分类',\r\n          dataIndex: 'type',\r\n          render: (text: string, record: any) => (\r\n            <span>{this.state.type[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '城市',\r\n          dataIndex: 'city'\r\n        },\r\n        {\r\n          title: '景点/酒店/餐厅',\r\n          dataIndex: 'itemId'\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.city && this.getPicturePage();\r\n  }\r\n  getPicturePage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.page) {\r\n          params.page = 1;\r\n        }\r\n        if (params.page === 1) {\r\n          params.ts = new Date().valueOf();\r\n        }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.page_size) {\r\n          params.page_size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.type === '1'\r\n          ? store.resource.getPicturePage({\r\n            data: {\r\n              ...payload,\r\n              city: this.props.city,\r\n              size: 10000,\r\n              current: 1\r\n            },\r\n\r\n            callback: res => {\r\n              if (res.code === 0) {\r\n                this.setState({\r\n                  loading: false\r\n                });\r\n              }\r\n            }\r\n          })\r\n          : store.resource.getVideoPage({\r\n            data: {\r\n              ...payload,\r\n              city: this.props.city,\r\n              size: 10000,\r\n              current: 1\r\n            },\r\n\r\n            callback: res => {\r\n              if (res.code === 0) {\r\n                this.setState({\r\n                  loading: false\r\n                });\r\n              }\r\n            }\r\n          });\r\n      } else {\r\n        console.log('getPicturePage error');\r\n      }\r\n    });\r\n  };\r\n  showDrawer = () => {\r\n    this.getPicturePage()\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  onSelectChange = (selectedRowKeys: any, selectedRows: any) => {\r\n    console.log('selectedRowKeys changed: ', selectedRows);\r\n    this.setState({ selectedRowKeys, selectedRows });\r\n  };\r\n  handleChange = () => {\r\n    this.setState(\r\n      {\r\n        visible: false\r\n      },\r\n      () => {\r\n        this.props.onChange && this.props.onChange(this.state.selectedRows);\r\n      }\r\n    );\r\n  };\r\n  render() {\r\n\r\n    console.log(\"TCL: render -> this.props.city\", this.props.city)\r\n    const selectedRows = this.state;\r\n    const rowSelection = {\r\n      selectedRows,\r\n      onChange: this.onSelectChange\r\n    };\r\n    const info =\r\n      this.props.type === '1'\r\n        ? store.resource.picturePage\r\n        : store.resource.videoPage;\r\n    const hasSelected = this.state.selectedRows.length > 0;\r\n    return (\r\n      <div style={{ marginTop: '4px' }}>\r\n        <Button onClick={this.showDrawer}>选择资源</Button>\r\n        <Drawer\r\n          title={this.props.type === '1' ? '图片资源' : '视频资源'}\r\n          placement=\"right\"\r\n          closable={false}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          width={700}\r\n        >\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={this.handleChange}\r\n            disabled={!hasSelected}\r\n          >\r\n            {this.props.type === '1' ? '添加图片' : '添加资源 '}\r\n          </Button>\r\n          <Table\r\n            columns={this.state.columns}\r\n            rowKey={'id' || 'key'}\r\n            dataSource={info.records}\r\n            pagination={false}\r\n            rowSelection={rowSelection}\r\n          />\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<PictureProps>()(Picture);\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree,\r\n  Table,\r\n  Popconfirm,\r\n  Radio,\r\n  Badge,\r\n  Calendar,\r\n  Drawer\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport urlMaps from '../../common/urlMaps';\r\nimport SetPrice from './SetPrice';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport NewBraft from '../../components/BraftEditor';\r\nimport store from '../../models/index';\r\nimport BraftEditor, { EditorState } from 'braft-editor';\r\nimport PreviewImg from '../../components/PreviewImg';\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css';\r\nimport '../../components/BraftEditor/index.less';\r\nimport OssUpload from '../../components/Upload';\r\nimport Picture from '../../components/Picture';\r\nimport { StandardTableColumnProps } from '../Table';\r\nimport './index.less';\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst { Dragger } = Upload;\r\ninterface TourismProps {\r\n  form: FormComponentProps['form'];\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n  columns: StandardTableColumnProps[];\r\n  fileData: any[];\r\n  everyDay: any[];\r\n  loading: boolean;\r\n  // dataChange: any\r\n}\r\n@inject('resource', 'tag')\r\n@observer\r\nclass CreateTourism extends Component<TourismProps, State> {\r\n  constructor(props: TourismProps) {\r\n    super(props);\r\n    this.state = {\r\n      status: true,\r\n      fileData: [],\r\n      loading: true,\r\n      everyDay: [],\r\n      // dataChange: {},\r\n      columns: [\r\n        {\r\n          title: '图片',\r\n          dataIndex: 'url',\r\n          render: (text: string, record: any) =>\r\n            record.format === 1 ? (\r\n              <PreviewImg alt=\"url\" src={text} />\r\n            ) : (\r\n                <video style={{ width: 200 }} src={text} controls />\r\n              )\r\n        },\r\n        {\r\n          title: '图片宽度',\r\n          dataIndex: 'wide'\r\n        },\r\n        {\r\n          title: '图片高度',\r\n          dataIndex: 'high'\r\n        },\r\n        {\r\n          title: '编辑',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => {\r\n            return (\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm>\r\n            );\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    store.tourisms.ClearPrice();\r\n    (this.props.data) &&\r\n      store.tourisms.getTourismSingle({\r\n        data: { id: this.props.data.id },\r\n        callback: res => {\r\n          if (res.code === 0) {\r\n            this.props.form.setFieldsValue({\r\n              period: res.data.period,\r\n              holiday: res.data.holiday,\r\n              weekend: res.data.weekend\r\n            })\r\n            this.setState({\r\n              fileData: res.data.bmMaterialList,\r\n              loading: false\r\n            });\r\n          }\r\n        }\r\n      });\r\n    store.tag.getTagPage({\r\n      data: {}\r\n    });\r\n    store.resource.getPicturePage({\r\n      data: {}\r\n    });\r\n    store.resource.getBasicProductsPage({\r\n      data: {},\r\n      callback: res => {\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  ChangeList = (fileList: any) => {\r\n    const dataArray = fileList.map((item: any) => item.response.data);\r\n    console.log('TCL: ChangeList -> dataArray', dataArray);\r\n    this.setState({\r\n      fileData: [\r\n        ...this.state.fileData,\r\n        ...dataArray.map((item: any, index: number) => {\r\n          return {\r\n            wide: +item.width,\r\n            high: +item.height,\r\n            url: item.filename,\r\n            format: 1,\r\n            limits: 1,\r\n            type: 4\r\n          };\r\n        })\r\n      ]\r\n    });\r\n  };\r\n  ChangeVideo = (fileList: any) => {\r\n    const dataArray = fileList.map((item: any) => item.response.data);\r\n    console.log('TCL: ChangeVideo -> dataArray', dataArray);\r\n    this.setState({\r\n      fileData: [\r\n        ...this.state.fileData,\r\n        ...dataArray.map((item: any, index: number) => {\r\n          return {\r\n            wide: +item.width,\r\n            high: +item.height,\r\n            url: item.filename,\r\n            format: 2,\r\n            limits: 1,\r\n            type: 3\r\n          };\r\n        })\r\n      ]\r\n    });\r\n  };\r\n  ChangePicture = (fileList: any) => {\r\n    console.log('TCL: ChangePicture -> fileList', fileList);\r\n    this.setState({\r\n      fileData: [\r\n        ...this.state.fileData,\r\n        ...fileList.map((item: any, index: number) => {\r\n          return {\r\n            format: 1,\r\n            limits: 2,\r\n            type: 3,\r\n            high: item.high,\r\n            wide: item.wide,\r\n            url: item.url\r\n          };\r\n        })\r\n      ]\r\n    });\r\n  };\r\n  DeleteSingle = (record: any) => {\r\n    this.setState({\r\n      fileData: this.state.fileData.filter(item => {\r\n        return item !== record;\r\n      })\r\n    });\r\n  };\r\n  clearPrice = () => {\r\n    store.tourisms.ClearPrice();\r\n    // this.props.form.setFieldsValue({\r\n    //   weekend: 1,\r\n    //   holiday: 1,\r\n    //   period: 1\r\n    // });\r\n  };\r\n  changeWeek = () => {\r\n    store.tourisms.ClearPrice();\r\n    // this.props.form.setFieldsValue({\r\n    //   holiday: 1\r\n    // });\r\n  };\r\n  ChangeEnd = () => {\r\n    store.tourisms.EditEndTime(this.props.form.getFieldValue('endTime'));\r\n  };\r\n  ChangeStart = () => {\r\n    store.tourisms.EditStartTime(this.props.form.getFieldValue('startTime'));\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const bmTourProductDaysList = store.tourisms.tourismSingle.bmTourProductDaysList.map(\r\n      (item: any, index: number) => {\r\n        return {\r\n          data: item.data,\r\n          price: item.price,\r\n          childrenPrice: item.childrenPrice,\r\n          babyPrice: item.babyPrice\r\n        };\r\n      }\r\n    );\r\n    this.props.form.validateFields((err, values) => {\r\n      console.log('TCL: CreateTourism -> handleSubmit -> values', values);\r\n      if (!err) {\r\n        this.setState(\r\n          {\r\n            everyDay:\r\n              values.type === '1'\r\n                ? [\r\n                  {\r\n                    data: moment(values.startTime.valueOf()).format(\r\n                      'YYYY-MM-DD'\r\n                    ),\r\n                    price:\r\n                      store.tourisms.tourismSingle.bmTourProductDaysList[0]\r\n                        .price,\r\n                    babyPrice:\r\n                      store.tourisms.tourismSingle.bmTourProductDaysList[0]\r\n                        .babyPrice,\r\n                    childrenPrice:\r\n                      store.tourisms.tourismSingle.bmTourProductDaysList[0]\r\n                        .childrenPrice\r\n                  }\r\n                ]\r\n                : []\r\n          },\r\n          () => {\r\n            this.props.data\r\n              ? store.tourisms.EditTourism({\r\n                data: {\r\n                  ...values,\r\n                  id: this.props.data.id,\r\n                  bmMaterialList: this.state.fileData.slice(-9),\r\n                  startTime: moment(values.startTime.valueOf()).format(\r\n                    'YYYY-MM-DD HH:mm:ss'\r\n                  ),\r\n                  endTime: moment(values.endTime.valueOf()).format(\r\n                    'YYYY-MM-DD HH:mm:ss'\r\n                  ),\r\n                  coverUrl: values.coverUrl[0].response.data.filename,\r\n                  bmTourProductDaysList:\r\n                    values.type === '1'\r\n                      ? this.state.everyDay\r\n                      : bmTourProductDaysList\r\n                },\r\n                callback: res => {\r\n                  if (res.code === 0) {\r\n                    message.success('保存成功');\r\n                    if (this.props.onClose) {\r\n                      this.props.onClose();\r\n                    }\r\n                  }\r\n                }\r\n              })\r\n              : store.tourisms.CreateTourism({\r\n                data: {\r\n                  ...values,\r\n                  bmMaterialList: this.state.fileData.slice(-9),\r\n                  startTime: moment(values.startTime.valueOf()).format(\r\n                    'YYYY-MM-DD HH:mm:ss'\r\n                  ),\r\n                  endTime: moment(values.endTime.valueOf()).format(\r\n                    'YYYY-MM-DD HH:mm:ss'\r\n                  ),\r\n                  coverUrl: values.coverUrl[0].response.data.filename,\r\n                  bmTourProductDaysList:\r\n                    values.type === '1'\r\n                      ? this.state.everyDay\r\n                      : bmTourProductDaysList\r\n                },\r\n                callback: res => {\r\n                  if (res.code === 0) {\r\n                    message.success('保存成功');\r\n                    if (this.props.onClose) {\r\n                      this.props.onClose();\r\n                    }\r\n                  }\r\n                }\r\n              });\r\n          }\r\n        );\r\n      }\r\n    });\r\n  };\r\n  handleChange = (value: any) => {\r\n    const item = store.resource.basicProductsPage.records.find(\r\n      item => item.id === value\r\n    );\r\n    this.props.form.setFieldsValue({\r\n      title: item.name\r\n    });\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const dataChange = Object.assign(\r\n      { startTime: this.props.form.getFieldValue('startTime') },\r\n      { endTime: this.props.form.getFieldValue('endTime') },\r\n      { type: this.props.form.getFieldValue('type') },\r\n      { holiday: this.props.form.getFieldValue('holiday') },\r\n      { weekend: this.props.form.getFieldValue('weekend') },\r\n      { period: this.props.form.getFieldValue('period') }\r\n    );\r\n    const Products = store.resource.basicProductsPage;\r\n    const isEdit = this.props.data !== undefined;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const tagPage = store.tag.tagPage;\r\n    const singleInfo = store.tourisms.tourismSingle;\r\n    let url = singleInfo.coverUrl;\r\n    const json_img = [\r\n      {\r\n        uid: 'rc-upload-1574925611551-2',\r\n        url: 'img/15749256138437071375449767021574925617190.jpg',\r\n        lastModified: 1574400765576,\r\n        lastModifiedDate: '2019-11-22T05:32:45.576Z',\r\n        name: 'b17123b76cb838e9cc2d291f5bf62ba8.jpg',\r\n        size: 1411649,\r\n        type: 'image/jpeg',\r\n        percent: 100,\r\n        originFileObj: {\r\n          uid: 'rc-upload-1574925611551-2',\r\n          url: 'img/15749256138437071375449767021574925617190.jpg'\r\n        },\r\n        status: 'done',\r\n        thumbUrl: '',\r\n        response: {\r\n          code: 0,\r\n          msg: null,\r\n          data: {\r\n            filename:\r\n              'http://miramartravel.oss-cn-shenzhen.aliyuncs.com/img/15749256138437071375449767021574925617190.jpg',\r\n            size: '1411649',\r\n            mimeType: 'image/jpeg',\r\n            width: '1920',\r\n            height: '1080'\r\n          }\r\n        },\r\n        xhr: {}\r\n      }\r\n    ];\r\n    json_img.map((item: any, index: number) => {\r\n      if (url) {\r\n        item.uid = '16549861321684';\r\n        item.url = url;\r\n        console.log(\r\n          'TCL: CreateVideo -> render ->  url.split',\r\n          url.split('com/')[1]\r\n        );\r\n        item.type = 'img/' + url.split('com/')[1].split('.')[1];\r\n        item.originFileObj.uid = '16549861321684';\r\n        item.originFileObj.url = url;\r\n        item.response.data.filename = url;\r\n        item.response.data.mimeType =\r\n          'img/' + url.split('com/')[1].split('.')[1];\r\n      }\r\n    });\r\n    return (\r\n      <Card\r\n        bordered={false}\r\n        title={isEdit ? '编辑旅游产品' : '添加旅游产品'}\r\n        className=\"CreateMito\"\r\n        loading={isEdit ? this.state.loading : false}\r\n      >\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"基础产品\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('baseProductId', {\r\n                  initialValue: isEdit ? singleInfo.baseProductId : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '基础产品'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    style={{ width: 300 }}\r\n                    placeholder=\"选择基础产品\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {Products.records.map((item: any, index: number) => (\r\n                      <Option key={item.id} value={item.id}>\r\n                        {item.name}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"产品名称\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('title', {\r\n                  initialValue: isEdit ? singleInfo.title : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '产品名称'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入产品名称\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"所属标签\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('tagId', {\r\n                  initialValue: isEdit ? singleInfo.tagId : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '所属标签'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select style={{ width: 300 }} placeholder=\"选择所属标签\">\r\n                    {tagPage.records.map((item: any, index: number) => (\r\n                      <Option key={item.id} value={item.id}>\r\n                        {item.title}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"上架时间\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('startTime', {\r\n                  initialValue: isEdit\r\n                    ? moment(Date.parse(singleInfo.startTime))\r\n                    : null,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '上架时间'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <DatePicker\r\n                    showTime\r\n                    format=\"YYYY-MM-DD HH:mm\"\r\n                    placeholder=\"上架时间\"\r\n                    onOk={this.ChangeStart}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"下架时间\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('endTime', {\r\n                  ...(isEdit && singleInfo.endTime\r\n                    ? { initialValue: moment(Date.parse(singleInfo.endTime)) }\r\n                    : {}),\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '下架时间'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <DatePicker\r\n                    showTime\r\n                    format=\"YYYY-MM-DD HH:mm\"\r\n                    placeholder=\"下架时间\"\r\n                    onOk={this.ChangeEnd}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"提前关闭时间\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('howDays', {\r\n                  initialValue: isEdit ? singleInfo.howDays : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '提前关闭时间'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <InputNumber\r\n                    style={{ width: 180 }}\r\n                    placeholder=\"请输入提前关闭时间\"\r\n                    min={0}\r\n                    max={100}\r\n                    step={1}\r\n                  />\r\n                )}\r\n                天\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label={\r\n                  <span>\r\n                    上传封面&nbsp;\r\n                    <Tooltip title=\"只能上传一个封面！！！\">\r\n                      <Icon type=\"info-circle\" />\r\n                    </Tooltip>\r\n                  </span>\r\n                }\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('coverUrl', {\r\n                  initialValue: isEdit ? json_img : [],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '选择图片'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <OssUpload\r\n                    type={'1'}\r\n                    isShowUploadList={true}\r\n                    uploadNumber={1}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label={\r\n                  <span>\r\n                    上传轮播&nbsp;\r\n                    <Tooltip title=\"轮播视频加图片不超过9个！！！\">\r\n                      <Icon type=\"info-circle\" />\r\n                    </Tooltip>\r\n                  </span>\r\n                }\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                <div\r\n                  style={{\r\n                    marginLeft: '20px',\r\n                    listStyle: 'none',\r\n                    float: 'left'\r\n                  }}\r\n                >\r\n                  <OssUpload\r\n                    onChange={this.ChangeList}\r\n                    type={'1'}\r\n                    isShowUploadList={false}\r\n                  />\r\n                </div>\r\n                {/* <div style={{ marginLeft: '20px', listStyle: 'none', float: \"left\" }}>\r\n                  <OssUpload\r\n                    onChange={this.ChangeVideo}\r\n                    type={'2'}\r\n                    isShowUploadList={false}\r\n                    disabled={this.state.fileData.find(item => item.url.includes('video/admin'))}\r\n                  />\r\n                </div> */}\r\n                <div\r\n                  style={{\r\n                    marginLeft: '20px',\r\n                    listStyle: 'none',\r\n                    float: 'left'\r\n                  }}\r\n                >\r\n                  <Picture onChange={this.ChangePicture} type={'1'} />\r\n                </div>\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"轮播图片\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                <Table\r\n                  columns={this.state.columns}\r\n                  bordered={false}\r\n                  dataSource={this.state.fileData.slice(-9)}\r\n                  pagination={false}\r\n                />\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"出团类型\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('type', {\r\n                  initialValue: isEdit ? singleInfo.type : '1',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '出团类型'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Radio.Group onChange={this.clearPrice}>\r\n                    <Radio value={'1'}>每日出团</Radio>\r\n                    <Radio value={'2'}>周期出团</Radio>\r\n                    <Radio value={'3'}>非周期出团</Radio>\r\n                  </Radio.Group>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            {this.props.form.getFieldValue('type') === '2' && (\r\n              <Col xl={24} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"周期类型\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('period', {\r\n                    initialValue: undefined,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: '出团类型'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Radio.Group onChange={this.changeWeek}>\r\n                      <Radio value={1}>每周出团</Radio>\r\n                      <Radio value={2}>每月出团</Radio>\r\n                    </Radio.Group>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n            )}\r\n            {this.props.form.getFieldValue('type') !== '3' && (\r\n              <Col xl={24} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"节假日照常发团\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('holiday', {\r\n                    initialValue: undefined,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: '节假日照常发团'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Radio.Group>\r\n                      <Radio value={1}>是</Radio>\r\n                      <Radio value={2}>否</Radio>\r\n                    </Radio.Group>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n            )}\r\n            {(this.props.form.getFieldValue('type') === '1' ||\r\n              this.props.form.getFieldValue('period') === 2) && (\r\n                <Col xl={24} md={24} sm={24}>\r\n                  <FormItem\r\n                    label=\"周末照常发团\"\r\n                    {...formItemLayout}\r\n                    className=\"form-inline-item\"\r\n                  >\r\n                    {getFieldDecorator('weekend', {\r\n                      initialValue: undefined,\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: '周末照常发团'\r\n                        }\r\n                      ]\r\n                    })(\r\n                      <Radio.Group>\r\n                        <Radio value={1}>是</Radio>\r\n                        <Radio value={2}>否</Radio>\r\n                      </Radio.Group>\r\n                    )}\r\n                  </FormItem>\r\n                </Col>\r\n              )}\r\n          </Row>\r\n        </Form>\r\n        <Col xl={24} md={24} sm={24}>\r\n          <FormItem\r\n            label={'价格日历'}\r\n            {...formItemLayout}\r\n            className=\"form-inline-item\"\r\n          >\r\n            <SetPrice\r\n              data={isEdit ? singleInfo.bmTourProductDaysList : []}\r\n              content={dataChange}\r\n            />\r\n          </FormItem>\r\n        </Col>\r\n        <Col xl={12} md={24} sm={24} offset={6}>\r\n          <div className=\"submitButtons\">\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              onClick={this.handleSubmit}\r\n            >\r\n              确定\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create<TourismProps>()(CreateTourism);\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree,\r\n  Table,\r\n  Popconfirm,\r\n  Radio,\r\n  Badge,\r\n  Calendar,\r\n  Drawer\r\n} from 'antd';\r\nimport PreviewImg from '../../components/PreviewImg';\r\nimport store from '../../models/index';\r\nimport { FormComponentProps } from 'antd/lib/form';\r\nimport { StandardTableColumnProps } from '../Table';\r\nimport { observer, inject } from 'mobx-react';\r\nimport moment from 'moment';\r\ninterface Props {\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  dataSource: any;\r\n}\r\n@inject('tourisms')\r\n@observer\r\nclass CalendarPrice extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      dataSource: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getCalendarPrice();\r\n  }\r\n  getCalendarPrice = () => {\r\n    store.tourisms.getCalendarPrice({\r\n      data: {\r\n        tourProductId: this.props.data.id,\r\n        current: 1,\r\n        size: 1000\r\n\r\n        // format: 1,//图片\r\n      },\r\n      callback: res => {\r\n        this.setState({\r\n          dataSource: res.data.records\r\n        });\r\n      }\r\n    });\r\n  };\r\n  dateCellRender = (value: any) => {\r\n    const dataPicker = moment(value.valueOf()).format('YYYY-MM-DD');\r\n    const dataShow = this.state.dataSource.find(\r\n      (item: any) => item.data === dataPicker\r\n    );\r\n    return dataShow ? (\r\n      <ul className=\"events\">\r\n        <li key={dataShow.data}>\r\n          <div style={{ fontSize: '12px' }}>\r\n            <div>\r\n              <span>成人价:</span>\r\n              <span>{dataShow.price}元</span>\r\n            </div>\r\n            <div>\r\n              <span>儿童价:</span>\r\n              <span>{dataShow.childrenPrice}元</span>\r\n            </div>\r\n            <div>\r\n              <span>婴儿价:</span>\r\n              <span>{dataShow.babyPrice}元</span>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    ) : null;\r\n  };\r\n  render() {\r\n    return (\r\n      <Card title=\"出团日期/价格\" bordered={false}>\r\n        <Calendar dateCellRender={this.dateCellRender} />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default CalendarPrice;\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree,\r\n  Table,\r\n  Popconfirm,\r\n  Radio,\r\n  Badge,\r\n  Calendar,\r\n  Drawer\r\n} from 'antd';\r\nimport PreviewImg from '../../components/PreviewImg';\r\nimport store from '../../models/index';\r\nimport { FormComponentProps } from 'antd/lib/form';\r\nimport { StandardTableColumnProps } from '../Table';\r\nimport { observer, inject } from 'mobx-react';\r\ninterface Props {\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  columns: StandardTableColumnProps[];\r\n  // dataChange: any\r\n}\r\n@inject('tourisms')\r\n@observer\r\nexport default class ShowPicture extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          title: '图片',\r\n          dataIndex: 'url',\r\n          render: (text: string, record: any) =>\r\n            record.format === 1 ? (\r\n              <PreviewImg alt=\"url\" src={text} />\r\n            ) : (\r\n              <video style={{ width: 200 }} src={text} controls />\r\n            )\r\n        },\r\n        {\r\n          title: '图片宽度',\r\n          dataIndex: 'wide'\r\n        },\r\n        {\r\n          title: '图片高度',\r\n          dataIndex: 'high'\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => {\r\n            return (\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm>\r\n            );\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  DeleteSingle = (record: any) => {\r\n    store.tourisms.DeleteImage({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success('删除成功');\r\n          this.getPicturePage();\r\n        } else {\r\n          message.success('删除失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getPicturePage();\r\n  }\r\n  getPicturePage = () => {\r\n    store.tourisms.getOwnPictures({\r\n      data: {\r\n        itemId: this.props.data.id,\r\n        current: 1,\r\n        size: 100,\r\n        type: 4\r\n        // format: 1,//图片\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = store.tourisms.ownPicturePage;\r\n    return (\r\n      <Card title=\"图集\" bordered={false}>\r\n        <Table\r\n          columns={this.state.columns}\r\n          bordered={false}\r\n          dataSource={info.records}\r\n          pagination={false}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Tourisms from '../../models/Tourism';\r\nimport Global from '../../models/Global';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport CreateTourism from './CreateTourism';\r\nimport CalendarPrice from './CalendarPrice';\r\nimport { inject, observer } from 'mobx-react';\r\nimport ShowPicture from './CreatePicture';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface TourismProps {\r\n  form: FormComponentProps['form'];\r\n  tourisms: Tourisms;\r\n  global: Global;\r\n}\r\ninterface TourismState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: any;\r\n  pagination: TableListPagination;\r\n  recommendMaps: any;\r\n  statusMaps: any;\r\n  isShow: boolean;\r\n  dataShow: any;\r\n  calendarData: any;\r\n  showCalendar: boolean;\r\n}\r\n@inject('tourisms', 'global')\r\n@observer\r\nclass Tourism extends React.Component<TourismProps, TourismState> {\r\n  constructor(props: TourismProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      isShow: false,\r\n      dataShow: {},\r\n      calendarData: {},\r\n      showCalendar: false,\r\n      statusMaps: {\r\n        1: '上架',\r\n        2: '下架'\r\n      },\r\n      recommendMaps: {\r\n        0: '不推荐',\r\n        1: '推荐'\r\n      },\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '产品名称',\r\n          dataIndex: 'title'\r\n        },\r\n        {\r\n          title: '所属标签',\r\n          dataIndex: 'tagId'\r\n        },\r\n        {\r\n          title: '图片',\r\n          dataIndex: 'star',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {record.bmMaterialCount}个\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.ShowPicture(record)}\r\n              >\r\n                查看\r\n              </a>\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: '出团日期/价格',\r\n          dataIndex: 'start',\r\n          render: (text: string, record: any) => (\r\n            <a\r\n              href=\"javacript:void(0);\"\r\n              onClick={() => this.CalendarPrice(record)}\r\n            >\r\n              查看\r\n            </a>\r\n          )\r\n        },\r\n        {\r\n          title: '上架时间',\r\n          dataIndex: 'startTime'\r\n        },\r\n        {\r\n          title: '下架时间',\r\n          dataIndex: 'endTime'\r\n        },\r\n        {\r\n          title: '推荐',\r\n          dataIndex: 'recommend',\r\n          render: (text: string, record: any) => (\r\n            <span>{this.state.recommendMaps[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '状态',\r\n          dataIndex: 'state',\r\n          render: (text: string, record: any) => (\r\n            <span>{this.state.statusMaps[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {/* <Popconfirm\r\n                title=\"你确定启用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">启用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定停用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">停用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" /> */}\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreateHotel(record)}\r\n              >\r\n                编辑\r\n              </a>\r\n              <Divider type=\"vertical\" />\r\n              {/* <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" /> */}\r\n              <Popconfirm\r\n                title={`设置为热门推荐？`}\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() =>\r\n                  this.SetRecommend(record, record.recommend === 0 ? 1 : 0)\r\n                }\r\n              >\r\n                <a href=\"javacript:void(0);\">\r\n                  {record.recommend === 0 ? '设为推荐' : '取消推荐'}\r\n                </a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title={`设置上/下架？`}\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.isUp(record, record.state === 2 ? 1 : 2)}\r\n              >\r\n                <a href=\"javacript:void(0);\">\r\n                  {record.state === 2 ? '上架' : '下架'}\r\n                </a>\r\n              </Popconfirm>\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getTourismPage();\r\n  }\r\n  SetRecommend = (record: any, state: number) => {\r\n    this.props.tourisms.EditRecommend({\r\n      data: {\r\n        id: record.id,\r\n        recommend: state\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success('操作成功');\r\n          this.getTourismPage();\r\n        }\r\n      }\r\n    });\r\n  };\r\n  isUp = (record: any, state: number) => {\r\n    this.props.tourisms.EditUpDown({\r\n      data: {\r\n        id: record.id,\r\n        state: state\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          this.getTourismPage();\r\n        }\r\n      }\r\n    });\r\n  };\r\n  getTourismPage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        // if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.page_size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.tourisms.getTourismPage({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getTourismPage error');\r\n      }\r\n    });\r\n  };\r\n  DeleteSingle = (record: { id: string }) => {\r\n    this.props.tourisms.DeleteTourism({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getTourismPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  EnableShutdown = (record: object) => {\r\n    // this.props.mito.DeleteMito({\r\n    //   data: {\r\n    //     id:  record.id\r\n    //     )\r\n    //   },\r\n    //   callback: (res) => {\r\n    //     if (res.code === 200) {\r\n    //       message.success(res.msg || \"操作成功\")\r\n    //       this.getMitoList();\r\n    //     } else {\r\n    //       message.error(res.msg || \"操作失败\")\r\n    //     }\r\n    //   }\r\n    // })\r\n  };\r\n  CalendarPrice = (item?: any) => {\r\n    this.isCalendarPrice(true);\r\n    this.setState({\r\n      calendarData: item\r\n    });\r\n  };\r\n  isCalendarPrice = (bool: boolean) => {\r\n    this.setState({\r\n      showCalendar: bool\r\n    });\r\n  };\r\n  ShowPicture = (item?: any) => {\r\n    this.isShowPicture(true);\r\n    this.setState({\r\n      dataShow: item\r\n    });\r\n  };\r\n  isShowPicture = (bool: boolean) => {\r\n    this.setState({\r\n      isShow: bool\r\n    });\r\n  };\r\n  isCreateHotel = (bool: boolean) => {\r\n    this.setState({\r\n      visible: bool\r\n    });\r\n  };\r\n  CreateHotel = (item?: any) => {\r\n    this.isCreateHotel(true);\r\n    this.setState({\r\n      currItem: item\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isCreateHotel(false);\r\n    this.isShowPicture(false);\r\n    this.isCalendarPrice(false);\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getTourismPage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getTourismPage(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = this.props.tourisms.tourismPage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    const CityList = this.props.global.cityList;\r\n    return (\r\n      <Card title=\"旅游产品管理\" bordered={false} loading={this.state.loading}>\r\n        {this.state.visible && (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width={1300}\r\n            onCancel={() => this.isCreateHotel(false)}\r\n            footer={null}\r\n          >\r\n            <CreateTourism\r\n              data={this.state.currItem}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getTourismPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        {this.state.isShow && (\r\n          <Modal\r\n            visible={this.state.isShow}\r\n            width={1300}\r\n            onCancel={() => this.isShowPicture(false)}\r\n            footer={null}\r\n          >\r\n            <ShowPicture\r\n              data={this.state.dataShow}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getTourismPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        {this.state.showCalendar && (\r\n          <Modal\r\n            visible={this.state.showCalendar}\r\n            width={1300}\r\n            onCancel={() => this.isCalendarPrice(false)}\r\n            footer={null}\r\n          >\r\n            <CalendarPrice\r\n              data={this.state.calendarData}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getTourismPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row\r\n              gutter={{ md: 8, lg: 24, xl: 48 }}\r\n              style={{ marginTop: '20px' }}\r\n            >\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"旅游产品名称\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('title')(\r\n                    <Input placeholder=\"旅游产品名称\" />\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"搜索状态\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('state')(\r\n                    <Select style={{ width: 200 }} placeholder=\"请选择搜索状态\">\r\n                      <Option value={1}>上架</Option>\r\n                      <Option value={2}>下架</Option>\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col\r\n                xl={10}\r\n                md={24}\r\n                sm={24}\r\n                offset={2}\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <div className=\"submitButtons\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"listsearch\"\r\n                  >\r\n                    查询\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Col xl={12} md={24} sm={24} style={{ marginBottom: '10px' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"listsearch\"\r\n              onClick={() => {\r\n                this.CreateHotel();\r\n              }}\r\n            >\r\n              添加旅游产品\r\n            </Button>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<TourismProps>()(Tourism);\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree\r\n} from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport urlMaps from '../../common/urlMaps';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport NewBraft from '../../components/BraftEditor';\r\nimport store from '../../models/index';\r\nimport BraftEditor, { EditorState } from 'braft-editor';\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css';\r\nimport '../../components/BraftEditor/index.less';\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\nconst Option = Select.Option;\r\nconst RadioButton = Radio.Button;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst { Dragger } = Upload;\r\ninterface TagProps {\r\n  form: FormComponentProps['form'];\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n}\r\n@inject('tag')\r\n@observer\r\nclass CreateTag extends Component<TagProps, State> {\r\n  constructor(props: TagProps) {\r\n    super(props);\r\n    this.state = {\r\n      status: true\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.data &&\r\n      store.tag.getTagSingle({\r\n        data: { id: this.props.data.id }\r\n      });\r\n  }\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.props.data\r\n          ? store.tag.EditTag({\r\n              data: {\r\n                id: this.props.data.id,\r\n                ...values,\r\n                startTime:\r\n                  values.startTime !== ''\r\n                    ? moment(values.startTime.valueOf()).format(\r\n                        'YYYY-MM-DD HH:mm:ss'\r\n                      )\r\n                    : '',\r\n                endTime:\r\n                  values.endTime !== ''\r\n                    ? moment(values.endTime.valueOf()).format(\r\n                        'YYYY-MM-DD HH:mm:ss'\r\n                      )\r\n                    : ''\r\n              },\r\n              callback: res => {\r\n                if (res.code === 0) {\r\n                  message.success('保存成功');\r\n                  if (this.props.onClose) {\r\n                    this.props.onClose();\r\n                  }\r\n                }\r\n              }\r\n            })\r\n          : store.tag.CreateTag({\r\n              data: {\r\n                ...values,\r\n                startTime:\r\n                  values.startTime !== ''\r\n                    ? moment(values.startTime.valueOf()).format(\r\n                        'YYYY-MM-DD HH:mm:ss'\r\n                      )\r\n                    : '',\r\n                endTime:\r\n                  values.endTime !== ''\r\n                    ? moment(values.endTime.valueOf()).format(\r\n                        'YYYY-MM-DD HH:mm:ss'\r\n                      )\r\n                    : ''\r\n              },\r\n              callback: res => {\r\n                if (res.code === 0) {\r\n                  message.success('保存成功');\r\n                  if (this.props.onClose) {\r\n                    this.props.onClose();\r\n                  }\r\n                }\r\n              }\r\n            });\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const CityList = store.global.cityList;\r\n    const isEdit = this.props.data !== undefined;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const singleInfo = store.tag.tagSingle;\r\n    return (\r\n      <Card\r\n        bordered={false}\r\n        title={isEdit ? '编辑首页标签' : '添加首页标签'}\r\n        className=\"CreateMito\"\r\n      >\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"标签名称\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('title', {\r\n                  initialValue: isEdit ? singleInfo.title : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '标签名称'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入标签名称\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"副标题名称\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('subtitle', {\r\n                  initialValue: isEdit ? singleInfo.subtitle : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '副标题名称'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入副标题名称\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"位置\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('sort', {\r\n                  initialValue: isEdit ? singleInfo.sort : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '位置'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select style={{ width: 200 }} placeholder=\"请选择位置\">\r\n                    <Option value={1}>1</Option>\r\n                    <Option value={2}>2</Option>\r\n                    <Option value={3}>3</Option>\r\n                    <Option value={4}>4</Option>\r\n                    <Option value={5}>5</Option>\r\n                    <Option value={6}>6</Option>\r\n                    <Option value={7}>7</Option>\r\n                    <Option value={8}>8</Option>\r\n                    <Option value={9}>9</Option>\r\n                    <Option value={10}>10</Option>\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"上架时间\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('startTime', {\r\n                  initialValue: isEdit\r\n                    ? moment(Date.parse(singleInfo.startTime))\r\n                    : null,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '上架时间'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <DatePicker\r\n                    showTime\r\n                    format=\"YYYY-MM-DD HH:mm\"\r\n                    placeholder=\"上架时间\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"下架时间\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('endTime', {\r\n                  ...(isEdit && singleInfo.endTime\r\n                    ? { initialValue: moment(Date.parse(singleInfo.endTime)) }\r\n                    : {}),\r\n                  rules: [\r\n                    {\r\n                      required: false,\r\n                      message: '下架时间'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <DatePicker\r\n                    showTime\r\n                    format=\"YYYY-MM-DD HH:mm\"\r\n                    placeholder=\"下架时间\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={12} md={24} sm={24} offset={6}>\r\n              <div className=\"submitButtons\">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  确定\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nForm;\r\n\r\nexport default Form.create<TagProps>()(CreateTag);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Tag from '../../models/Tag';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport CreateTag from './CreateTag';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface TagProps {\r\n  form: FormComponentProps['form'];\r\n  tag: Tag;\r\n}\r\ninterface TagState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: any;\r\n  pagination: TableListPagination;\r\n  stateMaps: any;\r\n}\r\n@inject('tag')\r\n@observer\r\nclass TagPage extends React.Component<TagProps, TagState> {\r\n  constructor(props: TagProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      stateMaps: {\r\n        1: '上架',\r\n        2: '下架'\r\n      },\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '标签名称',\r\n          dataIndex: 'title'\r\n        },\r\n        {\r\n          title: '副标题',\r\n          dataIndex: 'subtitle'\r\n        },\r\n        {\r\n          title: '位置',\r\n          dataIndex: 'sort'\r\n        },\r\n        {\r\n          title: '上架时间',\r\n          dataIndex: 'startTime'\r\n        },\r\n        {\r\n          title: '下架时间',\r\n          dataIndex: 'endTime'\r\n        },\r\n        {\r\n          title: '状态',\r\n          dataIndex: 'state',\r\n          render: (text: number, record: any) => (\r\n            <span>{this.state.stateMaps[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreateTag(record)}\r\n              >\r\n                编辑\r\n              </a>\r\n              <Divider type=\"vertical\" />\r\n              {/* <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" /> */}\r\n              {record.state === 2 && (\r\n                <span>\r\n                  <Popconfirm\r\n                    title=\"你确定上架吗？\"\r\n                    icon={\r\n                      <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                    }\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                    onConfirm={() => this.EditState(record)}\r\n                  >\r\n                    <a href=\"javacript:void(0);\">上架</a>\r\n                  </Popconfirm>\r\n                  {/* <Divider type=\"vertical\" /> */}\r\n                </span>\r\n              )}\r\n              {record.state === 1 && (\r\n                <span>\r\n                  <Popconfirm\r\n                    title=\"你确定下架吗？\"\r\n                    icon={\r\n                      <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                    }\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                    onConfirm={() => this.EditState(record)}\r\n                  >\r\n                    <a href=\"javacript:void(0);\">下架</a>\r\n                  </Popconfirm>\r\n                  {/* <Divider type=\"vertical\" /> */}\r\n                </span>\r\n              )}\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getTagPage();\r\n  }\r\n  getTagPage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        // if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.tag.getTagPage({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getTagPage error');\r\n      }\r\n    });\r\n  };\r\n  DeleteSingle = (record: { id: string }) => {\r\n    this.props.tag.DeleteTag({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getTagPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  EditState = (record: any) => {\r\n    this.props.tag.EditState({\r\n      data: {\r\n        id: record.id,\r\n        state: record.state === 2 ? 1 : 2\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getTagPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n          this.getTagPage();\r\n        }\r\n      }\r\n    });\r\n  };\r\n  isCreateTag = (bool: boolean) => {\r\n    this.setState({\r\n      visible: bool\r\n    });\r\n  };\r\n  CreateTag = (item?: any) => {\r\n    this.isCreateTag(true);\r\n    this.setState({\r\n      currItem: item\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isCreateTag(false);\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getTagPage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getTagPage(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = this.props.tag.tagPage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Card title=\"首页标签管理\" bordered={false} loading={this.state.loading}>\r\n        {this.state.visible && (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width={1100}\r\n            onCancel={() => this.isCreateTag(false)}\r\n            footer={null}\r\n          >\r\n            <CreateTag\r\n              data={this.state.currItem}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getTagPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Col xl={12} md={24} sm={24} style={{ marginBottom: '10px' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"listsearch\"\r\n              onClick={() => {\r\n                this.CreateTag();\r\n              }}\r\n            >\r\n              添加首页标签\r\n            </Button>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<TagProps>()(TagPage);\r\n","import { parse, stringify } from 'qs';\r\nimport { Form, InputNumber, Modal, Spin, Icon } from 'antd';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nimport math from 'mathjs';\r\nimport './utils.less';\r\nexport function createForm() {\r\n  return function (componentClass: any) {\r\n    return Form.create()(componentClass) as any;\r\n  };\r\n}\r\nexport function getQueryString(name: string, url = ''): string | null {\r\n  url = url || window.location.search;\r\n  var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i');\r\n  var r = url.substr(1).match(reg);\r\n  if (r != null) {\r\n    console.log(\"TCL: unescape(r[2])\", unescape(r[2]))\r\n    return unescape(r[2]);\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function getPageQuery() {\r\n  return parse(window.location.href.split('?')[1]);\r\n}\r\n\r\nexport function getQueryPath(path = '', query = {}) {\r\n  const search = stringify(query);\r\n  if (search.length) {\r\n    return `${path}?${search}`;\r\n  }\r\n  return path;\r\n}\r\n\r\nconst reg = /(((^https?:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+(?::\\d+)?|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)$/;\r\n\r\nexport function isUrl(path: string) {\r\n  return reg.test(path);\r\n}\r\n\r\nexport function dateFormater(time: string) {\r\n  if (time && time.length !== 0) {\r\n    let timer = Number(time);\r\n    return moment(timer).format('YYYY-MM-DD HH:mm:ss');\r\n  } else {\r\n    return '- - - - - - - - - - - - -';\r\n  }\r\n}\r\nexport function MoneyFormatter(money: number) {\r\n  if (money) {\r\n    return Number(\r\n      math.divide(math.bignumber(money), math.bignumber(100)).valueOf()\r\n    );\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\nexport function Rgb() {\r\n  //rgb颜色随机\r\n  var r = Math.floor(Math.random() * 256);\r\n  var g = Math.floor(Math.random() * 256);\r\n  var b = Math.floor(Math.random() * 256);\r\n  return 'rgb(' + r + ',' + g + ',' + b + ')'; //所有方法的拼接都可以用ES6新特性`其他字符串{$变量名}`替换\r\n}\r\nexport function countDown(DoSomething: any) {\r\n  let secondsToGo = 20;\r\n  const modal = Modal.info({\r\n    title: (\r\n      <span style={{ textAlign: 'center', color: '#d00' }}>数据响应中...</span>\r\n    ),\r\n    content: `Loading...`,\r\n    icon: '',\r\n    className: 'ShowOrHide'\r\n  });\r\n  const timer = setInterval(() => {\r\n    secondsToGo -= 1;\r\n    modal.update({\r\n      content: (\r\n        <div>\r\n          <Spin\r\n            style={{ marginLeft: '120px', marginTop: '20px' }}\r\n            size=\"large\"\r\n          />\r\n        </div>\r\n      )\r\n    });\r\n  }, 1000);\r\n  setTimeout(() => {\r\n    clearInterval(timer);\r\n    modal.destroy();\r\n    DoSomething();\r\n  }, secondsToGo * 1000);\r\n}\r\n\r\nexport function setTimes(value: number) {\r\n  var secondTime = parseInt(value + ''); // 秒\r\n  var minuteTime = 0; // 分\r\n  var hourTime = 0; // 小时\r\n  if (secondTime > 60) {\r\n    //如果秒数大于60，将秒数转换成整数\r\n    //获取分钟，除以60取整数，得到整数分钟\r\n    minuteTime = parseInt(secondTime / 60 + '');\r\n    //获取秒数，秒数取佘，得到整数秒数\r\n    secondTime = parseInt((secondTime % 60) + '');\r\n    //如果分钟大于60，将分钟转换成小时\r\n    if (minuteTime > 59) {\r\n      //获取小时，获取分钟除以60，得到整数小时\r\n      hourTime = parseInt(minuteTime / 60 + '');\r\n      //获取小时后取佘的分，获取分钟除以60取佘的分\r\n      minuteTime = parseInt((minuteTime % 60) + '');\r\n    }\r\n  }\r\n  var result = '' + parseInt(secondTime + '') + '秒';\r\n\r\n  if (minuteTime > 0 || minuteTime === 0) {\r\n    result = '' + parseInt(minuteTime + '') + '分' + result;\r\n  }\r\n  if (hourTime > 0) {\r\n    result = '' + parseInt(hourTime + '') + '小时' + result;\r\n  }\r\n  return result;\r\n}\r\nexport function Biography(data: any) {\r\n  const array = Object.keys(data);\r\n  const array_bio: any = [];\r\n  array.map((item: any, index: number) => {\r\n    array_bio.push(data[item] ? '&' + item + '=' + data[item] : '');\r\n  });\r\n  return array_bio\r\n    .filter(Boolean)\r\n    .toString()\r\n    .replace(/,/g, '')\r\n    .replace('&', '?');\r\n}\r\n\r\nconst CryptoJS = require('crypto-js'); //引用AES源码js\r\nconst key = CryptoJS.enc.Utf8.parse('2zxmiramartravel'); //十六位十六进制数作为密钥\r\nconst iv = CryptoJS.enc.Utf8.parse('2zxmiramartravel'); //十六位十六进制数作为密钥偏移量\r\n\r\n//加密方法\r\nexport function Encrypt(word: string) {\r\n  let srcs = CryptoJS.enc.Utf8.parse(word);\r\n  console.log('TCL: Encrypt -> srcs', srcs);\r\n  let encrypted = CryptoJS.AES.encrypt(srcs, key, {\r\n    iv: iv,\r\n    mode: CryptoJS.mode.CBC,\r\n    padding: CryptoJS.pad.ZeroPadding\r\n  });\r\n  console.log('TCL: Encrypt -> encrypted', encrypted);\r\n  var hexStr = encrypted.ciphertext.toString().toUpperCase();\r\n  var oldHexStr = CryptoJS.enc.Hex.parse(hexStr);\r\n  var base64Str = CryptoJS.enc.Base64.stringify(oldHexStr);\r\n  return base64Str;\r\n}\r\nexport function IndexOfHttp(url: string) {\r\n  let isIndexOf = url.includes('http' || \"https\")\r\n  if (isIndexOf) {\r\n    return url\r\n  } else {\r\n    return \"https://\" + url\r\n  }\r\n}\r\n//节假日\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport urlMaps from '../../common/urlMaps';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport NewBraft from '../../components/BraftEditor';\r\nimport store from '../../models/index';\r\nimport BraftEditor, { EditorState } from 'braft-editor';\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css';\r\nimport '../../components/BraftEditor/index.less';\r\nimport OssUpload from '../../components/Upload';\r\nimport { IndexOfHttp } from '../../utils/utils';\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\nconst Option = Select.Option;\r\nconst RadioButton = Radio.Button;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst { Dragger } = Upload;\r\ninterface AdvertProps {\r\n  form: FormComponentProps['form'];\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n  loading: boolean;\r\n  jump: number;\r\n  cityId: string;\r\n}\r\n@inject('advertisement')\r\n@observer\r\nclass CreateAdvert extends Component<AdvertProps, State> {\r\n  constructor(props: AdvertProps) {\r\n    super(props);\r\n    this.state = {\r\n      status: true,\r\n      loading: true,\r\n      jump: 0,\r\n      cityId: ''\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    await store.global.getCityList({\r\n      data: {\r\n        current: 1,\r\n        size: 10000\r\n      }\r\n    });\r\n    await store.tag.getTagPage({\r\n      data: {\r\n        current: 1,\r\n        size: 10000,\r\n        state: 1\r\n      }\r\n    });\r\n    await store.strategy.getCityStrategyPage({\r\n      data: {\r\n        current: 1,\r\n        size: 10000,\r\n        state: 1\r\n      }\r\n    });\r\n    await store.strategy.getPictureStrategyPage({\r\n      data: {\r\n        current: 1,\r\n        size: 10000,\r\n        state: 1\r\n      }\r\n    });\r\n    await store.strategy.getVideoStrategyPage({\r\n      data: {\r\n        current: 1,\r\n        size: 10000,\r\n        state: 1\r\n      }\r\n    });\r\n    await store.tourisms.getTourismPage({\r\n      data: {\r\n        current: 1,\r\n        size: 10000,\r\n        state: 1\r\n      }\r\n    });\r\n    (await this.props.data) &&\r\n      store.advertisement.getAdvertisementSingle({\r\n        data: {\r\n          id: this.props.data.id\r\n        },\r\n        callback: res => {\r\n          if (res.code === 0) {\r\n            this.setState({\r\n              loading: false,\r\n              jump: res.data.jump,\r\n              cityId: res.data.cityId\r\n            });\r\n          }\r\n        }\r\n      });\r\n  }\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.props.data\r\n          ? store.advertisement.EditAdvert({\r\n            data: {\r\n              id: this.props.data.id,\r\n              ...values,\r\n              startTime:\r\n                values.startTime !== ''\r\n                  ? moment(values.startTime.valueOf()).format(\r\n                    'YYYY-MM-DD HH:mm:ss'\r\n                  )\r\n                  : '',\r\n              endTime:\r\n                values.endTime !== ''\r\n                  ? moment(values.endTime.valueOf()).format(\r\n                    'YYYY-MM-DD HH:mm:ss'\r\n                  )\r\n                  : '',\r\n              url: values.url[0].response.data.filename,\r\n              jumpUrl: values.jumpUrl ? IndexOfHttp(values.jumpUrl) : \"\"\r\n            },\r\n            callback: res => {\r\n              if (res.code === 0) {\r\n                message.success('保存成功');\r\n                if (this.props.onClose) {\r\n                  this.props.onClose();\r\n                }\r\n              }\r\n            }\r\n          })\r\n          : store.advertisement.CreateAdvert({\r\n            data: {\r\n              ...values,\r\n              startTime:\r\n                values.startTime !== ''\r\n                  ? moment(values.startTime.valueOf()).format(\r\n                    'YYYY-MM-DD HH:mm:ss'\r\n                  )\r\n                  : '',\r\n              endTime:\r\n                values.endTime !== ''\r\n                  ? moment(values.endTime.valueOf()).format(\r\n                    'YYYY-MM-DD HH:mm:ss'\r\n                  )\r\n                  : '',\r\n              url: values.url[0].response.data.filename,\r\n              jumpUrl: values.jumpUrl ? IndexOfHttp(values.jumpUrl) : \"\"\r\n            },\r\n            callback: res => {\r\n              if (res.code === 0) {\r\n                message.success('保存成功');\r\n                if (this.props.onClose) {\r\n                  this.props.onClose();\r\n                }\r\n              }\r\n            }\r\n          });\r\n      }\r\n    });\r\n  };\r\n  handleChangeCity = (value: any) => {\r\n    this.setState(\r\n      {\r\n        cityId: value\r\n      },\r\n      () => {\r\n        this.props.form.setFieldsValue({\r\n          itemId: undefined\r\n          // jumpUrl: \"\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n  handleChangeJump = (value: any) => {\r\n    this.setState(\r\n      {\r\n        jump: value,\r\n        cityId: ''\r\n      },\r\n      () => {\r\n        this.props.form.setFieldsValue({\r\n          cityId: undefined,\r\n          itemId: undefined\r\n          // jumpUrl: \"\"\r\n        });\r\n      }\r\n    );\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const CityList = store.global.cityList;\r\n    const tagList = store.tag.tagPage.records;\r\n    const isEdit = this.props.data !== undefined;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const singleInfo = store.advertisement.advertisementSingle;\r\n    const cityStraegyPage = store.strategy.cityStraegyPage.records.map(item => {\r\n      return { ...item, jumpType: 1 };\r\n    });\r\n    const pictureStraegyPage = store.strategy.pictureStraegyPage.records.map(\r\n      item => {\r\n        return { ...item, jumpType: 2 };\r\n      }\r\n    );\r\n    const videoStraegyPage = store.strategy.videoStraegyPage.records.map(\r\n      item => {\r\n        return { ...item, jumpType: 3 };\r\n      }\r\n    );\r\n    const tourismPage = store.tourisms.tourismPage.records.map(item => {\r\n      return { ...item, jumpType: 4 };\r\n    });\r\n    const info = [\r\n      ...cityStraegyPage,\r\n      ...pictureStraegyPage,\r\n      ...videoStraegyPage,\r\n      ...tourismPage\r\n    ];\r\n    let url = singleInfo.url;\r\n    const json_img = [\r\n      {\r\n        uid: 'rc-upload-1574925611551-2',\r\n        url: 'img/15749256138437071375449767021574925617190.jpg',\r\n        lastModified: 1574400765576,\r\n        lastModifiedDate: '2019-11-22T05:32:45.576Z',\r\n        name: 'b17123b76cb838e9cc2d291f5bf62ba8.jpg',\r\n        size: 1411649,\r\n        type: 'image/jpeg',\r\n        percent: 100,\r\n        originFileObj: {\r\n          uid: 'rc-upload-1574925611551-2',\r\n          url: 'img/15749256138437071375449767021574925617190.jpg'\r\n        },\r\n        status: 'done',\r\n        thumbUrl: '',\r\n        response: {\r\n          code: 0,\r\n          msg: null,\r\n          data: {\r\n            filename:\r\n              'http://miramartravel.oss-cn-shenzhen.aliyuncs.com/img/15749256138437071375449767021574925617190.jpg',\r\n            size: '1411649',\r\n            mimeType: 'image/jpeg',\r\n            width: '1920',\r\n            height: '1080'\r\n          }\r\n        },\r\n        xhr: {}\r\n      }\r\n    ];\r\n    json_img.map((item: any, index: number) => {\r\n      if (url) {\r\n        item.uid = '16549861321684';\r\n        item.url = url;\r\n        item.type = 'img/' + url.split('com/')[1].split('.')[1];\r\n        item.originFileObj.uid = '16549861321684';\r\n        item.originFileObj.url = url;\r\n        item.response.data.filename = url;\r\n        item.response.data.mimeType =\r\n          'img/' + url.split('com/')[1].split('.')[1];\r\n      }\r\n    });\r\n    return (\r\n      <Card\r\n        bordered={false}\r\n        loading={this.props.data ? this.state.loading : false}\r\n        title={isEdit ? '编辑广告' : '添加广告'}\r\n        className=\"CreateMito\"\r\n      >\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"标题\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('title', {\r\n                  initialValue: isEdit ? singleInfo.title : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '标题'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入标题\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"位置\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('position', {\r\n                  initialValue: isEdit ? singleInfo.position : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '位置'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select style={{ width: 200 }} placeholder=\"请选择位置\">\r\n                    <Option value={1}>启动页</Option>\r\n                    <Option value={2}>首页</Option>\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"上架时间\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('startTime', {\r\n                  initialValue: isEdit\r\n                    ? moment(Date.parse(singleInfo.startTime))\r\n                    : null,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '上架时间'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <DatePicker\r\n                    showTime\r\n                    format=\"YYYY-MM-DD HH:mm\"\r\n                    placeholder=\"上架时间\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"下架时间\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('endTime', {\r\n                  ...(isEdit && singleInfo.endTime\r\n                    ? { initialValue: moment(Date.parse(singleInfo.endTime)) }\r\n                    : {}),\r\n                  rules: [\r\n                    {\r\n                      required: false,\r\n                      message: '下架时间'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <DatePicker\r\n                    showTime\r\n                    format=\"YYYY-MM-DD HH:mm\"\r\n                    placeholder=\"下架时间\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"图片\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('url', {\r\n                  initialValue: isEdit ? json_img : [],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '选择图片'\r\n                    }\r\n                  ]\r\n                })(<OssUpload type={'1'} isShowUploadList={true} />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"跳转\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('jump', {\r\n                  initialValue: isEdit ? singleInfo.jump : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '跳转'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    style={{ width: 200 }}\r\n                    placeholder=\"请选择跳转\"\r\n                    onChange={this.handleChangeJump}\r\n                  >\r\n                    <Option value={1}>城市攻略</Option>\r\n                    <Option value={2}>图集攻略</Option>\r\n                    <Option value={3}>视频攻略</Option>\r\n                    <Option value={4}>旅游产品</Option>\r\n                    <Option value={5}>链接</Option>\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            {(this.state.jump === 1 ||\r\n              this.state.jump === 2 ||\r\n              this.state.jump === 3) && (\r\n                <Col xl={24} md={24} sm={24}>\r\n                  <FormItem\r\n                    label=\"跳转城市\"\r\n                    {...formItemLayout}\r\n                    className=\"form-inline-item\"\r\n                  >\r\n                    {getFieldDecorator('cityId', {\r\n                      initialValue: isEdit ? singleInfo.cityId : undefined,\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: '跳转城市'\r\n                        }\r\n                      ]\r\n                    })(\r\n                      <Select\r\n                        style={{ width: 200 }}\r\n                        placeholder=\"请选择跳转城市\"\r\n                        onChange={this.handleChangeCity}\r\n                      >\r\n                        {CityList.map((item: any) => (\r\n                          <Option key={item.id} value={item.id}>\r\n                            {item.name}\r\n                          </Option>\r\n                        ))}\r\n                      </Select>\r\n                    )}\r\n                  </FormItem>\r\n                </Col>\r\n              )}\r\n            {this.state.jump === 4 && (\r\n              <Col xl={24} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"跳转标签\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('cityId', {\r\n                    initialValue: isEdit ? singleInfo.cityId : undefined,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: '跳转标签'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      style={{ width: 200 }}\r\n                      placeholder=\"请选择跳转标签\"\r\n                      onChange={this.handleChangeCity}\r\n                    >\r\n                      {tagList.map((item: any) => (\r\n                        <Option key={item.id} value={item.id}>\r\n                          {item.title}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n            )}\r\n            {this.state.jump !== 5 && this.state.cityId && (\r\n              <Col xl={24} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"对应产品\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('itemId', {\r\n                    initialValue: isEdit ? singleInfo.itemId : undefined,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: '对应产品'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select style={{ width: 200 }} placeholder=\"请选择对应产品\">\r\n                      {info.map(\r\n                        (item: any) =>\r\n                          item.jumpType ===\r\n                          this.props.form.getFieldValue('jump') &&\r\n                          (this.props.form.getFieldValue('cityId') ===\r\n                            item.cityValue ||\r\n                            this.props.form.getFieldValue('cityId') ===\r\n                            item.tagValue) && (\r\n                            <Option key={item.id} value={item.id}>\r\n                              {' '}\r\n                              {item.title || item.name}\r\n                            </Option>\r\n                          )\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n            )}\r\n            {this.state.jump === 5 && (\r\n              <Col xl={24} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"跳转链接\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('jumpUrl', {\r\n                    initialValue: isEdit ? singleInfo.jumpUrl : undefined,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: '跳转'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      placeholder=\"请输入跳转链接\"\r\n                      style={{ width: '200px' }}\r\n                    />\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n            )}\r\n            <Col xl={12} md={24} sm={24} offset={6}>\r\n              <div className=\"submitButtons\">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  确定\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nForm;\r\n\r\nexport default Form.create<AdvertProps>()(CreateAdvert);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Advertisement from '../../models/Advertisement';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport CreateAdvert from './CreateAdvert';\r\nimport { inject, observer } from 'mobx-react';\r\nimport PreviewImg from '../../components/PreviewImg';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface AdvertisementProps {\r\n  form: FormComponentProps['form'];\r\n  advertisement: Advertisement;\r\n}\r\ninterface AdvertisementState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: any;\r\n  pagination: TableListPagination;\r\n  stateMaps: any;\r\n  positionMaps: any;\r\n}\r\n@inject('advertisement')\r\n@observer\r\nclass AdvertisementPage extends React.Component<\r\n  AdvertisementProps,\r\n  AdvertisementState\r\n> {\r\n  constructor(props: AdvertisementProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      positionMaps: {\r\n        1: '启动页',\r\n        2: '首页'\r\n      },\r\n      stateMaps: {\r\n        1: '待显示',\r\n        2: '显示',\r\n        3: '隐藏'\r\n      },\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '标题',\r\n          dataIndex: 'title'\r\n        },\r\n        {\r\n          title: '位置',\r\n          dataIndex: 'position',\r\n          render: (text: string, record: any) => (\r\n            <span>{this.state.positionMaps[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '图片',\r\n          dataIndex: 'url',\r\n          render: (text: string) => <PreviewImg alt={'img'} src={text} />\r\n        },\r\n        {\r\n          title: '跳转',\r\n          dataIndex: 'jumpUrl'\r\n        },\r\n        {\r\n          title: '开始时间',\r\n          dataIndex: 'startTime'\r\n        },\r\n        {\r\n          title: '结束时间',\r\n          dataIndex: 'endTime'\r\n        },\r\n        {\r\n          title: '状态',\r\n          dataIndex: 'state',\r\n          render: (text: number, record: any) => (\r\n            <span>{this.state.stateMaps[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreateAdvert(record)}\r\n              >\r\n                编辑\r\n              </a>\r\n              <Divider type=\"vertical\" />\r\n              {/* <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" /> */}\r\n              {/* {record.state === 2 &&\r\n                <span>\r\n                  <Popconfirm\r\n                    title=\"你确定上架吗？\"\r\n                    icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                    onConfirm={() => this.EnableShutdown(record)}\r\n                  >\r\n                    <a href=\"javacript:void(0);\">上架</a>\r\n                  </Popconfirm>\r\n                  <Divider type=\"vertical\" />\r\n                </span>\r\n              }\r\n              {record.state === 1 &&\r\n                <span>\r\n                  <Popconfirm\r\n                    title=\"你确定下架吗？\"\r\n                    icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                    onConfirm={() => this.EnableShutdown(record)}\r\n                  >\r\n                    <a href=\"javacript:void(0);\">下架</a>\r\n                  </Popconfirm>\r\n                  <Divider type=\"vertical\" />\r\n                </span> */}\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getAdvertisementPage();\r\n  }\r\n  getAdvertisementPage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        //    if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.advertisement.getAdvertisementPage({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getTagPage error');\r\n      }\r\n    });\r\n  };\r\n  DeleteSingle = (record: { id: string }) => {\r\n    this.props.advertisement.DeleteAdvertisement({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getAdvertisementPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n          this.getAdvertisementPage();\r\n        }\r\n      }\r\n    });\r\n  };\r\n  // EnableShutdown = (record: any) => {\r\n  //   this.props.tag.EditTag({\r\n  //     data: {\r\n  //       id: record.id,\r\n  //       state: record.state === 2 ? 1 : 2\r\n  //     },\r\n  //     callback: (res) => {\r\n  //       if (res.code === 0) {\r\n  //         message.success(res.msg || \"操作成功\")\r\n  //         this.getTagPage();\r\n  //       } else {\r\n  //         message.error(res.msg || \"操作失败\")\r\n  //       }\r\n  //     }\r\n  //   })\r\n  // }\r\n  isCreateAdvert = (bool: boolean) => {\r\n    this.setState({\r\n      visible: bool\r\n    });\r\n  };\r\n  CreateAdvert = (item?: any) => {\r\n    this.isCreateAdvert(true);\r\n    this.setState({\r\n      currItem: item\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isCreateAdvert(false);\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getAdvertisementPage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getAdvertisementPage(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = this.props.advertisement.advertisementPage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Card title=\"广告管理\" bordered={false} loading={this.state.loading}>\r\n        {this.state.visible && (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width={1100}\r\n            onCancel={() => this.isCreateAdvert(false)}\r\n            footer={null}\r\n          >\r\n            <CreateAdvert\r\n              data={this.state.currItem}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getAdvertisementPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row\r\n              gutter={{ md: 8, lg: 24, xl: 48 }}\r\n              style={{ marginTop: '20px' }}\r\n            >\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"标题\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('name')(<Input placeholder=\"标题\" />)}\r\n                </FormItem>\r\n              </Col>\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"状态\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('state')(\r\n                    <Select style={{ width: 200 }} placeholder=\"请选择状态\">\r\n                      <Option key={1} value={1}>\r\n                        待显示\r\n                      </Option>\r\n                      <Option key={2} value={2}>\r\n                        显示\r\n                      </Option>\r\n                      <Option key={3} value={3}>\r\n                        隐藏\r\n                      </Option>\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col\r\n                xl={10}\r\n                md={24}\r\n                sm={24}\r\n                offset={2}\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <div className=\"submitButtons\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"listsearch\"\r\n                  >\r\n                    查询\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Col xl={12} md={24} sm={24} style={{ marginBottom: '10px' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"listsearch\"\r\n              onClick={() => {\r\n                this.CreateAdvert();\r\n              }}\r\n            >\r\n              添加广告\r\n            </Button>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<AdvertisementProps>()(AdvertisementPage);\r\n","import React from 'react';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree,\r\n  Table,\r\n  Drawer,\r\n  List,\r\n  Avatar\r\n} from 'antd';\r\nimport store from '../../models/index';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../../modules/Table';\r\nimport { isPlainObject } from 'mobx/lib/internal';\r\nimport { inject, observer } from 'mobx-react';\r\nimport PreviewImg from '../PreviewImg';\r\nimport { TableRowSelection } from 'antd/lib/table/interface';\r\nconst Option = Select.Option;\r\nconst FormItem = Form.Item;\r\ninterface Props {\r\n  onChange?(selectInfo: any): void;\r\n  value?: any;\r\n  type: any;\r\n}\r\ninterface State {\r\n  columns: StandardTableColumnProps[];\r\n  selectedRow: any;\r\n  visible: boolean;\r\n  selectedRowKeys: any;\r\n}\r\n\r\n@inject('global')\r\n@observer\r\nclass Relation extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      columns: [\r\n        {\r\n          title: '图片',\r\n          dataIndex: 'coverUrl',\r\n          render: (text: string, record: any) => (\r\n            <PreviewImg alt=\"url\" src={text} />\r\n          )\r\n        },\r\n        {\r\n          title: '标题',\r\n          dataIndex: 'title'\r\n        },\r\n        {\r\n          title: '出游人数',\r\n          dataIndex: 'count'\r\n        },\r\n        {\r\n          title: '价格',\r\n          dataIndex: 'price'\r\n        }\r\n      ],\r\n      selectedRow: [],\r\n      selectedRowKeys: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    store.global.getRelationPage({\r\n      data: {\r\n        isRelation: 2,\r\n        type: this.props.type,\r\n        size: 1000,\r\n        current: 1\r\n      }\r\n    });\r\n  }\r\n  onSelectChange = (selectedRowKeys: any, selectedRow: any) => {\r\n    this.setState({\r\n      selectedRow: selectedRow,\r\n      selectedRowKeys: selectedRowKeys\r\n    });\r\n  };\r\n  showDrawer = () => {\r\n    this.setState(\r\n      {\r\n        visible: true,\r\n        selectedRow: this.props.value,\r\n        selectedRowKeys: this.props.value.map((item: any) => item.tourProductId)\r\n      },\r\n      () => {\r\n        console.log(\r\n          'selectedRow',\r\n          this.state.selectedRow,\r\n          this.state.selectedRowKeys\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  CheckSelect = () => {\r\n    this.setState(\r\n      {\r\n        visible: false\r\n      },\r\n      () => {\r\n        this.props.onChange && this.props.onChange(this.state.selectedRow);\r\n      }\r\n    );\r\n  };\r\n  render() {\r\n    const info = store.global.relationPage.records;\r\n    const { selectedRow, selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n      onChange: this.onSelectChange,\r\n      selectedRowKeys,\r\n      type: this.props.type === 1 ? 'checkbox' : 'radio'\r\n    } as TableRowSelection<any>;\r\n    const hasSelected = selectedRow.length > 0;\r\n    return (\r\n      <div>\r\n        <Button style={{ marginLeft: 15 }} onClick={this.showDrawer}>\r\n          关联旅游产品\r\n        </Button>\r\n        <Drawer\r\n          title=\"关联旅游产品\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          width={700}\r\n        >\r\n          <div style={{ marginBottom: 16 }}>\r\n            <Button onClick={this.CheckSelect} disabled={!hasSelected}>\r\n              关联旅游产品\r\n            </Button>\r\n            <span style={{ marginLeft: 8 }}>\r\n              {hasSelected ? `选择 ${selectedRow.length} 个` : ''}\r\n            </span>\r\n          </div>\r\n          <Table\r\n            rowKey={(record: any) => record.tourProductId}\r\n            rowSelection={rowSelection}\r\n            columns={this.state.columns}\r\n            dataSource={info}\r\n            pagination={{\r\n              pageSize: 1000,\r\n              hideOnSinglePage: true\r\n            }}\r\n          />\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Relation;\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree,\r\n  Table,\r\n  Popconfirm,\r\n  Radio,\r\n  Badge,\r\n  Calendar,\r\n  Drawer,\r\n  List,\r\n  Avatar\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport urlMaps from '../../common/urlMaps';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport NewBraft from '../../components/BraftEditor';\r\nimport store from '../../models/index';\r\nimport BraftEditor, { EditorState } from 'braft-editor';\r\nimport PreviewImg from '../../components/PreviewImg';\r\n// 引入编辑器样式\r\nimport OssUpload from '../../components/Upload';\r\nimport Picture from '../../components/Picture';\r\nimport Relation from '../../components/Relation';\r\n\r\nimport { StandardTableColumnProps } from '../Table';\r\n\r\n// import './index.less'\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst { Dragger } = Upload;\r\ninterface Props {\r\n  form: FormComponentProps['form'];\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n  columns: StandardTableColumnProps[];\r\n  fileData: any[];\r\n  everyDay: any[];\r\n  selectInfo: any[];\r\n  // dataChange: any\r\n}\r\n@inject('resource', 'global')\r\n@observer\r\nclass CreatePicture extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      status: true,\r\n      fileData: [],\r\n      everyDay: [],\r\n      selectInfo: [],\r\n      // dataChange: {},\r\n      columns: [\r\n        {\r\n          title: '图片',\r\n          dataIndex: 'url',\r\n          render: (text: string, record: any) =>\r\n            record.format === 1 ? (\r\n              <PreviewImg alt=\"url\" src={text} />\r\n            ) : (\r\n                <video style={{ width: 200 }} src={text} controls />\r\n              )\r\n        },\r\n        {\r\n          title: '图片宽度',\r\n          dataIndex: 'wide'\r\n        },\r\n        {\r\n          title: '图片高度',\r\n          dataIndex: 'high'\r\n        },\r\n        {\r\n          title: '编辑',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => {\r\n            return (\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm>\r\n            );\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    store.global.getCityList({\r\n      data: {}\r\n    });\r\n    this.props.data &&\r\n      store.strategy.getPictureSingle({\r\n        data: {\r\n          id: this.props.data.id\r\n        },\r\n        callback: res => {\r\n          if (res.code === 0) {\r\n            this.setState({\r\n              fileData: res.data.bmMaterialList\r\n            });\r\n          }\r\n        }\r\n      });\r\n  }\r\n  DeleteSingle = (record: any) => {\r\n    this.setState({\r\n      fileData: this.state.fileData.filter(item => {\r\n        return item !== record;\r\n      })\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.props.data\r\n          ? store.strategy.EditPictureStraegy({\r\n            data: {\r\n              id: this.props.data.id,\r\n              ...values,\r\n              type: 2,\r\n              bmMaterialList: this.state.fileData\r\n            },\r\n            callback: res => {\r\n              if (res.code === 0) {\r\n                message.success('保存成功');\r\n                if (this.props.onClose) {\r\n                  this.props.onClose();\r\n                }\r\n              }\r\n            }\r\n          })\r\n          : store.strategy.CreatePictureStraegy({\r\n            data: {\r\n              ...values,\r\n              type: 2,\r\n              bmMaterialList: this.state.fileData\r\n            },\r\n            callback: res => {\r\n              if (res.code === 0) {\r\n                message.success('保存成功');\r\n                if (this.props.onClose) {\r\n                  this.props.onClose();\r\n                }\r\n              }\r\n            }\r\n          });\r\n      }\r\n    });\r\n  };\r\n  DeleteInfo = (value: any) => {\r\n    this.forceUpdate();\r\n    console.log('TCL: Relation -> DeleteInfo -> value', value);\r\n    this.setState(\r\n      {\r\n        selectInfo: this.props.form\r\n          .getFieldValue('bmTourProductDaysList')\r\n          .filter((item: any) => {\r\n            return item !== value;\r\n          })\r\n      },\r\n      () => {\r\n        this.props.form.setFieldsValue({\r\n          bmTourProductDaysList: this.state.selectInfo\r\n        });\r\n      }\r\n    );\r\n  };\r\n  ChangeList = (fileList: any) => {\r\n    const dataArray = fileList.map((item: any) => item.response.data);\r\n    this.setState({\r\n      fileData: [\r\n        ...this.state.fileData,\r\n        ...dataArray.map((item: any, index: number) => {\r\n          return {\r\n            wide: item.width,\r\n            high: item.height,\r\n            url: item.filename,\r\n            format: 1,\r\n            limits: 1,\r\n            type: 2\r\n          };\r\n        })\r\n      ]\r\n    });\r\n  };\r\n  ChangePicture = (fileList: any) => {\r\n    this.setState({\r\n      fileData: [\r\n        ...this.state.fileData,\r\n        ...fileList.map((item: any, index: number) => {\r\n          return {\r\n            format: 1,\r\n            limits: 2,\r\n            type: 2,\r\n            high: item.high,\r\n            wide: item.wide,\r\n            url: item.url\r\n          };\r\n        })\r\n      ]\r\n    });\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const isEdit = this.props.data !== undefined;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const CityList = store.global.cityList;\r\n    const info = store.strategy.pictureSingle;\r\n    const FilterSelect = [...new Set(this.state.selectInfo)];\r\n    return (\r\n      <Card\r\n        bordered={false}\r\n        title={isEdit ? '编辑图集攻略' : '添加图集攻略'}\r\n        className=\"CreateMito\"\r\n      >\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"图集名称\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('title', {\r\n                  initialValue: isEdit ? info.title : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '图集名称'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入图集名称\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"图集说明\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('content', {\r\n                  initialValue: isEdit ? info.content : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '图集说明'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <TextArea\r\n                    placeholder=\"请输入图集说明\"\r\n                    autoSize={{ minRows: 5 }}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"城市\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('city', {\r\n                  initialValue: isEdit ? info.city : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '城市'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select style={{ width: 200 }} placeholder=\"请选择搜索城市\">\r\n                    {CityList.map((item: any, index: number) => (\r\n                      <Option key={item.id} value={item.id}>\r\n                        {item.name}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"上传图片\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                <ul>\r\n                  <li style={{ marginLeft: '20px', listStyle: 'none' }}>\r\n                    <OssUpload\r\n                      onChange={this.ChangeList}\r\n                      type={'1'}\r\n                      isShowUploadList={false}\r\n                    />\r\n                  </li>\r\n                  <li style={{ marginLeft: '20px', listStyle: 'none' }}>\r\n                    <Picture city={this.props.form.getFieldValue('city')} onChange={this.ChangePicture} type={'1'} />\r\n                  </li>\r\n                </ul>\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"轮播图片\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                <Table\r\n                  columns={this.state.columns}\r\n                  bordered={false}\r\n                  dataSource={this.state.fileData}\r\n                  pagination={false}\r\n                />\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label={\r\n                  <span>\r\n                    关联旅游产品&nbsp;\r\n                    <Tooltip title=\"仅可关联一个旅游产品\">\r\n                      <Icon type=\"question-circle-o\" />\r\n                    </Tooltip>\r\n                  </span>\r\n                }\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('bmTourProductDaysList', {\r\n                  initialValue: isEdit ? info.bmTourProductDaysList : [],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '关联旅游产品'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Relation\r\n                    type={2}\r\n                  // onChange={this.ChangeSelect}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label={`已选中旅游产品`}\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                <List\r\n                  itemLayout=\"horizontal\"\r\n                  dataSource={this.props.form.getFieldValue(\r\n                    'bmTourProductDaysList'\r\n                  )}\r\n                  renderItem={(item: any) => (\r\n                    <List.Item\r\n                      actions={[\r\n                        <a\r\n                          key=\"list-loadmore-edit\"\r\n                          onClick={() => this.DeleteInfo(item)}\r\n                        >\r\n                          删除\r\n                        </a>\r\n                      ]}\r\n                    >\r\n                      <List.Item.Meta\r\n                        avatar={<Avatar src={item.coverUrl} />}\r\n                        title={<span>{item.title}</span>}\r\n                        description={\r\n                          <div>\r\n                            <span>{item.count}人出游</span>{' '}\r\n                            <span style={{ color: '#d00' }}>\r\n                              ￥{item.price}起\r\n                            </span>\r\n                          </div>\r\n                        }\r\n                      />\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n              </FormItem>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        <Col xl={12} md={24} sm={24} offset={6}>\r\n          <div className=\"submitButtons\">\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              onClick={this.handleSubmit}\r\n            >\r\n              确定\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create<Props>()(CreatePicture);\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree,\r\n  Table,\r\n  Popconfirm,\r\n  Radio,\r\n  Badge,\r\n  Calendar,\r\n  Drawer\r\n} from 'antd';\r\nimport PreviewImg from '../../components/PreviewImg';\r\nimport store from '../../models/index';\r\nimport { FormComponentProps } from 'antd/lib/form';\r\nimport { StandardTableColumnProps } from '../Table';\r\nimport { observer, inject } from 'mobx-react';\r\ninterface Props {\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  columns: StandardTableColumnProps[];\r\n  // dataChange: any\r\n}\r\n@inject('tourisms')\r\n@observer\r\nexport default class ShowPicture extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          title: '图片',\r\n          dataIndex: 'url',\r\n          render: (text: string, record: any) =>\r\n            record.format === 1 ? (\r\n              <PreviewImg alt=\"url\" src={text} />\r\n            ) : (\r\n              <video style={{ width: 200 }} src={text} controls />\r\n            )\r\n        },\r\n        {\r\n          title: '图片宽度',\r\n          dataIndex: 'wide'\r\n        },\r\n        {\r\n          title: '图片高度',\r\n          dataIndex: 'high'\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => {\r\n            return (\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm>\r\n            );\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  DeleteSingle = (record: any) => {\r\n    store.tourisms.DeleteImage({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success('删除成功');\r\n          this.getPicturePage();\r\n        } else {\r\n          message.success('删除失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getPicturePage();\r\n  }\r\n  getPicturePage = () => {\r\n    store.tourisms.getOwnPictures({\r\n      data: {\r\n        itemId: this.props.data.id,\r\n        current: 1,\r\n        size: 100,\r\n        type: 2\r\n        // format: 1,//图片\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = store.tourisms.ownPicturePage;\r\n    return (\r\n      <Card title=\"图集\" bordered={false}>\r\n        <Table\r\n          columns={this.state.columns}\r\n          bordered={false}\r\n          dataSource={info.records}\r\n          pagination={false}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Strategy from '../../models/Strategy';\r\nimport Global from '../../models/Global';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport CreatePicture from './CreatePicture';\r\nimport ShowPicture from './ShowPicture';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface Props {\r\n  form: FormComponentProps['form'];\r\n  strategy: Strategy;\r\n  global: Global;\r\n}\r\ninterface State {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: any;\r\n  pagination: TableListPagination;\r\n  stateMaps: any;\r\n  isShow: boolean;\r\n  dataShow: any;\r\n}\r\n@inject('strategy', 'global')\r\n@observer\r\nclass PictureStrategy extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      stateMaps: {\r\n        1: '上架',\r\n        2: '下架'\r\n      },\r\n      isShow: false,\r\n      dataShow: {},\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '图集名称',\r\n          dataIndex: 'title'\r\n        },\r\n        {\r\n          title: '图集说明',\r\n          dataIndex: 'content',\r\n          width: 600\r\n        },\r\n        {\r\n          title: '图片数量',\r\n          dataIndex: 'num',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {record.bmMaterialList.length}个\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.ShowPicture(record)}\r\n              >\r\n                查看\r\n              </a>\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: '城市',\r\n          dataIndex: 'city'\r\n        },\r\n        {\r\n          title: '关联旅游产品',\r\n          dataIndex: 'cityInfo',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {record.bmTourProductDaysList[0] &&\r\n                record.bmTourProductDaysList[0].title}\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: '状态',\r\n          dataIndex: 'state',\r\n          render: (text: number, record: any) => (\r\n            <span>{this.state.stateMaps[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreateHotel(record)}\r\n              >\r\n                编辑\r\n              </a>\r\n              <Divider type=\"vertical\" />\r\n              {/* <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" /> */}\r\n              {record.state === 2 && (\r\n                <span>\r\n                  <Popconfirm\r\n                    title=\"你确定上架吗？\"\r\n                    icon={\r\n                      <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                    }\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                    onConfirm={() => this.EnableShutdown(record)}\r\n                  >\r\n                    <a href=\"javacript:void(0);\">上架</a>\r\n                  </Popconfirm>\r\n                  <Divider type=\"vertical\" />\r\n                </span>\r\n              )}\r\n              {record.state === 1 && (\r\n                <span>\r\n                  <Popconfirm\r\n                    title=\"你确定下架吗？\"\r\n                    icon={\r\n                      <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                    }\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                    onConfirm={() => this.EnableShutdown(record)}\r\n                  >\r\n                    <a href=\"javacript:void(0);\">下架</a>\r\n                  </Popconfirm>\r\n                  <Divider type=\"vertical\" />\r\n                </span>\r\n              )}\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getPictureStrategyPage();\r\n  }\r\n  getPictureStrategyPage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        //  if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.page_size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.strategy.getPictureStrategyPage({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getPictureStrategyPage error');\r\n      }\r\n    });\r\n  };\r\n  DeleteSingle = (record: { id: string }) => {\r\n    this.props.strategy.DeletePictureStrategyPage({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getPictureStrategyPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  EnableShutdown = (record: any) => {\r\n    this.props.strategy.EditImageUpOrDown({\r\n      data: {\r\n        id: record.id,\r\n        state: record.state === 2 ? 1 : 2\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getPictureStrategyPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  ShowPicture = (item?: any) => {\r\n    this.isShowPicture(true);\r\n    this.setState({\r\n      dataShow: item\r\n    });\r\n  };\r\n  isShowPicture = (bool: boolean) => {\r\n    this.setState({\r\n      isShow: bool\r\n    });\r\n  };\r\n  isCreateHotel = (bool: boolean) => {\r\n    this.setState({\r\n      visible: bool\r\n    });\r\n  };\r\n  CreateHotel = (item?: any) => {\r\n    this.isCreateHotel(true);\r\n    this.setState({\r\n      currItem: item\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isCreateHotel(false);\r\n    this.isShowPicture(false);\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getPictureStrategyPage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getPictureStrategyPage(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = this.props.strategy.pictureStraegyPage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Card title=\"图集攻略管理\" bordered={false} loading={this.state.loading}>\r\n        {this.state.isShow && (\r\n          <Modal\r\n            visible={this.state.isShow}\r\n            width={1300}\r\n            onCancel={() => this.isShowPicture(false)}\r\n            footer={null}\r\n          >\r\n            <ShowPicture\r\n              data={this.state.dataShow}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getPictureStrategyPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        {this.state.visible && (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width={1100}\r\n            onCancel={() => this.isCreateHotel(false)}\r\n            footer={null}\r\n          >\r\n            <CreatePicture\r\n              data={this.state.currItem}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getPictureStrategyPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row\r\n              gutter={{ md: 8, lg: 24, xl: 48 }}\r\n              style={{ marginTop: '20px' }}\r\n            >\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"图集名称\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('name')(<Input placeholder=\"图集名称\" />)}\r\n                </FormItem>\r\n              </Col>\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"状态\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('city')(\r\n                    <Select style={{ width: 200 }} placeholder=\"请选择状态\">\r\n                      <Option key={1} value={1}>\r\n                        上架\r\n                      </Option>\r\n                      <Option key={2} value={2}>\r\n                        下架\r\n                      </Option>\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col\r\n                xl={10}\r\n                md={24}\r\n                sm={24}\r\n                offset={2}\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <div className=\"submitButtons\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"listsearch\"\r\n                  >\r\n                    查询\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Col xl={12} md={24} sm={24} style={{ marginBottom: '10px' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"listsearch\"\r\n              onClick={() => {\r\n                this.CreateHotel();\r\n              }}\r\n            >\r\n              添加图集攻略\r\n            </Button>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<Props>()(PictureStrategy);\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree,\r\n  Table,\r\n  Popconfirm,\r\n  Radio,\r\n  Badge,\r\n  Calendar,\r\n  Drawer,\r\n  List,\r\n  Avatar\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport urlMaps from '../../common/urlMaps';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport NewBraft from '../../components/BraftEditor';\r\nimport store from '../../models/index';\r\nimport BraftEditor, { EditorState } from 'braft-editor';\r\nimport PreviewImg from '../../components/PreviewImg';\r\n// 引入编辑器样式\r\nimport OssUpload from '../../components/Upload';\r\nimport { StandardTableColumnProps } from '../Table';\r\nimport Picture from '../../components/Picture';\r\nimport Relation from '../../components/Relation';\r\n// import './index.less'\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst { Dragger } = Upload;\r\ninterface Props {\r\n  form: FormComponentProps['form'];\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n  columns: StandardTableColumnProps[];\r\n  fileData: any[];\r\n  everyDay: any[];\r\n  selectInfo: any[];\r\n  // dataChange: any\r\n}\r\n@inject('resource', 'global')\r\n@observer\r\nclass CreateVideo extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      status: true,\r\n      fileData: [],\r\n      everyDay: [],\r\n      selectInfo: [],\r\n      // dataChange: {},\r\n      columns: [\r\n        {\r\n          title: '视频',\r\n          dataIndex: 'url',\r\n          render: (text: string, record: any) => (\r\n            <video style={{ width: 200 }} src={text} controls />\r\n          )\r\n        },\r\n        {\r\n          title: '视频宽度',\r\n          dataIndex: 'wide'\r\n        },\r\n        {\r\n          title: '视频高度',\r\n          dataIndex: 'high'\r\n        },\r\n        {\r\n          title: '编辑',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => {\r\n            return (\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm>\r\n            );\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  DeleteSingle = (record: any) => {\r\n    this.setState({\r\n      fileData: this.state.fileData.filter(item => {\r\n        return item !== record;\r\n      })\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    store.global.getCityList({\r\n      data: {}\r\n    });\r\n    this.props.data &&\r\n      store.strategy.getVideoSingle({\r\n        data: {\r\n          id: this.props.data.id\r\n        },\r\n        callback: res => {\r\n          console.log('TCL: CreateVideo -> componentDidMount -> res', res);\r\n          if (res.code === 0) {\r\n            this.setState({\r\n              fileData: res.data.bmMaterialList\r\n            });\r\n          }\r\n        }\r\n      });\r\n  }\r\n  ChangeList = (fileList: any) => {\r\n    const dataArray = fileList.map((item: any) => item.response.data);\r\n    this.setState({\r\n      fileData: [\r\n        ...this.state.fileData,\r\n        ...dataArray.map((item: any, index: number) => {\r\n          return {\r\n            wide: item.width,\r\n            high: item.height,\r\n            url: item.filename,\r\n            format: 1,\r\n            limits: 1,\r\n            type: 3\r\n          };\r\n        })\r\n      ]\r\n    });\r\n  };\r\n  ChangeVideo = (fileList: any) => {\r\n    this.setState({\r\n      fileData: [\r\n        ...this.state.fileData,\r\n        ...fileList.map((item: any, index: number) => {\r\n          return {\r\n            format: 1,\r\n            limits: 2,\r\n            type: 3,\r\n            high: item.high,\r\n            wide: item.wide,\r\n            url: item.url\r\n          };\r\n        })\r\n      ]\r\n    });\r\n  };\r\n  DeleteInfo = (value: any) => {\r\n    console.log('TCL: Relation -> DeleteInfo -> value', value);\r\n    this.setState(\r\n      {\r\n        selectInfo: this.props.form\r\n          .getFieldValue('bmTourProductDaysList')\r\n          .filter((item: any) => {\r\n            return item !== value;\r\n          })\r\n      },\r\n      () => {\r\n        this.props.form.setFieldsValue({\r\n          bmTourProductDaysList: this.state.selectInfo\r\n        });\r\n      }\r\n    );\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.props.data\r\n          ? store.strategy.EditVideoStraegy({\r\n            data: {\r\n              id: this.props.data.id,\r\n              ...values,\r\n              type: 3,\r\n              bmMaterialList: this.state.fileData.slice(-1)\r\n            },\r\n            callback: res => {\r\n              if (res.code === 0) {\r\n                message.success('保存成功');\r\n                if (this.props.onClose) {\r\n                  this.props.onClose();\r\n                }\r\n              }\r\n            }\r\n          })\r\n          : store.strategy.CreateVideoStraegy({\r\n            data: {\r\n              ...values,\r\n              type: 3,\r\n              bmMaterialList: this.state.fileData.slice(-1)\r\n            },\r\n            callback: res => {\r\n              if (res.code === 0) {\r\n                message.success('保存成功');\r\n                if (this.props.onClose) {\r\n                  this.props.onClose();\r\n                }\r\n              }\r\n            }\r\n          });\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const isEdit = this.props.data !== undefined;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const CityList = store.global.cityList;\r\n    const info = store.strategy.videoSingle;\r\n    return (\r\n      <Card\r\n        bordered={false}\r\n        title={isEdit ? '编辑视频攻略' : '添加视频攻略'}\r\n        className=\"CreateMito\"\r\n      >\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"视频名称\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('title', {\r\n                  initialValue: isEdit ? info.title : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '视频名称'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入视频名称\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"视频说明\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('content', {\r\n                  initialValue: isEdit ? info.content : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '视频说明'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <TextArea\r\n                    placeholder=\"请输入视频说明\"\r\n                    autoSize={{ minRows: 5 }}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"城市\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('city', {\r\n                  initialValue: isEdit ? info.city : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '城市'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select style={{ width: 200 }} placeholder=\"请选择城市\">\r\n                    {CityList.map((item: any, index: number) => (\r\n                      <Option key={item.id} value={item.id}>\r\n                        {item.name}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label={\r\n                  <span>\r\n                    上传视频&nbsp;\r\n                    <Tooltip title=\"只能上传一个视频！！！\">\r\n                      <Icon type=\"info-circle\" />\r\n                    </Tooltip>\r\n                  </span>\r\n                }\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                <div\r\n                  style={{\r\n                    marginLeft: '20px',\r\n                    listStyle: 'none',\r\n                    float: 'left'\r\n                  }}\r\n                >\r\n                  <OssUpload\r\n                    onChange={this.ChangeList}\r\n                    type={'2'}\r\n                    isShowUploadList={false}\r\n                    uploadNumber={1}\r\n                  />\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    marginLeft: '20px',\r\n                    listStyle: 'none',\r\n                    float: 'left'\r\n                  }}\r\n                >\r\n                  <Picture city={this.props.form.getFieldValue('city')} onChange={this.ChangeVideo} type={'2'} />\r\n                </div>\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"视频\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                <Table\r\n                  columns={this.state.columns}\r\n                  bordered={false}\r\n                  dataSource={this.state.fileData.slice(-1)}\r\n                  pagination={false}\r\n                />\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label={\r\n                  <span>\r\n                    关联旅游产品&nbsp;\r\n                    <Tooltip title=\"仅可关联一个旅游产品\">\r\n                      <Icon type=\"question-circle-o\" />\r\n                    </Tooltip>\r\n                  </span>\r\n                }\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('bmTourProductDaysList', {\r\n                  initialValue: isEdit ? info.bmTourProductDaysList : [],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '关联旅游产品'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Relation\r\n                    type={3}\r\n                  // onChange={this.ChangeSelect}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label={`已选中旅游产品`}\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                <List\r\n                  itemLayout=\"horizontal\"\r\n                  dataSource={this.props.form.getFieldValue(\r\n                    'bmTourProductDaysList'\r\n                  )}\r\n                  renderItem={(item: any) => (\r\n                    <List.Item\r\n                      actions={[\r\n                        <a\r\n                          key=\"list-loadmore-edit\"\r\n                          onClick={() => this.DeleteInfo(item)}\r\n                        >\r\n                          删除\r\n                        </a>\r\n                      ]}\r\n                    >\r\n                      <List.Item.Meta\r\n                        avatar={<Avatar src={item.coverUrl} />}\r\n                        title={<span>{item.title}</span>}\r\n                        description={\r\n                          <div>\r\n                            <span>{item.count}人出游</span>{' '}\r\n                            <span style={{ color: '#d00' }}>\r\n                              ￥{item.price}起\r\n                            </span>\r\n                          </div>\r\n                        }\r\n                      />\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n              </FormItem>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        <Col xl={12} md={24} sm={24} offset={6}>\r\n          <div className=\"submitButtons\">\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              onClick={this.handleSubmit}\r\n            >\r\n              确定\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create<Props>()(CreateVideo);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Strategy from '../../models/Strategy';\r\nimport Global from '../../models/Global';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport CreateVideo from './CreateVideo';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface Props {\r\n  form: FormComponentProps['form'];\r\n  strategy: Strategy;\r\n  global: Global;\r\n}\r\ninterface State {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: any;\r\n  pagination: TableListPagination;\r\n  stateMaps: any;\r\n  isShow: boolean;\r\n  dataShow: any;\r\n}\r\n@inject('strategy', 'global')\r\n@observer\r\nclass VideoStrategy extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      stateMaps: {\r\n        1: '上架',\r\n        2: '下架'\r\n      },\r\n      isShow: false,\r\n      dataShow: {},\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '视频名称',\r\n          dataIndex: 'title'\r\n        },\r\n        {\r\n          title: '视频说明',\r\n          dataIndex: 'content',\r\n          width: 600\r\n        },\r\n        {\r\n          title: '视频',\r\n          dataIndex: 'num',\r\n          render: (text: string, record: any) => (\r\n            <video\r\n              style={{ width: 100 }}\r\n              src={\r\n                record.bmMaterialList.length > 0 && record.bmMaterialList[0].url\r\n              }\r\n              controls\r\n            ></video>\r\n          )\r\n        },\r\n        {\r\n          title: '城市',\r\n          dataIndex: 'city'\r\n        },\r\n        {\r\n          title: '关联旅游产品',\r\n          dataIndex: 'cityInfo',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {record.bmTourProductDaysList[0] &&\r\n                record.bmTourProductDaysList[0].title}\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: '状态',\r\n          dataIndex: 'state',\r\n          render: (text: number, record: any) => (\r\n            <span>{this.state.stateMaps[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreateHotel(record)}\r\n              >\r\n                编辑\r\n              </a>\r\n              <Divider type=\"vertical\" />\r\n              {/* <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" /> */}\r\n              {record.state === 2 && (\r\n                <span>\r\n                  <Popconfirm\r\n                    title=\"你确定上架吗？\"\r\n                    icon={\r\n                      <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                    }\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                    onConfirm={() => this.EnableShutdown(record)}\r\n                  >\r\n                    <a href=\"javacript:void(0);\">上架</a>\r\n                  </Popconfirm>\r\n                  <Divider type=\"vertical\" />\r\n                </span>\r\n              )}\r\n              {record.state === 1 && (\r\n                <span>\r\n                  <Popconfirm\r\n                    title=\"你确定下架吗？\"\r\n                    icon={\r\n                      <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                    }\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                    onConfirm={() => this.EnableShutdown(record)}\r\n                  >\r\n                    <a href=\"javacript:void(0);\">下架</a>\r\n                  </Popconfirm>\r\n                  <Divider type=\"vertical\" />\r\n                </span>\r\n              )}\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getVideoStrategyPage();\r\n  }\r\n  getVideoStrategyPage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        // if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.page_size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.strategy.getVideoStrategyPage({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getVideoStrategyPage error');\r\n      }\r\n    });\r\n  };\r\n  DeleteSingle = (record: { id: string }) => {\r\n    this.props.strategy.DeleteVideoStrategyPage({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getVideoStrategyPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  EnableShutdown = (record: any) => {\r\n    this.props.strategy.EditVideoUpOrDown({\r\n      data: {\r\n        id: record.id,\r\n        state: record.state === 2 ? 1 : 2\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getVideoStrategyPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  ShowVideo = (item?: any) => {\r\n    this.isShowVideo(true);\r\n    this.setState({\r\n      dataShow: item\r\n    });\r\n  };\r\n  isShowVideo = (bool: boolean) => {\r\n    this.setState({\r\n      isShow: bool\r\n    });\r\n  };\r\n  isCreateHotel = (bool: boolean) => {\r\n    this.setState({\r\n      visible: bool\r\n    });\r\n  };\r\n  CreateHotel = (item?: any) => {\r\n    this.isCreateHotel(true);\r\n    this.setState({\r\n      currItem: item\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isCreateHotel(false);\r\n    this.isShowVideo(false);\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getVideoStrategyPage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getVideoStrategyPage(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = this.props.strategy.videoStraegyPage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Card title=\"视频攻略管理\" bordered={false} loading={this.state.loading}>\r\n        {this.state.visible && (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width={1100}\r\n            onCancel={() => this.isCreateHotel(false)}\r\n            footer={null}\r\n          >\r\n            <CreateVideo\r\n              data={this.state.currItem}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getVideoStrategyPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row\r\n              gutter={{ md: 8, lg: 24, xl: 48 }}\r\n              style={{ marginTop: '20px' }}\r\n            >\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"视频名称\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('name')(<Input placeholder=\"视频名称\" />)}\r\n                </FormItem>\r\n              </Col>\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"状态\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('city')(\r\n                    <Select style={{ width: 200 }} placeholder=\"请选择状态\">\r\n                      <Option key={1} value={1}>\r\n                        上架\r\n                      </Option>\r\n                      <Option key={2} value={2}>\r\n                        下架\r\n                      </Option>\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col\r\n                xl={10}\r\n                md={24}\r\n                sm={24}\r\n                offset={2}\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <div className=\"submitButtons\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"listsearch\"\r\n                  >\r\n                    查询\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Col xl={12} md={24} sm={24} style={{ marginBottom: '10px' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"listsearch\"\r\n              onClick={() => {\r\n                this.CreateHotel();\r\n              }}\r\n            >\r\n              添加视频攻略\r\n            </Button>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<Props>()(VideoStrategy);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Comment from '../../models/Comment';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface CommentProps {\r\n  form: FormComponentProps['form'];\r\n  comment: Comment;\r\n}\r\ninterface CommentState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  pagination: TableListPagination;\r\n  commentMaps: any;\r\n  itemTypeMaps: any;\r\n}\r\n@inject('comment')\r\n@observer\r\nclass CommentPage extends React.Component<CommentProps, CommentState> {\r\n  constructor(props: CommentProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      itemTypeMaps: {\r\n        1: \"城市攻略\",\r\n        3: \"景点介绍\",\r\n        4: \"旅游产品\",\r\n        5: \"游记\",\r\n      },\r\n      commentMaps: {\r\n        0: '正常',\r\n        1: '待审核',\r\n        2: '审核失败',\r\n        3: '审核通过'\r\n      },\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '评论内容',\r\n          dataIndex: 'content'\r\n        },\r\n        {\r\n          title: '发表用户',\r\n          dataIndex: 'nickName'\r\n        },\r\n        {\r\n          title: '评论模块',\r\n          dataIndex: 'itemType',\r\n          render: (text: number) => <span>{this.state.itemTypeMaps[text]}</span>\r\n        },\r\n        {\r\n          title: '被评论标题',\r\n          dataIndex: 'itemTitle'\r\n        },\r\n        // {\r\n        //   title: '状态',\r\n        //   dataIndex: 'state',\r\n        //   render: (text: number, record: any) => (\r\n        //     <span>{this.state.commentMaps[text]}</span>\r\n        //   )\r\n        // },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {/* <Popconfirm\r\n                title=\"你确定启用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">启用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定停用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">停用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" /> */}\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm>\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getCommentPage();\r\n  }\r\n  getCommentPage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        // if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.comment.getCommentPage({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getCommentPage error');\r\n      }\r\n    });\r\n  };\r\n  DeleteSingle = (record: { id: string }) => {\r\n    this.props.comment.DeleteComment({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getCommentPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  EnableShutdown = (record: object) => {\r\n    // this.props.mito.DeleteMito({\r\n    //   data: {\r\n    //     id:  record.id\r\n    //     )\r\n    //   },\r\n    //   callback: (res) => {\r\n    //     if (res.code === 200) {\r\n    //       message.success(res.msg || \"操作成功\")\r\n    //       this.getMitoList();\r\n    //     } else {\r\n    //       message.error(res.msg || \"操作失败\")\r\n    //     }\r\n    //   }\r\n    // })\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getCommentPage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getCommentPage(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = this.props.comment.commentPage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <Card title=\"评论管理\" bordered={false} loading={this.state.loading}>\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row\r\n              gutter={{ md: 8, lg: 24, xl: 48 }}\r\n              style={{ marginTop: '20px' }}\r\n            >\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"评论内容\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('name')(<Input placeholder=\"评论内容\" />)}\r\n                </FormItem>\r\n              </Col>\r\n              <Col\r\n                xl={10}\r\n                md={24}\r\n                sm={24}\r\n                offset={2}\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <div className=\"submitButtons\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"listsearch\"\r\n                  >\r\n                    查询\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<CommentProps>()(CommentPage);\r\n","import React from 'react';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree,\r\n  Table,\r\n  Drawer,\r\n  List,\r\n  Avatar,\r\n  Popconfirm\r\n} from 'antd';\r\nimport store from '../../models/index';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../../modules/Table';\r\nimport { isPlainObject } from 'mobx/lib/internal';\r\nimport { inject, observer } from 'mobx-react';\r\nimport PreviewImg from '../../components/PreviewImg';\r\nconst Option = Select.Option;\r\nconst FormItem = Form.Item;\r\ninterface Props {\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  columns: StandardTableColumnProps[];\r\n  visible: boolean;\r\n  loading: boolean;\r\n}\r\n\r\n@inject('global')\r\n@observer\r\nclass Products extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      loading: true,\r\n      columns: [\r\n        {\r\n          title: '图片',\r\n          dataIndex: 'coverUrl',\r\n          render: (text: string, record: any) => (\r\n            <PreviewImg alt=\"url\" src={text} />\r\n          )\r\n        },\r\n        {\r\n          title: '标题',\r\n          dataIndex: 'title'\r\n        },\r\n        {\r\n          title: '出游人数',\r\n          dataIndex: 'count'\r\n        },\r\n        {\r\n          title: '价格',\r\n          dataIndex: 'price'\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <Popconfirm\r\n              title=\"你确定删除吗？\"\r\n              icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n              okText=\"确认\"\r\n              cancelText=\"取消\"\r\n              onConfirm={() => this.EditProducts(record, 2)}\r\n            >\r\n              <a href=\"javacript:void(0);\">删除</a>\r\n            </Popconfirm>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getProduct();\r\n  }\r\n  getProduct = () => {\r\n    store.global.getRelationPage({\r\n      data: {\r\n        itemId: this.props.data.id,\r\n        isRelation: 1,\r\n        type: 1,\r\n        size: 1000,\r\n        current: 1\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  EditProducts = (record: any, state: number) => {\r\n    store.global.EditProducts({\r\n      data: {\r\n        tourProductId: record.tourProductId,\r\n        itemId: this.props.data.id,\r\n        isRelation: state,\r\n        type: 1\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getProduct();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = store.global.relationPage.records;\r\n    return (\r\n      <Card title=\"关联旅游产品\" bordered={false} loading={this.state.loading}>\r\n        <div>\r\n          <Table\r\n            rowKey={(record: any) => record.tourProductId}\r\n            columns={this.state.columns}\r\n            dataSource={info}\r\n            pagination={{\r\n              pageSize: 1000,\r\n              hideOnSinglePage: true\r\n            }}\r\n          />\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Products;\r\n","import { Table, Popconfirm, Icon } from 'antd';\r\nimport { DndProvider, DragSource, DropTarget } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport PreviewImg from '../PreviewImg';\r\nimport update from 'immutability-helper';\r\nimport React from 'react';\r\nlet dragingIndex = -1;\r\nclass BodyRow extends React.Component {\r\n  render() {\r\n    const {\r\n      isOver,\r\n      connectDragSource,\r\n      connectDropTarget,\r\n      moveRow,\r\n      ...restProps\r\n    } = this.props;\r\n    const style = { ...restProps.style, cursor: 'move' };\r\n\r\n    let { className } = restProps;\r\n    if (isOver) {\r\n      if (restProps.index > dragingIndex) {\r\n        className += ' drop-over-downward';\r\n      }\r\n      if (restProps.index < dragingIndex) {\r\n        className += ' drop-over-upward';\r\n      }\r\n    }\r\n\r\n    return connectDragSource(\r\n      connectDropTarget(\r\n        <tr {...restProps} className={className} style={style} />\r\n      )\r\n    );\r\n  }\r\n}\r\nconst rowSource = {\r\n  beginDrag(props) {\r\n    dragingIndex = props.index;\r\n    return {\r\n      index: props.index\r\n    };\r\n  }\r\n};\r\n\r\nconst rowTarget = {\r\n  drop(props, monitor) {\r\n    const dragIndex = monitor.getItem().index;\r\n    const hoverIndex = props.index;\r\n    // Don't replace items with themselves\r\n    if (dragIndex === hoverIndex) {\r\n      return;\r\n    }\r\n    // Time to actually perform the action\r\n    props.moveRow(dragIndex, hoverIndex);\r\n    // Note: we're mutating the monitor item here!\r\n    // Generally it's better to avoid mutations,\r\n    // but it's good here for the sake of performance\r\n    // to avoid expensive index searches.\r\n    monitor.getItem().index = hoverIndex;\r\n  }\r\n};\r\nconst DragableBodyRow = DropTarget('row', rowTarget, (connect, monitor) => ({\r\n  connectDropTarget: connect.dropTarget(),\r\n  isOver: monitor.isOver()\r\n}))(\r\n  DragSource('row', rowSource, connect => ({\r\n    connectDragSource: connect.dragSource()\r\n  }))(BodyRow)\r\n);\r\nclass DragSortingTable extends React.Component {\r\n  state = {\r\n    data: [],\r\n    columns: [\r\n      {\r\n        title: '序号',\r\n        dataIndex: 'sort'\r\n      },\r\n      {\r\n        title: '内容',\r\n        dataIndex: 'content',\r\n        render: (text, record) => (\r\n          <div>\r\n            {record.type === 1 && <span>{text}</span>}\r\n            {record.type === 2 && <PreviewImg src={text} alt={'img'} />}\r\n            {record.type === 3 && (\r\n              <video src={text} controls style={{ width: '100px' }}></video>\r\n            )}\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        title: '操作',\r\n        dataIndex: 'play',\r\n        render: (text, record) => (\r\n          <Popconfirm\r\n            title=\"你确定删除吗？\"\r\n            icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n            okText=\"确认\"\r\n            cancelText=\"取消\"\r\n            onConfirm={() => this.DeleteSingle(record)}\r\n          >\r\n            <a href=\"javacript:void(0);\">删除</a>\r\n          </Popconfirm>\r\n        )\r\n      }\r\n    ]\r\n  };\r\n  componentWillReceiveProps(nextProps, preState) {\r\n    this.setState({\r\n      data: nextProps.data\r\n    });\r\n  }\r\n  components = {\r\n    body: {\r\n      row: DragableBodyRow\r\n    }\r\n  };\r\n  DeleteSingle = record => {\r\n    this.setState(\r\n      {\r\n        data: this.state.data.filter(item => {\r\n          return item !== record;\r\n        })\r\n      },\r\n      () => {\r\n        this.props.onChange(this.state.data);\r\n        this.setState({\r\n          data: this.state.data.map((item, index) => {\r\n            return {\r\n              ...item,\r\n              sort: index + 1\r\n            };\r\n          })\r\n        });\r\n      }\r\n    );\r\n  };\r\n  moveRow = (dragIndex, hoverIndex) => {\r\n    const dragRow = this.state.data[dragIndex];\r\n    this.setState(\r\n      update(this.state, {\r\n        data: {\r\n          $splice: [\r\n            [dragIndex, 1],\r\n            [hoverIndex, 0, dragRow]\r\n          ]\r\n        }\r\n      }),\r\n      () => {\r\n        this.setState({\r\n          data: this.state.data.map((item, index) => {\r\n            return {\r\n              ...item,\r\n              sort: index + 1\r\n            };\r\n          })\r\n        });\r\n      }\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <DndProvider backend={HTML5Backend}>\r\n        <Table\r\n          columns={this.state.columns}\r\n          dataSource={this.state.data}\r\n          rowKey={'key' || 'sort'}\r\n          components={this.components}\r\n          pagination={false}\r\n          onRow={(record, index) => ({\r\n            index,\r\n            moveRow: this.moveRow\r\n          })}\r\n        />\r\n      </DndProvider>\r\n    );\r\n  }\r\n}\r\nexport default DragSortingTable;\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree,\r\n  Table,\r\n  Popconfirm,\r\n  Radio,\r\n  Badge,\r\n  Calendar,\r\n  Drawer,\r\n  List,\r\n  Avatar\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport urlMaps from '../../common/urlMaps';\r\nimport { DndProvider, DragSource, DropTarget } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport update from 'immutability-helper';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport NewBraft from '../../components/BraftEditor';\r\nimport store from '../../models/index';\r\nimport BraftEditor, { EditorState } from 'braft-editor';\r\nimport PreviewImg from '../../components/PreviewImg';\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css';\r\nimport '../../components/BraftEditor/index.less';\r\nimport OssUpload from '../../components/Upload';\r\nimport Picture from '../../components/Picture';\r\nimport DragSortingTable from '../../components/DragSorting';\r\nimport { StandardTableColumnProps } from '../Table';\r\nimport Relation from '../../components/Relation';\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\nconst Option = Select.Option;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst { Dragger } = Upload;\r\ninterface CityStrCreateCityStrategyProps {\r\n  form: FormComponentProps['form'];\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n  fileData: any[];\r\n  everyDay: any[];\r\n  ButtonInfo: any;\r\n  visible: boolean;\r\n  ButtonType: number;\r\n  buttonMaps: any;\r\n  DrawerInfo: any;\r\n  selectedRowKeys: any[];\r\n  selectedRows: any[];\r\n  inputValue: string;\r\n  selectInfo: any[];\r\n  columnsTop: StandardTableColumnProps[];\r\n  columnsPutIn: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  type: {\r\n    [index: string]: string;\r\n  };\r\n}\r\n@inject('resource', 'tag', 'strategy')\r\n@observer\r\nclass CreateCityStrategy extends Component<\r\nCityStrCreateCityStrategyProps,\r\nState\r\n> {\r\n  constructor(props: CityStrCreateCityStrategyProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      status: true,\r\n      ButtonType: 0,\r\n      visible: false,\r\n      fileData: [],\r\n      inputValue: '',\r\n      selectedRowKeys: [],\r\n      selectedRows: [],\r\n      selectInfo: [],\r\n      DrawerInfo: [],\r\n      type: {\r\n        2: '酒店',\r\n        3: '城市',\r\n        4: '景点',\r\n        5: '餐厅'\r\n      },\r\n      buttonMaps: {\r\n        0: '无',\r\n        1: '插入文字',\r\n        2: '插入图片',\r\n        3: '插入视频'\r\n      },\r\n      ButtonInfo: [\r\n        { type: 1, name: '插入文字' },\r\n        { type: 2, name: '插入图片' },\r\n        { type: 3, name: '插入视频' }\r\n      ],\r\n      everyDay: [],\r\n      columnsTop: [\r\n        {\r\n          title: '资源',\r\n          dataIndex: 'url',\r\n          render: (text: string, record: any) => (\r\n            <div>\r\n              {record.format === 1 && <PreviewImg alt=\"url\" src={text} />}\r\n              {record.format === 2 && (\r\n                <video style={{ width: 200 }} src={text} controls />\r\n              )}\r\n            </div>\r\n          )\r\n        },\r\n        {\r\n          title: '资源宽度',\r\n          dataIndex: 'wide'\r\n        },\r\n        {\r\n          title: '资源高度',\r\n          dataIndex: 'high'\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => {\r\n            return (\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm>\r\n            );\r\n          }\r\n        }\r\n      ],\r\n      columnsPutIn: [\r\n        {\r\n          title: '资源',\r\n          dataIndex: 'url',\r\n          render: (text: string, record: any) => (\r\n            <div>\r\n              {this.state.ButtonType === 2 && (\r\n                <PreviewImg alt=\"url\" src={text} />\r\n              )}\r\n              {this.state.ButtonType === 3 && (\r\n                <video style={{ width: 100 }} src={text} controls />\r\n              )}\r\n            </div>\r\n          )\r\n        },\r\n        {\r\n          title: '分类',\r\n          dataIndex: 'type',\r\n          render: (text: string, record: any) => (\r\n            <span>{this.state.type[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '城市',\r\n          dataIndex: 'city'\r\n        },\r\n        {\r\n          title: '景点/酒店/餐厅',\r\n          dataIndex: 'itemId'\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    store.global.getCityList({\r\n      data: {}\r\n    });\r\n    this.props.data &&\r\n      store.strategy.getCitySingle({\r\n        data: {\r\n          id: this.props.data.id\r\n        },\r\n        callback: res => {\r\n          console.log(\r\n            'TCL: CreateCityStrategy -> componentDidMount -> res',\r\n            res\r\n          );\r\n          if (res.code === 0) {\r\n            this.setState({\r\n              fileData: res.data.bmMaterialList,\r\n              DrawerInfo: res.data.strategyCityIntroduceList,\r\n              loading: false\r\n            });\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  ChangeList = (fileList: any) => {\r\n    debugger;\r\n    const dataArray = fileList.map((item: any) => item.response.data);\r\n    console.log('TCL: ChangeList -> dataArray', dataArray);\r\n    this.setState({\r\n      fileData: [\r\n        ...this.state.fileData,\r\n        ...dataArray.map((item: any, index: number) => {\r\n          return {\r\n            wide: +item.width,\r\n            high: +item.height,\r\n            url: item.filename,\r\n            format: 1,\r\n            limits: 1,\r\n            type: 1\r\n          };\r\n        })\r\n      ]\r\n    });\r\n  };\r\n  ChangeVideo = (fileList: any) => {\r\n    const dataArray = fileList.map((item: any) => item.response.data);\r\n    this.setState({\r\n      fileData: [\r\n        ...this.state.fileData,\r\n        ...dataArray.map((item: any, index: number) => {\r\n          return {\r\n            wide: +item.width,\r\n            high: +item.height,\r\n            url: item.filename,\r\n            format: 2,\r\n            limits: 1,\r\n            type: 1\r\n          };\r\n        })\r\n      ]\r\n    });\r\n  };\r\n  ChangePicture = (fileList: any) => {\r\n    console.log('TCL: ChangePicture -> fileList', fileList);\r\n    this.setState({\r\n      fileData: [\r\n        ...this.state.fileData,\r\n        ...fileList.map((item: any, index: number) => {\r\n          return {\r\n            format: 1,\r\n            limits: 2,\r\n            type: 1,\r\n            high: item.high,\r\n            wide: item.wide,\r\n            url: item.url\r\n          };\r\n        })\r\n      ]\r\n    });\r\n  };\r\n  DeleteSingle = (record: any) => {\r\n    this.setState({\r\n      fileData: this.state.fileData.filter(item => {\r\n        return item !== record;\r\n      })\r\n    });\r\n  };\r\n  showDrawer = (item: any) => {\r\n    if (item.type === 2) {\r\n      store.resource.getPicturePage({\r\n        data: {\r\n          city: this.props.form.getFieldValue('city'),\r\n          current: 1,\r\n          size: 10000\r\n        }\r\n      });\r\n    } else if (item.type === 3) {\r\n      store.resource.getVideoPage({\r\n        data: {\r\n          city: this.props.form.getFieldValue('city'),\r\n          current: 1,\r\n          size: 10000\r\n        }\r\n      });\r\n    }\r\n    this.setState({\r\n      visible: true,\r\n      ButtonType: item.type,\r\n      selectedRowKeys: [],\r\n      selectedRows: []\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  onSelectChange = (selectedRowKeys: any, selectedRows: any) => {\r\n    this.setState({\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    });\r\n  };\r\n  handleInput = (e: any) => {\r\n    this.setState({\r\n      inputValue: e.target.value\r\n    });\r\n  };\r\n  handleChange = () => {\r\n    this.state.ButtonType === 1 &&\r\n      this.setState(\r\n        {\r\n          DrawerInfo: [\r\n            ...this.state.DrawerInfo,\r\n            {\r\n              content: this.state.inputValue,\r\n              type: this.state.ButtonType,\r\n              itemId: ''\r\n            }\r\n          ],\r\n          visible: false\r\n        },\r\n        () => {\r\n          this.setState({\r\n            inputValue: '',\r\n            DrawerInfo: this.state.DrawerInfo.map(\r\n              (item: any, index: number) => {\r\n                return {\r\n                  ...item,\r\n                  sort: index + 1\r\n                };\r\n              }\r\n            )\r\n          });\r\n        }\r\n      );\r\n    this.state.ButtonType !== 1 &&\r\n      this.setState(\r\n        {\r\n          DrawerInfo: [\r\n            ...this.state.DrawerInfo,\r\n            ...this.state.selectedRows.map((item: any) => {\r\n              return {\r\n                type: this.state.ButtonType,\r\n                itemId: item.id,\r\n                content: item.url\r\n              };\r\n            })\r\n          ],\r\n          visible: false\r\n        },\r\n        () => {\r\n          this.setState({\r\n            DrawerInfo: this.state.DrawerInfo.map(\r\n              (item: any, index: number) => {\r\n                return {\r\n                  ...item,\r\n                  sort: index + 1\r\n                };\r\n              }\r\n            )\r\n          });\r\n        }\r\n      );\r\n  };\r\n  DeleteInfo = (value: any) => {\r\n    this.forceUpdate();\r\n    console.log('TCL: Relation -> DeleteInfo -> value', value);\r\n    this.setState(\r\n      {\r\n        selectInfo: this.props.form\r\n          .getFieldValue('bmTourProductDaysList')\r\n          .filter((item: any) => {\r\n            return item !== value;\r\n          })\r\n      },\r\n      () => {\r\n        this.props.form.setFieldsValue({\r\n          bmTourProductDaysList: this.state.selectInfo\r\n        });\r\n      }\r\n    );\r\n  };\r\n  handleChangeTable = (value: any) => {\r\n    this.setState({\r\n      DrawerInfo: value\r\n    });\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      console.log('TCL: CreateCityStrategy -> handleSubmit -> values', values);\r\n      if (!err) {\r\n        this.props.data\r\n          ? store.strategy.EditCityStraegy({\r\n            data: {\r\n              id: this.props.data.id,\r\n              ...values,\r\n              strategyCityIntroduceList: this.state.DrawerInfo,\r\n              bmMaterialList: this.state.fileData.slice(-9),\r\n              imgUrl: values.imgUrl[0].response.data.filename,\r\n              information: values.information.toHTML()\r\n            },\r\n            callback: res => {\r\n              if (res.code === 0) {\r\n                message.success('保存成功');\r\n                if (this.props.onClose) {\r\n                  this.props.onClose();\r\n                }\r\n              }\r\n            }\r\n          })\r\n          : store.strategy.AddCityStraegy({\r\n            data: {\r\n              ...values,\r\n              strategyCityIntroduceList: this.state.DrawerInfo,\r\n              bmMaterialList: this.state.fileData.slice(-9),\r\n              imgUrl: values.imgUrl[0].response.data.filename,\r\n              information: values.information.toHTML()\r\n            },\r\n            callback: res => {\r\n              if (res.code === 0) {\r\n                message.success('保存成功');\r\n                if (this.props.onClose) {\r\n                  this.props.onClose();\r\n                }\r\n              }\r\n            }\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const selectedRowKeys = this.state.selectedRowKeys;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    const isEdit = this.props.data !== undefined;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const singleInfo = store.strategy.citySingle;\r\n    let url = singleInfo.imgUrl;\r\n    const CityList = store.global.cityList;\r\n    const json_img = [\r\n      {\r\n        uid: 'rc-upload-1574925611551-2',\r\n        url: 'img/15749256138437071375449767021574925617190.jpg',\r\n        lastModified: 1574400765576,\r\n        lastModifiedDate: '2019-11-22T05:32:45.576Z',\r\n        name: 'b17123b76cb838e9cc2d291f5bf62ba8.jpg',\r\n        size: 1411649,\r\n        type: 'image/jpeg',\r\n        percent: 100,\r\n        originFileObj: {\r\n          uid: 'rc-upload-1574925611551-2',\r\n          url: 'img/15749256138437071375449767021574925617190.jpg'\r\n        },\r\n        status: 'done',\r\n        thumbUrl: '',\r\n        response: {\r\n          code: 0,\r\n          msg: null,\r\n          data: {\r\n            filename:\r\n              'http://miramartravel.oss-cn-shenzhen.aliyuncs.com/img/15749256138437071375449767021574925617190.jpg',\r\n            size: '1411649',\r\n            mimeType: 'image/jpeg',\r\n            width: '1920',\r\n            height: '1080'\r\n          }\r\n        },\r\n        xhr: {}\r\n      }\r\n    ];\r\n    json_img.map((item: any, index: number) => {\r\n      if (url) {\r\n        console.log('TCL: CreateCityStrategy -> render -> url', url);\r\n        item.uid = '16549861321684';\r\n        item.url = url;\r\n        console.log(\r\n          'TCL: CreateVideo -> render ->  url.split',\r\n          url.split('com/')[1]\r\n        );\r\n        item.type = 'img/' + url.split('com/')[1].split('.')[1];\r\n        item.originFileObj.uid = '16549861321684';\r\n        item.originFileObj.url = url;\r\n        item.response.data.filename = url;\r\n        item.response.data.mimeType =\r\n          'img/' + url.split('com/')[1].split('.')[1];\r\n      }\r\n    });\r\n    const imgInfo = store.resource.picturePage;\r\n    const videoInfo = store.resource.videoPage;\r\n    const hasSelected = this.state.selectedRowKeys.length > 0;\r\n    console.log('this.state.=?', this.state.fileData);\r\n    return (\r\n      <Card\r\n        bordered={false}\r\n        title={isEdit ? '编辑城市攻略' : '添加城市攻略'}\r\n        loading={this.props.data ? this.state.loading : false}\r\n        className=\"CreateMito\" \r\n      >\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"攻略名称\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('name', {\r\n                  initialValue: isEdit ? singleInfo.name : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '攻略名称'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input style={{ width: 200 }} placeholder=\"请输入攻略名称\" />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"城市\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('city', {\r\n                  initialValue: isEdit ? singleInfo.city : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '城市'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select style={{ width: 200 }} placeholder=\"请选择搜索城市\">\r\n                    {CityList.map((item: any, index: number) => (\r\n                      <Option key={item.id} value={item.id}>\r\n                        {item.name}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label={\r\n                  <span>\r\n                    上传封面&nbsp;\r\n                    <Tooltip title=\"只能上传一个封面！！！\">\r\n                      <Icon type=\"info-circle\" />\r\n                    </Tooltip>\r\n                  </span>\r\n                }\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('imgUrl', {\r\n                  initialValue: isEdit ? json_img : [],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '选择图片'\r\n                    }\r\n                  ]\r\n                })(<OssUpload type={'1'} isShowUploadList={true} />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label={\r\n                  <span>\r\n                    上传轮播&nbsp;\r\n                    <Tooltip title=\"轮播视频加图片不超过9个！！！\">\r\n                      <Icon type=\"info-circle\" />\r\n                    </Tooltip>\r\n                  </span>\r\n                }\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                <div\r\n                  style={{\r\n                    marginLeft: '20px',\r\n                    listStyle: 'none',\r\n                    float: 'left'\r\n                  }}\r\n                >\r\n                  <OssUpload\r\n                    onChange={this.ChangeList}\r\n                    type={'1'}\r\n                    isShowUploadList={false}\r\n                  />\r\n                </div>\r\n                {/* <div\r\n                  style={{\r\n                    marginLeft: '20px',\r\n                    listStyle: 'none',\r\n                    float: 'left'\r\n                  }}\r\n                >\r\n                  <OssUpload\r\n                    onChange={this.ChangeVideo}\r\n                    type={'2'}\r\n                    isShowUploadList={false}\r\n                    uploadNumber={1}\r\n                    disabled={this.state.fileData.find(item =>\r\n                      item.url.includes('video/admin')\r\n                    )}\r\n                  />\r\n                </div> */}\r\n                <div\r\n                  style={{\r\n                    marginLeft: '20px',\r\n                    listStyle: 'none',\r\n                    float: 'left'\r\n                  }}\r\n                >\r\n                  <Picture\r\n                    city={this.props.form.getFieldValue(\"city\")}\r\n                    onChange={this.ChangePicture}\r\n                    type={'1'}\r\n                  />\r\n                </div>\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"轮播图片\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                <Table\r\n                  columns={this.state.columnsTop}\r\n                  bordered={false}\r\n                  dataSource={this.state.fileData.slice(-9)}\r\n                  pagination={false}\r\n                />\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem {...formItemLayout} label=\"便捷信息\">\r\n                {getFieldDecorator('information', {\r\n                  initialValue: isEdit\r\n                    ? BraftEditor.createEditorState(singleInfo.information)\r\n                    : BraftEditor.createEditorState(null),\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '请输入便捷信息'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <BraftEditor\r\n                    className=\"my-editor\"\r\n                    style={{ width: '750px' }}\r\n                    excludeControls={[\r\n                      'link',\r\n                      'code',\r\n                      'media',\r\n                      'clear',\r\n                      'blockquote'\r\n                    ]}\r\n                    placeholder=\"请输入正文内容\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem {...formItemLayout} label=\"城市介绍\">\r\n                {this.state.ButtonInfo.map((item: any) => (\r\n                  <Button\r\n                    key={item.type}\r\n                    style={{ marginRight: 10 }}\r\n                    onClick={() => this.showDrawer(item)}\r\n                  >\r\n                    {item.name}\r\n                  </Button>\r\n                ))}\r\n                <Drawer\r\n                  title={this.state.buttonMaps[this.state.ButtonType]}\r\n                  placement=\"right\"\r\n                  closable={false}\r\n                  onClose={this.onClose}\r\n                  visible={this.state.visible}\r\n                  width={700}\r\n                >\r\n                  {this.state.ButtonType !== 1 && (\r\n                    <div>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        onClick={this.handleChange}\r\n                        disabled={!hasSelected}\r\n                      >\r\n                        {this.state.buttonMaps[this.state.ButtonType]}\r\n                      </Button>\r\n                      <Table\r\n                        columns={this.state.columnsPutIn}\r\n                        rowKey={'id' || 'key'}\r\n                        dataSource={\r\n                          this.state.ButtonType === 2\r\n                            ? imgInfo.records\r\n                            : this.state.ButtonType === 3\r\n                              ? videoInfo.records\r\n                              : []\r\n                        }\r\n                        pagination={false}\r\n                        rowSelection={rowSelection}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {this.state.ButtonType === 1 && (\r\n                    <Row\r\n                      gutter={{ md: 8, lg: 24, xl: 48 }}\r\n                      style={{ marginTop: '20px' }}\r\n                    >\r\n                      <Col xl={24} md={24} sm={24}>\r\n                        <FormItem\r\n                          label=\"文字\"\r\n                          {...formItemLayout}\r\n                          className=\"form-inline-item\"\r\n                        >\r\n                          <TextArea\r\n                            placeholder=\"文字\"\r\n                            value={this.state.inputValue}\r\n                            onChange={this.handleInput}\r\n                            autoSize={{ minRows: 5 }}\r\n                          />\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col\r\n                        xl={24}\r\n                        md={24}\r\n                        sm={24}\r\n                        style={{ marginLeft: 170, marginTop: 50 }}\r\n                      >\r\n                        <Button type=\"primary\" onClick={this.handleChange}>\r\n                          {this.state.buttonMaps[this.state.ButtonType]}\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  )}\r\n                </Drawer>\r\n                <DragSortingTable\r\n                  onChange={this.handleChangeTable}\r\n                  data={this.state.DrawerInfo}\r\n                />\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label={\r\n                  <span>\r\n                    关联旅游产品&nbsp;\r\n                    <Tooltip title=\"仅可关联一个旅游产品\">\r\n                      <Icon type=\"question-circle-o\" />\r\n                    </Tooltip>\r\n                  </span>\r\n                }\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('bmTourProductDaysList', {\r\n                  initialValue: isEdit ? singleInfo.bmTourProductDaysList : [],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '关联旅游产品'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Relation\r\n                    type={1}\r\n                  // onChange={this.ChangeSelect}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label={`已选中旅游产品`}\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                <List\r\n                  itemLayout=\"horizontal\"\r\n                  dataSource={this.props.form.getFieldValue(\r\n                    'bmTourProductDaysList'\r\n                  )}\r\n                  renderItem={(item: any) => (\r\n                    <List.Item\r\n                      actions={[\r\n                        <a\r\n                          key=\"list-loadmore-edit\"\r\n                          onClick={() => this.DeleteInfo(item)}\r\n                        >\r\n                          删除\r\n                        </a>\r\n                      ]}\r\n                    >\r\n                      <List.Item.Meta\r\n                        avatar={<Avatar src={item.coverUrl} />}\r\n                        title={<span>{item.title}</span>}\r\n                        description={\r\n                          <div>\r\n                            <span>{item.count}人出游</span>{' '}\r\n                            <span style={{ color: '#d00' }}>\r\n                              ￥{item.price}起\r\n                            </span>\r\n                          </div>\r\n                        }\r\n                      />\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={12} md={24} sm={24} offset={6}>\r\n              <div className=\"submitButtons\">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  确定\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create<CityStrCreateCityStrategyProps>()(\r\n  CreateCityStrategy\r\n);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport store from '../../models/index';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Comment from '../../models/Comment';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface CommentProps {\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface CommentState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  pagination: TableListPagination;\r\n  commentMaps: any;\r\n  itemTypeMaps: any;\r\n}\r\n@inject('comment')\r\n@observer\r\nclass CommentPage extends React.Component<CommentProps, CommentState> {\r\n  constructor(props: CommentProps) {\r\n    super(props);\r\n    this.state = {\r\n      itemTypeMaps: {\r\n        1: \"城市攻略\",\r\n        3: \"景点介绍\",\r\n        4: \"旅游产品\",\r\n        5: \"游记\",\r\n      },\r\n      commentMaps: {\r\n        0: '正常',\r\n        1: '待审核',\r\n        2: '审核失败',\r\n        3: '审核通过'\r\n      },\r\n      loading: true,\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '评论内容',\r\n          dataIndex: 'content'\r\n        },\r\n        {\r\n          title: '发表用户',\r\n          dataIndex: 'nickName'\r\n        },\r\n        {\r\n          title: '评论模块',\r\n          dataIndex: 'itemType',\r\n          render: (text: number) => <span>{this.state.itemTypeMaps[text]}</span>\r\n        },\r\n        {\r\n          title: '被评论标题',\r\n          dataIndex: 'itemTitle'\r\n        },\r\n        // {\r\n        //   title: '状态',\r\n        //   dataIndex: 'state',\r\n        //   render: (text: number, record: any) => (\r\n        //     <span>{this.state.commentMaps[text]}</span>\r\n        //   )\r\n        // },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {/* <Popconfirm\r\n                title=\"你确定启用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">启用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定停用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">停用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" /> */}\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm>\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getCommentPage();\r\n    store.global.getCityList({\r\n      data: {}\r\n    });\r\n  }\r\n  getCommentPage = (params: any = {}) => {\r\n    let payload = {\r\n      ...params,\r\n      itemId: this.props.data.id,\r\n      itemType: 1\r\n    };\r\n    store.comment.getCommentPage({\r\n      data: {\r\n        ...payload\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        }\r\n      }\r\n    });\r\n    // this.props.form.validateFields((err, values) => {\r\n    //   if (!err) {\r\n    //     let payload = {\r\n    //       ...values,\r\n    //     };\r\n    //     if (!params.current) {\r\n    //       params.current = 1;\r\n    //     }\r\n    //     if (params.current === 1) {\r\n    //       params.ts = new Date().valueOf();\r\n    //     }\r\n    //     // else {\r\n    //     //   params.ts = this.props.message.messagePage.ts;\r\n    //     // }\r\n    //     if (!params.page_size) {\r\n    //      params.size = 20;\r\n    //     }\r\n    //     if (payload.timeRange) {\r\n    //       if (payload.timeRange.length !== 0) {\r\n    //         payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n    //         payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n    //       } else {\r\n    //         payload.start_at = 0;\r\n    //         payload.end_at = 0;\r\n    //       }\r\n    //     }\r\n    //     payload = {\r\n    //       ...payload,\r\n    //       ...params,\r\n    //     };\r\n    //     this.props.comment.getCommentPage({\r\n    //       data: {\r\n    //         ...payload,\r\n    //       },\r\n\r\n    //       callback: res => {\r\n    //         if (res.code === 0) {\r\n    //           this.setState({\r\n    //             loading: false\r\n    //           })\r\n    //         }\r\n    //       },\r\n    //     });\r\n    //   } else {\r\n    //     console.log('getCommentPage error');\r\n    //   }\r\n    // });\r\n  };\r\n  DeleteSingle = (record: { id: string }) => {\r\n    store.comment.DeleteComment({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getCommentPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  EnableShutdown = (record: object) => {\r\n    // this.props.mito.DeleteMito({\r\n    //   data: {\r\n    //     id:  record.id\r\n    //     )\r\n    //   },\r\n    //   callback: (res) => {\r\n    //     if (res.code === 200) {\r\n    //       message.success(res.msg || \"操作成功\")\r\n    //       this.getMitoList();\r\n    //     } else {\r\n    //       message.error(res.msg || \"操作失败\")\r\n    //     }\r\n    //   }\r\n    // })\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getCommentPage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  render() {\r\n    const info = store.comment.commentPage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    return (\r\n      <Card title=\"评论管理\" bordered={false} loading={this.state.loading}>\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default CommentPage;\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Strategy from '../../models/Strategy';\r\nimport Global from '../../models/Global';\r\nimport Products from './Products';\r\nimport CreateCityStrategy from './CreateCityStrategy';\r\nimport CommentPage from './Comment';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface CityStrategyProps {\r\n  form: FormComponentProps['form'];\r\n  strategy: Strategy;\r\n  global: Global;\r\n}\r\ninterface CityStrategyState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: any;\r\n  products: any;\r\n  showProducts: boolean;\r\n  pagination: TableListPagination;\r\n  SeeItinerary: boolean;\r\n  searchData: any;\r\n  baseType: any;\r\n  recommendMaps: any;\r\n  statusMaps: any;\r\n  showComment: boolean;\r\n  comment: any;\r\n}\r\n@inject('strategy', 'global')\r\n@observer\r\nclass CityStrategyPage extends React.Component<\r\n  CityStrategyProps,\r\n  CityStrategyState\r\n> {\r\n  constructor(props: CityStrategyProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      visible: false,\r\n      showProducts: false,\r\n      showComment: false,\r\n      baseType: {\r\n        '1': '国内游',\r\n        '2': '港澳游',\r\n        '3': '境外游'\r\n      },\r\n      statusMaps: {\r\n        1: '上架',\r\n        2: '下架'\r\n      },\r\n      recommendMaps: {\r\n        0: '不推荐',\r\n        1: '推荐'\r\n      },\r\n      currItem: {},\r\n      products: {},\r\n      comment: {},\r\n      SeeItinerary: false,\r\n      searchData: {},\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '攻略名称',\r\n          dataIndex: 'name'\r\n        },\r\n        {\r\n          title: '城市',\r\n          dataIndex: 'city'\r\n        },\r\n        {\r\n          title: '关联旅游产品',\r\n          dataIndex: 'copywriting',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {record.bmTourProductDaysList.length + '个'}\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreateProducts(record)}\r\n              >\r\n                查看\r\n              </a>\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: '用户评论',\r\n          dataIndex: 'composeCount',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {text + '条'}\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreateComment(record)}\r\n              >\r\n                查看\r\n              </a>\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: '热门推荐',\r\n          dataIndex: 'recommend',\r\n          render: (text: number, record: any) => (\r\n            <span>{this.state.recommendMaps[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '状态',\r\n          dataIndex: 'state',\r\n          render: (text: string, record: any) => (\r\n            <span>{this.state.statusMaps[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreateCityStrategy(record)}\r\n              >\r\n                编辑\r\n              </a>\r\n              <Divider type=\"vertical\" />\r\n              {/* <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" /> */}\r\n              <Popconfirm\r\n                title={`设置为热门推荐？`}\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() =>\r\n                  this.SetRecommend(record, record.recommend === 0 ? 1 : 0)\r\n                }\r\n              >\r\n                <a href=\"javacript:void(0);\">\r\n                  {record.recommend === 0 ? '设为推荐' : '取消推荐'}\r\n                </a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title={`设置上/下架？`}\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.isUp(record, record.state === 2 ? 1 : 2)}\r\n              >\r\n                <a href=\"javacript:void(0);\">\r\n                  {record.state === 2 ? '上架' : '下架'}\r\n                </a>\r\n              </Popconfirm>\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCityStrategyPage();\r\n    this.props.global.getCityList({\r\n      data: {}\r\n    });\r\n  }\r\n  getCityStrategyPage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        // if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.strategy.getCityStrategyPage({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getCityStrategyPage error');\r\n      }\r\n    });\r\n  };\r\n  SetRecommend = (record: any, state: number) => {\r\n    this.props.strategy.SetRecommend({\r\n      data: {\r\n        id: record.id,\r\n        recommend: state\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getCityStrategyPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  isUp = (record: any, state: number) => {\r\n    this.props.strategy.SetCityState({\r\n      data: {\r\n        id: record.id,\r\n        state: state\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getCityStrategyPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getCityStrategyPage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getCityStrategyPage(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  CreateCityStrategy = (item?: any) => {\r\n    this.isCreateCityStrategy(true);\r\n    this.setState({\r\n      currItem: item\r\n    });\r\n  };\r\n  isCreateCityStrategy = (bool: boolean) => {\r\n    this.setState({\r\n      visible: bool\r\n    });\r\n  };\r\n\r\n  CreateProducts = (item?: any) => {\r\n    this.isCreateProducts(true);\r\n    this.setState({\r\n      products: item\r\n    });\r\n  };\r\n  isCreateProducts = (bool: boolean) => {\r\n    this.setState({\r\n      showProducts: bool\r\n    });\r\n  };\r\n  CreateComment = (item?: any) => {\r\n    this.isCreateComment(true);\r\n    this.setState({\r\n      comment: item\r\n    });\r\n  };\r\n  isCreateComment = (bool: boolean) => {\r\n    this.setState({\r\n      showComment: bool\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isCreateCityStrategy(false);\r\n    this.isCreateProducts(false);\r\n    this.isCreateComment(false);\r\n  };\r\n  render() {\r\n    const info = this.props.strategy.cityStraegyPage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    const CityList = this.props.global.cityList;\r\n    return (\r\n      <Card title=\"城市攻略\" bordered={false} loading={this.state.loading}>\r\n        {this.state.visible && (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width={1100}\r\n            onCancel={() => this.isCreateCityStrategy(false)}\r\n            footer={null}\r\n          >\r\n            <CreateCityStrategy\r\n              data={this.state.currItem}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getCityStrategyPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        {this.state.showProducts && (\r\n          <Modal\r\n            visible={this.state.showProducts}\r\n            width={1100}\r\n            onCancel={() => this.isCreateProducts(false)}\r\n            footer={null}\r\n          >\r\n            <Products\r\n              data={this.state.products}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getCityStrategyPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        {this.state.showComment && (\r\n          <Modal\r\n            visible={this.state.showComment}\r\n            width={1100}\r\n            onCancel={() => this.isCreateComment(false)}\r\n            footer={null}\r\n          >\r\n            <CommentPage\r\n              data={this.state.comment}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getCityStrategyPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row\r\n              gutter={{ md: 8, lg: 24, xl: 48 }}\r\n              style={{ marginTop: '20px' }}\r\n            >\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"城市\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('city')(\r\n                    <Select style={{ width: 200 }} placeholder=\"请选择状态\">\r\n                      {CityList.map((item: any, index: number) => (\r\n                        <Option key={item.id} value={item.id}>\r\n                          {item.name}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"搜索状态\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('state')(\r\n                    <Select style={{ width: 200 }} placeholder=\"请选择搜索状态\">\r\n                      <Option value={1}>上架</Option>\r\n                      <Option value={2}>下架</Option>\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col\r\n                xl={10}\r\n                md={24}\r\n                sm={24}\r\n                offset={2}\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <div className=\"submitButtons\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"listsearch\"\r\n                  >\r\n                    查询\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Col xl={12} md={24} sm={24} style={{ marginBottom: '10px' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"listsearch\"\r\n              onClick={() => {\r\n                this.CreateCityStrategy();\r\n              }}\r\n            >\r\n              添加城市攻略\r\n            </Button>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<CityStrategyProps>()(CityStrategyPage);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Answer from '../../models/Answer';\r\nimport store from '../../models/index';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface AnswerProps {\r\n  data: any;\r\n  onClose: any;\r\n}\r\ninterface AnswerState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  pagination: TableListPagination;\r\n  stateMaps: any;\r\n  shelfMaps: any;\r\n}\r\n@inject('answer')\r\n@observer\r\nclass UserAnswer extends React.Component<AnswerProps, AnswerState> {\r\n  constructor(props: AnswerProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      shelfMaps: {\r\n        1: '上架',\r\n        2: '下架'\r\n      },\r\n      stateMaps: {\r\n        1: '未审核',\r\n        2: '未通过',\r\n        3: '通过'\r\n      },\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '用户名称',\r\n          dataIndex: 'nickName'\r\n        },\r\n        {\r\n          title: '点评内容',\r\n          dataIndex: 'content'\r\n        },\r\n        {\r\n          title: '发布时间',\r\n          dataIndex: 'createTime'\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm>\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getUserAnswer();\r\n  }\r\n  getUserAnswer = (params: any = {}) => {\r\n    let payload = {\r\n      ...params,\r\n      parentId: this.props.data.id,\r\n\r\n      size: 1000,\r\n      current: 1\r\n    };\r\n    store.answer.getUserAnswer({\r\n      data: {\r\n        ...payload\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  DeleteSingle = (record: { id: string }) => {\r\n    store.answer.DeleteUserAnswer({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getUserAnswer();\r\n          this.props.onClose();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n          this.props.onClose();\r\n        }\r\n      }\r\n    });\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getUserAnswer({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  render() {\r\n    const info = store.answer.userAnswer;\r\n    return (\r\n      <Card title=\"用户回答\" bordered={false} loading={this.state.loading}>\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={false}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default UserAnswer;\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Answer from '../../models/Answer';\r\nimport UserAnswer from './UserAnswer';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface AnswerProps {\r\n  form: FormComponentProps['form'];\r\n  answer: Answer;\r\n}\r\ninterface AnswerState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  pagination: TableListPagination;\r\n  stateMaps: any;\r\n  shelfMaps: any;\r\n  dataShow: any;\r\n  isShow: boolean;\r\n}\r\n@inject('answer')\r\n@observer\r\nclass AnswerPage extends React.Component<AnswerProps, AnswerState> {\r\n  constructor(props: AnswerProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      dataShow: {},\r\n      isShow: false,\r\n      shelfMaps: {\r\n        1: '上架',\r\n        2: '下架'\r\n      },\r\n      stateMaps: {\r\n        1: '未审核',\r\n        2: '未通过',\r\n        3: '通过'\r\n      },\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '标题',\r\n          dataIndex: 'title'\r\n        },\r\n        {\r\n          title: '上传用户',\r\n          dataIndex: 'nickName'\r\n        },\r\n        {\r\n          title: '内容名称',\r\n          dataIndex: 'content'\r\n        },\r\n        {\r\n          title: '城市',\r\n          dataIndex: 'city'\r\n        },\r\n        {\r\n          title: '用户回答',\r\n          dataIndex: 'answersCount',\r\n          render: (text: number, record: any) => (\r\n            <span>\r\n              {text}条\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.ShowUserAnswer(record)}\r\n              >\r\n                查看\r\n              </a>\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: '审核状态',\r\n          dataIndex: 'state',\r\n          render: (text: number) => <span>{this.state.stateMaps[text]}</span>\r\n        },\r\n        {\r\n          title: '状态',\r\n          dataIndex: 'shelf',\r\n          render: (text: number) => <span>{this.state.shelfMaps[text]}</span>\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              <Popconfirm\r\n                title=\"你确定启用吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() =>\r\n                  this.EnableShutdown(record, record.shelf === 2 ? 1 : 2)\r\n                }\r\n              >\r\n                <a href=\"javacript:void(0);\">\r\n                  {record.shelf === 2 ? '上架' : '下架'}\r\n                </a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              {record.state !== 3 && (\r\n                <span>\r\n                  <Popconfirm\r\n                    title=\"你确定启用吗？\"\r\n                    icon={\r\n                      <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                    }\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                    onConfirm={() => this.AllowPass(record, 3)}\r\n                  >\r\n                    <a href=\"javacript:void(0);\">通过审核</a>\r\n                  </Popconfirm>\r\n                  <Divider type=\"vertical\" />\r\n                </span>\r\n              )}\r\n              {record.state === 1 && (\r\n                <span>\r\n                  <Popconfirm\r\n                    title=\"你确定启用吗？\"\r\n                    icon={\r\n                      <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                    }\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                    onConfirm={() => this.AllowPass(record, 2)}\r\n                  >\r\n                    <a href=\"javacript:void(0);\">拒绝通过</a>\r\n                  </Popconfirm>\r\n                  <Divider type=\"vertical\" />\r\n                </span>\r\n              )}\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  AllowPass = (record: any, state: number) => {\r\n    this.props.answer.EnableState({\r\n      data: {\r\n        id: record.id,\r\n        state: state\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success('操作成功');\r\n          this.getAnswerPage();\r\n        } else {\r\n          message.error('操作失败');\r\n          this.getAnswerPage();\r\n        }\r\n      }\r\n    });\r\n  };\r\n  EnableShutdown = (record: any, state: number) => {\r\n    this.props.answer.EnableShutDown({\r\n      data: {\r\n        id: record.id,\r\n        shelf: record.shelf === 1 ? 2 : 1\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success('操作成功');\r\n          this.getAnswerPage();\r\n        } else {\r\n          message.error('操作失败');\r\n          this.getAnswerPage();\r\n        }\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getAnswerPage();\r\n  }\r\n  getAnswerPage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        // if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.answer.getAnswerPage({\r\n          data: {\r\n            ...payload,\r\n            category: 1\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getAnswerPage error');\r\n      }\r\n    });\r\n  };\r\n\r\n  ShowUserAnswer = (item?: any) => {\r\n    this.isShowUserAnswer(true);\r\n    this.setState({\r\n      dataShow: item\r\n    });\r\n  };\r\n  isShowUserAnswer = (bool: boolean) => {\r\n    this.setState({\r\n      isShow: bool\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isShowUserAnswer(false);\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getAnswerPage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getAnswerPage(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = this.props.answer.answerPage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Card title=\"问答管理\" bordered={false} loading={this.state.loading}>\r\n        {this.state.isShow && (\r\n          <Modal\r\n            visible={this.state.isShow}\r\n            width={1300}\r\n            onCancel={() => this.isShowUserAnswer(false)}\r\n            footer={null}\r\n          >\r\n            <UserAnswer\r\n              data={this.state.dataShow}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getAnswerPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row\r\n              gutter={{ md: 8, lg: 24, xl: 48 }}\r\n              style={{ marginTop: '20px' }}\r\n            >\r\n              <Col xl={8} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"问答内容\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('content')(\r\n                    <Input placeholder=\"问答内容\" />\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col xl={8} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"审核状态\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('state')(\r\n                    <Select placeholder=\"请选择审核状态\">\r\n                      <Option value={1}>未审核</Option>\r\n                      <Option value={2}>未通过</Option>\r\n                      <Option value={3}>通过</Option>\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col xl={8} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"上下架状态\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('shelf')(\r\n                    <Select placeholder=\"请选择上下架状态\">\r\n                      <Option value={1}>上架</Option>\r\n                      <Option value={2}>下架</Option>\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col\r\n                xl={10}\r\n                md={24}\r\n                sm={24}\r\n                offset={2}\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <div className=\"submitButtons\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"listsearch\"\r\n                  >\r\n                    查询\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<AnswerProps>()(AnswerPage);\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport urlMaps from '../../common/urlMaps';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport NewBraft from '../../components/BraftEditor';\r\nimport { IndexOfHttp } from '../../utils/utils'\r\nimport store from '../../models/index';\r\nimport BraftEditor, { EditorState } from 'braft-editor';\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css';\r\nimport '../../components/BraftEditor/index.less';\r\nimport OssUpload from '../../components/Upload';\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\nconst Option = Select.Option;\r\nconst RadioButton = Radio.Button;\r\nconst { TextArea } = Input;\r\nconst RadioGroup = Radio.Group;\r\nconst { Dragger } = Upload;\r\ninterface BroadcastProps {\r\n  form: FormComponentProps['form'];\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  status: boolean;\r\n  loading: boolean;\r\n  jump: number;\r\n  cityId: string;\r\n}\r\n@inject('broadcast')\r\n@observer\r\nclass CreateBroadcast extends Component<BroadcastProps, State> {\r\n  constructor(props: BroadcastProps) {\r\n    super(props);\r\n    this.state = {\r\n      status: true,\r\n      loading: true,\r\n      jump: 0,\r\n      cityId: ''\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    await store.global.getCityList({\r\n      data: {\r\n        current: 1,\r\n        size: 10000\r\n      }\r\n    });\r\n    await store.tag.getTagPage({\r\n      data: {\r\n        current: 1,\r\n        size: 10000,\r\n        state: 1\r\n      }\r\n    });\r\n    await store.strategy.getCityStrategyPage({\r\n      data: {\r\n        current: 1,\r\n        size: 10000\r\n      }\r\n    });\r\n    await store.strategy.getPictureStrategyPage({\r\n      data: {\r\n        current: 1,\r\n        size: 10000,\r\n        state: 1\r\n      }\r\n    });\r\n    await store.strategy.getVideoStrategyPage({\r\n      data: {\r\n        current: 1,\r\n        size: 10000,\r\n        state: 1\r\n      }\r\n    });\r\n    await store.tourisms.getTourismPage({\r\n      data: {\r\n        current: 1,\r\n        size: 10000,\r\n        state: 1\r\n      }\r\n    });\r\n    (await this.props.data) &&\r\n      store.broadcast.getBroadcastSingle({\r\n        data: {\r\n          id: this.props.data.id\r\n        },\r\n        callback: res => {\r\n          if (res.code === 0) {\r\n            this.setState({\r\n              loading: false,\r\n              jump: res.data.jump,\r\n              cityId: res.data.cityId\r\n            });\r\n          }\r\n        }\r\n      });\r\n  }\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.props.data\r\n          ? store.broadcast.EditBroadcast({\r\n            data: {\r\n              id: this.props.data.id,\r\n              ...values,\r\n              startTime:\r\n                values.startTime !== ''\r\n                  ? moment(values.startTime.valueOf()).format(\r\n                    'YYYY-MM-DD HH:mm:ss'\r\n                  )\r\n                  : '',\r\n              endTime:\r\n                values.endTime !== ''\r\n                  ? moment(values.endTime.valueOf()).format(\r\n                    'YYYY-MM-DD HH:mm:ss'\r\n                  )\r\n                  : '',\r\n              url: values.url[0].response.data.filename,\r\n              jumpUrl: values.jumpUrl ? IndexOfHttp(values.jumpUrl) : \"\"\r\n            },\r\n            callback: res => {\r\n              if (res.code === 0) {\r\n                message.success('保存成功');\r\n                if (this.props.onClose) {\r\n                  this.props.onClose();\r\n                }\r\n              }\r\n            }\r\n          })\r\n          : store.broadcast.CreateBroadcast({\r\n            data: {\r\n              ...values,\r\n              startTime:\r\n                values.startTime !== ''\r\n                  ? moment(values.startTime.valueOf()).format(\r\n                    'YYYY-MM-DD HH:mm:ss'\r\n                  )\r\n                  : '',\r\n              endTime:\r\n                values.endTime !== ''\r\n                  ? moment(values.endTime.valueOf()).format(\r\n                    'YYYY-MM-DD HH:mm:ss'\r\n                  )\r\n                  : '',\r\n              url: values.url[0].response.data.filename,\r\n              jumpUrl: values.jumpUrl ? IndexOfHttp(values.jumpUrl) : \"\"\r\n            },\r\n            callback: res => {\r\n              if (res.code === 0) {\r\n                message.success('保存成功');\r\n                if (this.props.onClose) {\r\n                  this.props.onClose();\r\n                }\r\n              }\r\n            }\r\n          });\r\n      }\r\n    });\r\n  };\r\n  handleChangeCity = (value: any) => {\r\n    this.setState(\r\n      {\r\n        cityId: value\r\n      },\r\n      () => {\r\n        this.props.form.setFieldsValue({\r\n          itemId: undefined\r\n          // jumpUrl: \"\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n  handleChangeJump = (value: any) => {\r\n    this.setState(\r\n      {\r\n        jump: value,\r\n        cityId: ''\r\n      },\r\n      () => {\r\n        this.props.form.setFieldsValue({\r\n          cityId: undefined,\r\n          itemId: undefined\r\n          // jumpUrl: \"\"\r\n        });\r\n      }\r\n    );\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const CityList = store.global.cityList;\r\n    const tagList = store.tag.tagPage.records;\r\n    const isEdit = this.props.data !== undefined;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const singleInfo = store.broadcast.broadcastSingle;\r\n    const cityStraegyPage = store.strategy.cityStraegyPage.records.map(item => {\r\n      return { ...item, jumpType: 1 };\r\n    });\r\n    const pictureStraegyPage = store.strategy.pictureStraegyPage.records.map(\r\n      item => {\r\n        return { ...item, jumpType: 2 };\r\n      }\r\n    );\r\n    const videoStraegyPage = store.strategy.videoStraegyPage.records.map(\r\n      item => {\r\n        return { ...item, jumpType: 3 };\r\n      }\r\n    );\r\n    const tourismPage = store.tourisms.tourismPage.records.map(item => {\r\n      return { ...item, jumpType: 4 };\r\n    });\r\n    const info = [\r\n      ...cityStraegyPage,\r\n      ...pictureStraegyPage,\r\n      ...videoStraegyPage,\r\n      ...tourismPage\r\n    ];\r\n\r\n    let url = singleInfo.url;\r\n    const json_img = [\r\n      {\r\n        uid: 'rc-upload-1574925611551-2',\r\n        url: 'img/15749256138437071375449767021574925617190.jpg',\r\n        lastModified: 1574400765576,\r\n        lastModifiedDate: '2019-11-22T05:32:45.576Z',\r\n        name: 'b17123b76cb838e9cc2d291f5bf62ba8.jpg',\r\n        size: 1411649,\r\n        type: 'image/jpeg',\r\n        percent: 100,\r\n        originFileObj: {\r\n          uid: 'rc-upload-1574925611551-2',\r\n          url: 'img/15749256138437071375449767021574925617190.jpg'\r\n        },\r\n        status: 'done',\r\n        thumbUrl: '',\r\n        response: {\r\n          code: 0,\r\n          msg: null,\r\n          data: {\r\n            filename:\r\n              'http://miramartravel.oss-cn-shenzhen.aliyuncs.com/img/15749256138437071375449767021574925617190.jpg',\r\n            size: '1411649',\r\n            mimeType: 'image/jpeg',\r\n            width: '1920',\r\n            height: '1080'\r\n          }\r\n        },\r\n        xhr: {}\r\n      }\r\n    ];\r\n    json_img.map((item: any, index: number) => {\r\n      if (url) {\r\n        item.uid = '16549861321684';\r\n        item.url = url;\r\n        item.type = 'img/' + url.split('com/')[1].split('.')[1];\r\n        item.originFileObj.uid = '16549861321684';\r\n        item.originFileObj.url = url;\r\n        item.response.data.filename = url;\r\n        item.response.data.mimeType =\r\n          'img/' + url.split('com/')[1].split('.')[1];\r\n      }\r\n    });\r\n\r\n    console.log(\r\n      'TCL: CreateBroadcast -> render -> this.state.jump ',\r\n      this.state.jump\r\n    );\r\n    return (\r\n      <Card\r\n        bordered={false}\r\n        loading={this.props.data ? this.state.loading : false}\r\n        title={isEdit ? '编辑首页轮播' : '添加首页轮播'}\r\n        className=\"CreateMito\"\r\n      >\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"标题\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('title', {\r\n                  initialValue: isEdit ? singleInfo.title : '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      whitespace: true,\r\n                      message: '标题'\r\n                    }\r\n                  ]\r\n                })(<Input placeholder=\"请输入标题\" />)}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"位置\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('position', {\r\n                  initialValue: isEdit ? singleInfo.position : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '位置'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select style={{ width: 200 }} placeholder=\"请选择位置\">\r\n                    <Option value={1}>1</Option>\r\n                    <Option value={2}>2</Option>\r\n                    <Option value={3}>3</Option>\r\n                    {/* <Option value={4}>4</Option>\r\n                    <Option value={5}>5</Option>\r\n                    <Option value={6}>6</Option>\r\n                    <Option value={7}>7</Option>\r\n                    <Option value={8}>8</Option>\r\n                    <Option value={9}>9</Option>\r\n                    <Option value={10}>10</Option> */}\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"上架时间\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('startTime', {\r\n                  initialValue: isEdit\r\n                    ? moment(Date.parse(singleInfo.startTime))\r\n                    : null,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '上架时间'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <DatePicker\r\n                    showTime\r\n                    format=\"YYYY-MM-DD HH:mm\"\r\n                    placeholder=\"上架时间\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"下架时间\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('endTime', {\r\n                  ...(isEdit && singleInfo.endTime\r\n                    ? { initialValue: moment(Date.parse(singleInfo.endTime)) }\r\n                    : {}),\r\n                  rules: [\r\n                    {\r\n                      required: false,\r\n                      message: '下架时间'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <DatePicker\r\n                    showTime\r\n                    format=\"YYYY-MM-DD HH:mm\"\r\n                    placeholder=\"下架时间\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label={\r\n                  <span>\r\n                    图片&nbsp;\r\n                    <Tooltip title=\"只能上传一个图片！！！\">\r\n                      <Icon type=\"info-circle\" />\r\n                    </Tooltip>\r\n                  </span>\r\n                }\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('url', {\r\n                  initialValue: isEdit ? json_img : [],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '选择图片'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <OssUpload\r\n                    type={'1'}\r\n                    isShowUploadList={true}\r\n                    uploadNumber={1}\r\n                  />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={24} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"跳转\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('jump', {\r\n                  initialValue: isEdit ? singleInfo.jump : undefined,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '跳转'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    style={{ width: 200 }}\r\n                    placeholder=\"请选择跳转\"\r\n                    onChange={this.handleChangeJump}\r\n                  >\r\n                    <Option value={1}>城市攻略</Option>\r\n                    <Option value={2}>图集攻略</Option>\r\n                    <Option value={3}>视频攻略</Option>\r\n                    <Option value={4}>旅游产品</Option>\r\n                    <Option value={5}>链接</Option>\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            {(this.state.jump === 1 ||\r\n              this.state.jump === 2 ||\r\n              this.state.jump === 3) && (\r\n                <Col xl={24} md={24} sm={24}>\r\n                  <FormItem\r\n                    label=\"跳转城市\"\r\n                    {...formItemLayout}\r\n                    className=\"form-inline-item\"\r\n                  >\r\n                    {getFieldDecorator('cityId', {\r\n                      initialValue: isEdit ? singleInfo.cityId : undefined,\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: '跳转城市'\r\n                        }\r\n                      ]\r\n                    })(\r\n                      <Select\r\n                        style={{ width: 200 }}\r\n                        placeholder=\"请选择跳转城市\"\r\n                        onChange={this.handleChangeCity}\r\n                      >\r\n                        {CityList.map((item: any) => (\r\n                          <Option key={item.id} value={item.id}>\r\n                            {item.name}\r\n                          </Option>\r\n                        ))}\r\n                      </Select>\r\n                    )}\r\n                  </FormItem>\r\n                </Col>\r\n              )}\r\n            {this.state.jump === 4 && (\r\n              <Col xl={24} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"跳转标签\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('cityId', {\r\n                    initialValue: isEdit ? singleInfo.cityId : undefined,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: '跳转标签'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      style={{ width: 200 }}\r\n                      placeholder=\"请选择跳转标签\"\r\n                      onChange={this.handleChangeCity}\r\n                    >\r\n                      {tagList.map((item: any) => (\r\n                        <Option key={item.id} value={item.id}>\r\n                          {item.title}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n            )}\r\n            {this.state.jump !== 5 && this.state.cityId && (\r\n              <Col xl={24} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"对应产品\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('itemId', {\r\n                    initialValue: isEdit ? singleInfo.itemId : undefined,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: '对应产品'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select style={{ width: 200 }} placeholder=\"请选择对应产品\">\r\n                      {info.map(\r\n                        (item: any) =>\r\n                          item.jumpType ===\r\n                          this.props.form.getFieldValue('jump') &&\r\n                          (this.props.form.getFieldValue('cityId') ===\r\n                            item.cityValue ||\r\n                            this.props.form.getFieldValue('cityId') ===\r\n                            item.tagValue) && (\r\n                            <Option key={item.id} value={item.id}>\r\n                              {' '}\r\n                              {item.title || item.name}\r\n                            </Option>\r\n                          )\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n            )}\r\n            {this.state.jump === 5 && (\r\n              <Col xl={24} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"跳转链接\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('jumpUrl', {\r\n                    initialValue: isEdit ? singleInfo.jumpUrl : undefined,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: '跳转'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      placeholder=\"请输入跳转链接\"\r\n                      style={{ width: '200px' }}\r\n                    />\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n            )}\r\n            <Col xl={12} md={24} sm={24} offset={6}>\r\n              <div className=\"submitButtons\">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  确定\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nForm;\r\n\r\nexport default Form.create<BroadcastProps>()(CreateBroadcast);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Broadcast from '../../models/Broadcast';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport CreateBroadcast from './CreateBroadcast';\r\nimport { inject, observer } from 'mobx-react';\r\nimport PreviewImg from '../../components/PreviewImg';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface BroadcastProps {\r\n  form: FormComponentProps['form'];\r\n  broadcast: Broadcast;\r\n}\r\ninterface BroadcastState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: any;\r\n  pagination: TableListPagination;\r\n  stateMaps: any;\r\n  positionMaps: any;\r\n}\r\n@inject('broadcast')\r\n@observer\r\nclass BroadcastPage extends React.Component<BroadcastProps, BroadcastState> {\r\n  constructor(props: BroadcastProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      positionMaps: {\r\n        1: '启动页',\r\n        2: '首页'\r\n      },\r\n      stateMaps: {\r\n        1: '待显示',\r\n        2: '显示',\r\n        3: '隐藏'\r\n      },\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '标题',\r\n          dataIndex: 'title'\r\n        },\r\n        {\r\n          title: '位置',\r\n          dataIndex: 'position',\r\n          // render: (text: string, record: any) => (\r\n          //   <span>{this.state.positionMaps[text]}</span>\r\n          // )\r\n        },\r\n        {\r\n          title: '图片',\r\n          dataIndex: 'url',\r\n          render: (text: string) => <PreviewImg alt={'img'} src={text} />\r\n        },\r\n        {\r\n          title: '跳转',\r\n          dataIndex: 'jumpUrl'\r\n        },\r\n        {\r\n          title: '开始时间',\r\n          dataIndex: 'startTime'\r\n        },\r\n        {\r\n          title: '结束时间',\r\n          dataIndex: 'endTime'\r\n        },\r\n        {\r\n          title: '状态',\r\n          dataIndex: 'state',\r\n          render: (text: number, record: any) => (\r\n            <span>{this.state.stateMaps[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreateBroadcast(record)}\r\n              >\r\n                编辑\r\n              </a>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              {/* {record.state === 2 &&\r\n                <span>\r\n                  <Popconfirm\r\n                    title=\"你确定上架吗？\"\r\n                    icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                    onConfirm={() => this.EnableShutdown(record)}\r\n                  >\r\n                    <a href=\"javacript:void(0);\">上架</a>\r\n                  </Popconfirm>\r\n                  <Divider type=\"vertical\" />\r\n                </span>\r\n              }\r\n              {record.state === 1 &&\r\n                <span>\r\n                  <Popconfirm\r\n                    title=\"你确定下架吗？\"\r\n                    icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                    okText=\"确认\" \r\n                    cancelText=\"取消\"\r\n                    onConfirm={() => this.EnableShutdown(record)}\r\n                  >\r\n                    <a href=\"javacript:void(0);\">下架</a>\r\n                  </Popconfirm>\r\n                  <Divider type=\"vertical\" />\r\n                </span>\r\n              } */}\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getBroadcastPage();\r\n  }\r\n  getBroadcastPage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        // if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.broadcast.getBroadcastPage({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getTagPage error');\r\n      }\r\n    });\r\n  };\r\n  DeleteSingle = (record: { id: string }) => {\r\n    this.props.broadcast.DeleteCast({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getBroadcastPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n          this.getBroadcastPage();\r\n        }\r\n      }\r\n    });\r\n  };\r\n  // EnableShutdown = (record: any) => {\r\n  //   this.props.tag.EditTag({\r\n  //     data: {\r\n  //       id: record.id,\r\n  //       state: record.state === 2 ? 1 : 2\r\n  //     },\r\n  //     callback: (res) => {\r\n  //       if (res.code === 0) {\r\n  //         message.success(res.msg || \"操作成功\")\r\n  //         this.getTagPage();\r\n  //       } else {\r\n  //         message.error(res.msg || \"操作失败\")\r\n  //       }\r\n  //     }\r\n  //   })\r\n  // }\r\n  isCreateBroadcast = (bool: boolean) => {\r\n    this.setState({\r\n      visible: bool\r\n    });\r\n  };\r\n  CreateBroadcast = (item?: any) => {\r\n    this.isCreateBroadcast(true);\r\n    this.setState({\r\n      currItem: item\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isCreateBroadcast(false);\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getBroadcastPage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getBroadcastPage(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = this.props.broadcast.broadcastPage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Card title=\"首页轮播管理\" bordered={false} loading={this.state.loading}>\r\n        {this.state.visible && (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width={1100}\r\n            onCancel={() => this.isCreateBroadcast(false)}\r\n            footer={null}\r\n          >\r\n            <CreateBroadcast\r\n              data={this.state.currItem}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getBroadcastPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row\r\n              gutter={{ md: 8, lg: 24, xl: 48 }}\r\n              style={{ marginTop: '20px' }}\r\n            >\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"标题\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('name')(<Input placeholder=\"标题\" />)}\r\n                </FormItem>\r\n              </Col>\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"状态\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('state')(\r\n                    <Select style={{ width: 200 }} placeholder=\"请选择状态\">\r\n                      <Option key={1} value={1}>\r\n                        待显示\r\n                      </Option>\r\n                      <Option key={2} value={2}>\r\n                        显示\r\n                      </Option>\r\n                      <Option key={3} value={3}>\r\n                        隐藏\r\n                      </Option>\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col\r\n                xl={10}\r\n                md={24}\r\n                sm={24}\r\n                offset={2}\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <div className=\"submitButtons\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"listsearch\"\r\n                  >\r\n                    查询\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Col xl={12} md={24} sm={24} style={{ marginBottom: '10px' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"listsearch\"\r\n              onClick={() => {\r\n                this.CreateBroadcast();\r\n              }}\r\n            >\r\n              添加首页轮播\r\n            </Button>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<BroadcastProps>()(BroadcastPage);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport store from '../../models/index';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport Comment from '../../models/Comment';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface CommentProps {\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface CommentState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  pagination: TableListPagination;\r\n  commentMaps: any;\r\n  itemTypeMaps: any;\r\n}\r\n@inject('comment')\r\n@observer\r\nclass CommentPage extends React.Component<CommentProps, CommentState> {\r\n  constructor(props: CommentProps) {\r\n    super(props);\r\n    this.state = {\r\n      itemTypeMaps: {\r\n        1: \"城市攻略\",\r\n        3: \"景点介绍\",\r\n        4: \"旅游产品\",\r\n        5: \"游记\",\r\n      },\r\n      commentMaps: {\r\n        0: '正常',\r\n        1: '待审核',\r\n        2: '审核失败',\r\n        3: '审核通过'\r\n      },\r\n      loading: true,\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '评论内容',\r\n          dataIndex: 'content'\r\n        },\r\n        {\r\n          title: '发表用户',\r\n          dataIndex: 'nickName'\r\n        },\r\n        {\r\n          title: '评论模块',\r\n          dataIndex: 'itemType',\r\n          render: (text: number) => <span>{this.state.itemTypeMaps[text]}</span>\r\n        },\r\n        {\r\n          title: '被评论标题',\r\n          dataIndex: 'itemTitle'\r\n        },\r\n        // {\r\n        //   title: '状态',\r\n        //   dataIndex: 'state',\r\n        //   render: (text: number, record: any) => (\r\n        //     <span>{this.state.commentMaps[text]}</span>\r\n        //   )\r\n        // },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {/* <Popconfirm\r\n                title=\"你确定启用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">启用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定停用吗？\"\r\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">停用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" /> */}\r\n              <Popconfirm\r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm>\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getCommentPage();\r\n    store.global.getCityList({\r\n      data: {}\r\n    });\r\n  }\r\n  getCommentPage = (params: any = {}) => {\r\n    let payload = {\r\n      ...params,\r\n      itemId: this.props.data.id,\r\n      itemType: 5\r\n    };\r\n    store.comment.getCommentPage({\r\n      data: {\r\n        ...payload\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  DeleteSingle = (record: { id: string }) => {\r\n    store.comment.DeleteComment({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getCommentPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  EnableShutdown = (record: object) => {\r\n    // this.props.mito.DeleteMito({\r\n    //   data: {\r\n    //     id:  record.id\r\n    //     )\r\n    //   },\r\n    //   callback: (res) => {\r\n    //     if (res.code === 200) {\r\n    //       message.success(res.msg || \"操作成功\")\r\n    //       this.getMitoList();\r\n    //     } else {\r\n    //       message.error(res.msg || \"操作失败\")\r\n    //     }\r\n    //   }\r\n    // })\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getCommentPage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  render() {\r\n    const info = store.comment.commentPage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    return (\r\n      <Card title=\"评论管理\" bordered={false} loading={this.state.loading}>\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default CommentPage;\r\n","import React from 'react';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree,\r\n  Table,\r\n  Drawer,\r\n  List,\r\n  Avatar,\r\n  Popconfirm\r\n} from 'antd';\r\nimport store from '../../models/index';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../../modules/Table';\r\nimport { isPlainObject } from 'mobx/lib/internal';\r\nimport { inject, observer } from 'mobx-react';\r\nimport PreviewImg from '../../components/PreviewImg';\r\nimport { SorterResult } from 'antd/es/table';\r\nconst Option = Select.Option;\r\nconst FormItem = Form.Item;\r\ninterface Props {\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  columns: StandardTableColumnProps[];\r\n  visible: boolean;\r\n  loading: boolean;\r\n  pagination: TableListPagination;\r\n}\r\n@inject('global')\r\n@observer\r\nclass Products extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      visible: false,\r\n      loading: true,\r\n      columns: [\r\n        {\r\n          title: '图片',\r\n          dataIndex: 'coverUrl',\r\n          render: (text: string, record: any) => (\r\n            <div>\r\n              {record.format === 1 && <PreviewImg alt=\"url\" src={text} />}\r\n              {record.format === 2 && (\r\n                <video\r\n                  style={{ height: '100px', width: '100px' }}\r\n                  src={text}\r\n                  controls\r\n                ></video>\r\n              )}\r\n            </div>\r\n          )\r\n        },\r\n        {\r\n          title: '标题',\r\n          dataIndex: 'title'\r\n        },\r\n        {\r\n          title: '出游人数',\r\n          dataIndex: 'count'\r\n        },\r\n        {\r\n          title: '价格',\r\n          dataIndex: 'price'\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <Popconfirm\r\n              title=\"你确定删除吗？\"\r\n              icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n              okText=\"确认\"\r\n              cancelText=\"取消\"\r\n              onConfirm={() => this.EditProducts(record, 2)}\r\n            >\r\n              <a href=\"javacript:void(0);\">删除</a>\r\n            </Popconfirm>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getProduct();\r\n  }\r\n  getProduct = (params: any = {}) => {\r\n    store.global.getRelationPage({\r\n      data: {\r\n        itemId: this.props.data.id,\r\n        isRelation: 1,\r\n        type: 5,\r\n        size: 1000,\r\n        current: 1\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getProduct({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  EditProducts = (record: any, state: number) => {\r\n    store.global.EditProducts({\r\n      data: {\r\n        tourProductId: record.tourProductId,\r\n        itemId: this.props.data.id,\r\n        isRelation: state,\r\n        type: 5\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getProduct();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = store.global.relationPage;\r\n    return (\r\n      <Card title=\"关联旅游产品\" bordered={false} loading={this.state.loading}>\r\n        <div>\r\n          <Table\r\n            rowKey={(record: any) => record.tourProductId}\r\n            columns={this.state.columns}\r\n            dataSource={info.records}\r\n            pagination={{\r\n              ...this.state.pagination,\r\n              total: info.total,\r\n              current: info.current,\r\n              pageSize: info.size,\r\n              showQuickJumper: true\r\n              // hideOnSinglePage: true\r\n            }}\r\n          />\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Products;\r\n","import React, { KeyboardEvent, ReactElement, Component } from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree,\r\n  Table,\r\n  Popconfirm,\r\n  Radio,\r\n  Badge,\r\n  Calendar,\r\n  Drawer\r\n} from 'antd';\r\nimport PreviewImg from '../../components/PreviewImg';\r\nimport store from '../../models/index';\r\nimport { getQueryString } from '../../utils/utils'\r\nimport { FormComponentProps } from 'antd/lib/form';\r\nimport { StandardTableColumnProps } from '../Table';\r\nimport { observer, inject } from 'mobx-react';\r\ninterface Props {\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  columns: StandardTableColumnProps[];\r\n  // dataChange: any\r\n  loading: boolean;\r\n}\r\n@inject('travels')\r\n@observer\r\nexport default class ShowPicture extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      columns: [\r\n        {\r\n          title: '资源',\r\n          dataIndex: 'url',\r\n          render: (text: string, record: any) =>\r\n            record.format === 1 ? (\r\n              <PreviewImg alt=\"url\" src={text} />\r\n            ) : (\r\n                <video style={{ width: 200 }} src={text} controls />\r\n              )\r\n        },\r\n        {\r\n          title: '资源宽度',\r\n          dataIndex: 'wide',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: '资源高度',\r\n          dataIndex: 'high',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {/* {getQueryString(\"height\", record.url)} */}\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {r\n    this.getPicturePage();\r\n  }\r\n  getPicturePage = () => {\r\n    store.travels.getTravelsSingle({\r\n      data: {\r\n        id: this.props.data.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = store.travels.travelsSingle;\r\n    return (\r\n      <Card title=\"资源\" bordered={false} loading={this.state.loading}>\r\n        <Table\r\n          columns={this.state.columns}\r\n          bordered={false}\r\n          dataSource={info.userMaterialList}\r\n          pagination={false}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree,\r\n  Table,\r\n  Drawer,\r\n  List,\r\n  Avatar,\r\n  Carousel,\r\n  Typography\r\n} from 'antd';\r\nimport store from '../../models/index';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../../modules/Table';\r\nimport { isPlainObject } from 'mobx/lib/internal';\r\nimport { inject, observer } from 'mobx-react';\r\nimport PreviewImg from '../../components/PreviewImg';\r\nimport { previewImage } from 'antd/lib/upload/utils';\r\nconst Option = Select.Option;\r\nconst FormItem = Form.Item;\r\nconst { Title } = Typography;\r\nconst { Text } = Typography;\r\ninterface Props {\r\n  data: any;\r\n  onClose: any;\r\n}\r\ninterface State {\r\n  loading: boolean;\r\n}\r\n@inject('global')\r\n@observer\r\nclass AllowPass extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getPicturePage();\r\n  }\r\n  getPicturePage = () => {\r\n    store.travels.getTravelsSingle({\r\n      data: {\r\n        id: this.props.data.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  ChangeAllow = (id: any, state: any) => {\r\n    store.travels.EditTravelsState({\r\n      data: {\r\n        id: id,\r\n        state: state\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success('操作成功!');\r\n          this.props.onClose();\r\n        } else {\r\n          message.error('操作失败!');\r\n          this.props.onClose();\r\n        }\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = store.travels.travelsSingle;\r\n    return (\r\n      <Card title={'审核内容'} bordered={false}>\r\n        <Row gutter={16}>\r\n          {info.userMaterialList.map((item: any) => (\r\n            <Col className=\"gutter-row\" span={6}>\r\n              {item.format === 1 && (\r\n                <PreviewImg\r\n                  src={item.url}\r\n                  alt=\"img\"\r\n                  styleType={['200px', '200px']}\r\n                />\r\n              )}\r\n              {item.format === 2 && (\r\n                <video\r\n                  style={{ height: '200px', width: '200px' }}\r\n                  src={item.url}\r\n                  controls\r\n                ></video>\r\n              )}\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Title level={2}>游记内容</Title>\r\n        <div style={{ marginBottom: 40 }}>\r\n          <Text>{info.content}</Text>\r\n        </div>\r\n        {(info.state === 2 || info.state === 0) && (\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            style={{ marginRight: 850 }}\r\n            onClick={() => this.ChangeAllow(this.props.data.id, 1)}\r\n          >\r\n            通过\r\n          </Button>\r\n        )}\r\n        {info.state === 0 && (\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={() => this.ChangeAllow(this.props.data.id, 2)}\r\n          >\r\n            拒绝\r\n          </Button>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default AllowPass;\r\n","import React from 'react';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Card,\r\n  DatePicker,\r\n  message,\r\n  notification,\r\n  Tree,\r\n  Table,\r\n  Drawer,\r\n  List,\r\n  Avatar,\r\n  Popconfirm\r\n} from 'antd';\r\nimport store from '../../models/index';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../../modules/Table';\r\nimport { isPlainObject } from 'mobx/lib/internal';\r\nimport { inject, observer } from 'mobx-react';\r\nimport PreviewImg from '../../components/PreviewImg';\r\nimport { SorterResult } from 'antd/es/table';\r\nconst Option = Select.Option;\r\nconst FormItem = Form.Item;\r\ninterface Props {\r\n  onChange?(selectInfo: any): void;\r\n  value?: any;\r\n  count?: number;\r\n  data: any;\r\n  onClose: any;\r\n}\r\ninterface State {\r\n  columns: StandardTableColumnProps[];\r\n  selectedRow: any;\r\n  pagination: TableListPagination;\r\n  selectedRowKeys: any;\r\n  loading: boolean;\r\n}\r\n\r\n@inject('global')\r\n@observer\r\nclass RelationJourney extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      loading: true,\r\n      columns: [\r\n        {\r\n          title: '图片',\r\n          dataIndex: 'coverUrl',\r\n          render: (text: string, record: any) => (\r\n            <PreviewImg alt=\"url\" src={text} />\r\n          )\r\n        },\r\n        {\r\n          title: '标题',\r\n          dataIndex: 'title'\r\n        },\r\n        {\r\n          title: '出游人数',\r\n          dataIndex: 'count'\r\n        },\r\n        {\r\n          title: '价格',\r\n          dataIndex: 'price'\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <Popconfirm\r\n              title={\r\n                <div>\r\n                  <span>你确定</span>\r\n                  <span>{record.relation === 1 ? '取消' : '关联'}</span>\r\n                  <span>吗？</span>\r\n                </div>\r\n              }\r\n              icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n              okText=\"确认\"\r\n              cancelText=\"取消\"\r\n              onConfirm={() =>\r\n                this.EditProducts(record, record.relation === 1 ? 2 : 1)\r\n              }\r\n            >\r\n              <a href=\"javacript:void(0);\">\r\n                {record.relation === 1 ? '取消' : '关联'}\r\n              </a>\r\n            </Popconfirm>\r\n          )\r\n        }\r\n      ],\r\n      selectedRow: [],\r\n      selectedRowKeys: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log(\r\n      'TCL: RelationJourney -> componentDidMount ->  this.props.data',\r\n      this.props.data\r\n    );\r\n    this.getRelationJourney();\r\n  }\r\n  getRelationJourney = (params: any = {}) => {\r\n    store.global.getRelationPage({\r\n      data: {\r\n        isRelation: 2,\r\n        type: 5,\r\n        itemId: this.props.data.id,\r\n        ...params\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          const newSelect = res.data.records.filter((item: any) => {\r\n            if (item.isRelation === 1) {\r\n              return item.id;\r\n            }\r\n          });\r\n          this.setState({\r\n            selectedRowKeys: newSelect,\r\n            loading: false\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  onSelectChange = (selectedRowKeys: any, selectedRow: any) => {\r\n    this.setState({\r\n      selectedRow: selectedRow,\r\n      selectedRowKeys: selectedRowKeys\r\n    });\r\n  };\r\n  EditProducts = (record: any, state: number) => {\r\n    store.global.EditProducts({\r\n      data: {\r\n        tourProductId: record.tourProductId,\r\n        itemId: this.props.data.id,\r\n        isRelation: state,\r\n        type: 5\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getRelationJourney();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n          this.getRelationJourney();\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getRelationJourney({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  // CheckSelect = () => {\r\n  //   store.global.EditProducts({\r\n  //     data: {\r\n  //       tourProductId: this.props.data.tourProductId,\r\n  //       itemId: this.props.data.id,\r\n  //       isRelation: 1,\r\n  //       type: 5,\r\n  //     }, callback: (res) => {\r\n  //       if (res.code === 0) {\r\n  //         message.success(res.msg || \"操作成功\")\r\n\r\n  //       } else {\r\n  //         message.error(res.msg || \"操作失败\")\r\n  //       }\r\n  //     }\r\n  //   })\r\n  // }\r\n  render() {\r\n    const info = store.global.relationPage;\r\n    const { selectedRow, selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n      onChange: this.onSelectChange,\r\n      selectedRowKeys\r\n    };\r\n    const hasSelected = selectedRow.length > 0;\r\n    return (\r\n      <Card\r\n        title={'关联旅游产品'}\r\n        bordered={false}\r\n        loading={this.state.loading}\r\n      >\r\n        {/* <div style={{ marginBottom: 16 }}>\r\n          <Button\r\n            onClick={this.CheckSelect}\r\n            disabled={!hasSelected}\r\n          >\r\n            提交\r\n          </Button>\r\n          <span style={{ marginLeft: 8 }}>\r\n            {hasSelected ? `选择 ${selectedRow.length} 个` : ''}\r\n          </span>\r\n        </div> */}\r\n        <Table\r\n          rowKey={(record: any) => record.tourProductId}\r\n          // rowSelection={rowSelection}\r\n          columns={this.state.columns}\r\n          dataSource={info.records}\r\n          pagination={{\r\n            ...this.state.pagination,\r\n            total: info.total,\r\n            current: info.current,\r\n            pageSize: info.size,\r\n            showQuickJumper: true\r\n            // hideOnSinglePage: true\r\n          }}\r\n          onChange={this.handleTableChange}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default RelationJourney;\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport { inject, observer } from 'mobx-react';\r\nimport CommentPage from './Comment';\r\nimport PreviewImg from '../../components/PreviewImg';\r\nimport Travels from '../../models/Travels';\r\nimport Products from './Products';\r\nimport CreatePicture from './CreatePicture';\r\nimport AllowPass from './AllowPass';\r\nimport RelationJourney from './RelationJourney';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface Props {\r\n  form: FormComponentProps['form'];\r\n  travels: Travels;\r\n}\r\ninterface State {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  currItem: any;\r\n  pagination: TableListPagination;\r\n  products: any;\r\n  showProducts: boolean;\r\n  showComment: boolean;\r\n  comment: any;\r\n  stateMaps: any;\r\n  shelfMaps: any;\r\n  showPicture: boolean;\r\n  pictureData: any;\r\n  recommendMaps: any;\r\n  RelationData: any;\r\n  isRelation: boolean;\r\n  isAllowPass: boolean;\r\n  AllowData: any;\r\n}\r\n@inject('travels')\r\n@observer\r\nclass Journey extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      currItem: {},\r\n      RelationData: {},\r\n      isRelation: false,\r\n      isAllowPass: false,\r\n      AllowData: {},\r\n      showProducts: false,\r\n      showComment: false,\r\n      showPicture: false,\r\n      pictureData: {},\r\n      comment: {},\r\n      products: {},\r\n      stateMaps: {\r\n        0: '未审核',\r\n        1: '审核通过',\r\n        2: '审核未通过'\r\n      },\r\n      shelfMaps: {\r\n        1: '上架',\r\n        2: '下架'\r\n      },\r\n      recommendMaps: {\r\n        0: '不推荐',\r\n        1: '推荐'\r\n      },\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      loading: true,\r\n      columns: [\r\n        {\r\n          title: '标题',\r\n          dataIndex: 'title'\r\n        },\r\n        {\r\n          title: '上传用户',\r\n          dataIndex: 'nickName'\r\n        },\r\n        {\r\n          title: '资源',\r\n          dataIndex: 'materialCount',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {text + '个'}\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreatePicture(record)}\r\n              >\r\n                查看\r\n              </a>\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: '城市',\r\n          dataIndex: 'city'\r\n        },\r\n        {\r\n          title: '关联旅游产品',\r\n          dataIndex: 'productCount',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {text + '个'}\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreateProducts(record)}\r\n              >\r\n                查看\r\n              </a>\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: '用户评论',\r\n          dataIndex: 'composeCount',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {text + '条'}\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreateComment(record)}\r\n              >\r\n                查看\r\n              </a>\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: '推荐',\r\n          dataIndex: 'recommend',\r\n          render: (text: string, record: any) => (\r\n            <span>{this.state.recommendMaps[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '审核状态',\r\n          dataIndex: 'state',\r\n          render: (text: number, record: any) => (\r\n            <span>{this.state.stateMaps[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '状态',\r\n          dataIndex: 'shelf',\r\n          render: (text: string, record: any) => (\r\n            <span>{this.state.shelfMaps[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.Relation(record)}\r\n              >\r\n                关联旅游产品\r\n              </a>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title={`设置为热门推荐？`}\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() =>\r\n                  this.SetRecommend(record, record.recommend === 0 ? 1 : 0)\r\n                }\r\n              >\r\n                <a href=\"javacript:void(0);\">\r\n                  {record.recommend === 0 ? '设为推荐' : '取消推荐'}\r\n                </a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title={`设置上/下架？`}\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.isUp(record, record.shelf === 2 ? 1 : 2)}\r\n              >\r\n                <a href=\"javacript:void(0);\">\r\n                  {record.shelf === 2 ? '上架' : '下架'}\r\n                </a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.AllowPass(record)}\r\n              >\r\n                审核\r\n              </a>\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getJourneyPage();\r\n  }\r\n  getJourneyPage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        // if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.travels.getTravelsPage({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getHotelPage error');\r\n      }\r\n    });\r\n  };\r\n\r\n  SetRecommend = (record: any, state: number) => {\r\n    this.props.travels.EditTravelstravelsCommend({\r\n      data: {\r\n        id: record.id,\r\n        recommend: state\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getJourneyPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  isUp = (record: any, state: number) => {\r\n    this.props.travels.EditTravelsupOrDown({\r\n      data: {\r\n        id: record.id,\r\n        shelf: state\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getJourneyPage();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  Relation = (item?: any) => {\r\n    this.isRelation(true);\r\n    this.setState({\r\n      RelationData: item\r\n    });\r\n  };\r\n  isRelation = (bool: boolean) => {\r\n    this.setState({\r\n      isRelation: bool\r\n    });\r\n  };\r\n  AllowPass = (item?: any) => {\r\n    this.isAllowPass(true);\r\n    this.setState({\r\n      AllowData: item\r\n    });\r\n  };\r\n  isAllowPass = (bool: boolean) => {\r\n    this.setState({\r\n      isAllowPass: bool\r\n    });\r\n  };\r\n\r\n  CreateComment = (item?: any) => {\r\n    this.isCreateComment(true);\r\n    this.setState({\r\n      comment: item\r\n    });\r\n  };\r\n  isCreateComment = (bool: boolean) => {\r\n    this.setState({\r\n      showComment: bool\r\n    });\r\n  };\r\n  CreatePicture = (item?: any) => {\r\n    this.isCreatePicture(true);\r\n    this.setState({\r\n      pictureData: item\r\n    });\r\n  };\r\n  isCreatePicture = (bool: boolean) => {\r\n    this.setState({\r\n      showPicture: bool\r\n    });\r\n  };\r\n\r\n  CreateProducts = (item?: any) => {\r\n    this.isCreateProducts(true);\r\n    this.setState({\r\n      products: item\r\n    });\r\n  };\r\n  isCreateProducts = (bool: boolean) => {\r\n    this.setState({\r\n      showProducts: bool\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isCreateProducts(false);\r\n    this.isCreateComment(false);\r\n    this.isCreatePicture(false);\r\n    this.isRelation(false);\r\n    this.isAllowPass(false);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getJourneyPage(values);\r\n      }\r\n    });\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getJourneyPage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  render() {\r\n    const info = this.props.travels.travelsPage;\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    return (\r\n      <Card title=\"游记管理\" bordered={false} loading={this.state.loading}>\r\n        {this.state.isAllowPass && (\r\n          <Modal\r\n            visible={this.state.isAllowPass}\r\n            width={1100}\r\n            onCancel={() => this.isAllowPass(false)}\r\n            footer={null}\r\n          >\r\n            <AllowPass\r\n              data={this.state.AllowData}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getJourneyPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        {this.state.showComment && (\r\n          <Modal\r\n            visible={this.state.showComment}\r\n            width={1100}\r\n            onCancel={() => this.isCreateComment(false)}\r\n            footer={null}\r\n          >\r\n            <CommentPage\r\n              data={this.state.comment}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getJourneyPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n\r\n        {this.state.showProducts && (\r\n          <Modal\r\n            visible={this.state.showProducts}\r\n            width={1100}\r\n            onCancel={() => this.isCreateProducts(false)}\r\n            footer={null}\r\n          >\r\n            <Products\r\n              data={this.state.products}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getJourneyPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        {this.state.isRelation && (\r\n          <Modal\r\n            visible={this.state.isRelation}\r\n            width={1100}\r\n            onCancel={() => this.isRelation(false)}\r\n            footer={null}\r\n          >\r\n            <RelationJourney\r\n              data={this.state.RelationData}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getJourneyPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n\r\n        {this.state.showPicture && (\r\n          <Modal\r\n            visible={this.state.showPicture}\r\n            width={1100}\r\n            onCancel={() => this.isCreatePicture(false)}\r\n            footer={null}\r\n          >\r\n            <CreatePicture\r\n              data={this.state.pictureData}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getJourneyPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row\r\n              gutter={{ md: 8, lg: 24, xl: 48 }}\r\n              style={{ marginTop: '20px' }}\r\n            >\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"标题\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('title')(<Input placeholder=\"标题\" />)}\r\n                </FormItem>\r\n              </Col>\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"上下架状态\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('shelf')(\r\n                    <Select\r\n                      style={{ width: 200 }}\r\n                      placeholder=\"请选择上下架状态\"\r\n                    >\r\n                      <Option key={1} value={1}>\r\n                        上架\r\n                      </Option>\r\n                      <Option key={2} value={2}>\r\n                        下架\r\n                      </Option>\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col xl={10} md={24} sm={24}>\r\n                <FormItem\r\n                  label=\"审核状态\"\r\n                  {...formItemLayout}\r\n                  className=\"form-inline-item\"\r\n                >\r\n                  {getFieldDecorator('state')(\r\n                    <Select style={{ width: 200 }} placeholder=\"请选择审核状态\">\r\n                      <Option key={0} value={0}>\r\n                        未审核\r\n                      </Option>\r\n                      <Option key={1} value={1}>\r\n                        通过\r\n                      </Option>\r\n                      <Option key={2} value={2}>\r\n                        未通过\r\n                      </Option>\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col\r\n                xl={10}\r\n                md={24}\r\n                sm={24}\r\n                offset={2}\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <div className=\"submitButtons\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"listsearch\"\r\n                  >\r\n                    查询\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<Props>()(Journey);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop,\r\n  Descriptions\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport store from '../../models/index';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface Props {\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  pagination: TableListPagination;\r\n  commentMaps: any;\r\n  itemTypeMaps: any;\r\n  subClass: any;\r\n}\r\n@inject('orders')\r\n@observer\r\nclass SearchOrder extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      subClass: {\r\n        1: '成人',\r\n        2: '儿童',\r\n        3: '婴儿'\r\n      },\r\n      itemTypeMaps: {\r\n        1: \"城市攻略\",\r\n        3: \"景点介绍\",\r\n        4: \"旅游产品\",\r\n        5: \"游记\",\r\n      },\r\n      commentMaps: {\r\n        0: '正常',\r\n        1: '待审核',\r\n        2: '审核失败',\r\n        3: '审核通过'\r\n      },\r\n      loading: true,\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '评论内容',\r\n          dataIndex: 'content'\r\n        },\r\n        {\r\n          title: '发表用户',\r\n          dataIndex: 'nickName'\r\n        },\r\n        {\r\n          title: '评论模块',\r\n          dataIndex: 'itemType',\r\n          render: (text: number) => <span>{this.state.itemTypeMaps[text]}</span>\r\n        },\r\n        {\r\n          title: '被评论标题',\r\n          dataIndex: 'itemTitle'\r\n        },\r\n        {\r\n          title: '状态',\r\n          dataIndex: 'state',\r\n          render: (text: number, record: any) => (\r\n            <span>{this.state.commentMaps[text]}</span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    store.orders.getSearchOrder({\r\n      data: {\r\n        runningNumber: this.props.data.runningNumber\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const info = store.orders.searchOrder;\r\n    return (\r\n      <Card title=\"查看订单\" bordered={false} loading={this.state.loading}>\r\n        <Descriptions title=\"\">\r\n          <Descriptions.Item label=\"订单编号\" span={2}>\r\n            {info.runningNumber}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"旅游产品\" span={2}>\r\n            {info.name}\r\n          </Descriptions.Item>\r\n          {info.shoppingOrderDetails.map((item: any, index: number) => (\r\n            <Descriptions.Item label=\"金额\" key={item.id} span={3}>\r\n              <span style={{ width: '100px', display: 'inline-block' }}>\r\n                {item.nickName + '(' + this.state.subClass[item.subClass] + ')'}\r\n              </span>\r\n              <span style={{ marginLeft: '100px' }}>{'￥' + item.price}</span>\r\n            </Descriptions.Item>\r\n          ))}\r\n          {info.shoppingParticipants.map((item: any, index: number) => (\r\n            <Descriptions.Item key={item.id} label=\"出行人\" span={3}>\r\n              <span style={{ width: '100px', display: 'inline-block' }}>\r\n                {item.name}\r\n              </span>\r\n              <span style={{ marginLeft: '100px' }}>\r\n                {'电话:' + item.phone}\r\n              </span>\r\n            </Descriptions.Item>\r\n          ))}\r\n\r\n          <Descriptions.Item label=\"联系人\" span={3}>\r\n            <span style={{ width: '100px', display: 'inline-block' }}>\r\n              {info.userContacts.name}\r\n            </span>\r\n            <span style={{ marginLeft: '100px' }}>\r\n              {'电话:' + info.userContacts.phone}\r\n            </span>\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default SearchOrder;\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop,\r\n  Descriptions\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport store from '../../models/index';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface Props {\r\n  onClose: any;\r\n  data: any;\r\n}\r\ninterface State {\r\n  loading: boolean;\r\n  commentMaps: any;\r\n  itemTypeMaps: any;\r\n  subClass: any;\r\n}\r\n@inject('orders')\r\n@observer\r\nclass AfterSales extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      subClass: {\r\n        1: '成人',\r\n        2: '儿童',\r\n        3: '婴儿'\r\n      },\r\n      itemTypeMaps: {\r\n        1: \"城市攻略\",\r\n        3: \"景点介绍\",\r\n        4: \"旅游产品\",\r\n        5: \"游记\",\r\n      },\r\n      commentMaps: {\r\n        0: '正常',\r\n        1: '待审核',\r\n        2: '审核失败',\r\n        3: '审核通过'\r\n      },\r\n      loading: true\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    store.orders.getAfterSales({\r\n      data: {\r\n        runningNumber: this.props.data.runningNumber\r\n      },\r\n      callback: res => {\r\n        if (res.code === 0) {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const info = store.orders.afterSales;\r\n    return (\r\n      <Card title=\"查看申请\" bordered={false} loading={this.state.loading}>\r\n        <Descriptions title=\"\">\r\n          <Descriptions.Item label=\"订单编号\" span={3}>\r\n            {info.runningNumber}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"原因\" span={3}>\r\n            {info.reason}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"电话\" span={3}>\r\n            {info.phone}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"时间\" span={3}>\r\n            {info.createTime}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default AfterSales;\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport { inject, observer } from 'mobx-react';\r\nimport SearchOrder from './SearchOrder';\r\nimport AfterSales from './AfterSales';\r\nimport Orders from '../../models/Orders';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface Props {\r\n  form: FormComponentProps['form'];\r\n  orders: Orders;\r\n}\r\ninterface State {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  pagination: TableListPagination;\r\n  stateMaps: any;\r\n  visible: boolean;\r\n  currItem: any;\r\n  isAfter: boolean;\r\n  SalesData: any;\r\n}\r\n@inject('orders')\r\n@observer\r\nclass Order extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      isAfter: false,\r\n      SalesData: {},\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      stateMaps: {\r\n        1: '未付款',\r\n        2: '已付款',\r\n        3: '退款中',\r\n        4: '已退款'\r\n      },\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '订单编号',\r\n          dataIndex: 'runningNumber',\r\n          render: (text: string, record: any) => (\r\n            <span onClick={() => this.SearchOrder(record)}>\r\n              <a href=\"javacript:void(0);\">{text}</a>\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: '旅游产品',\r\n          dataIndex: 'name'\r\n        },\r\n        {\r\n          title: '金额',\r\n          dataIndex: 'price'\r\n        },\r\n        {\r\n          title: '下单用户',\r\n          dataIndex: 'nickName'\r\n        },\r\n        {\r\n          title: '订单状态',\r\n          dataIndex: 'state',\r\n          render: (text: number, record: any) => (\r\n            <span>{this.state.stateMaps[text]}</span>\r\n          )\r\n        },\r\n        {\r\n          title: '下单时间',\r\n          dataIndex: 'createTime'\r\n        },\r\n        {\r\n          title: '售后/退款',\r\n          dataIndex: 'return',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              {(record.state === 2 || record.state === 3) && (\r\n                <a\r\n                  href=\"javacript:void(0);\"\r\n                  onClick={() => this.AfterSales(record)}\r\n                >\r\n                  查看申请{' '}\r\n                </a>\r\n              )}\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, reocrd: any) => <span>暂无</span>\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  isAfterSales = (bool: boolean) => {\r\n    this.setState({\r\n      isAfter: bool\r\n    });\r\n  };\r\n  AfterSales = (item?: any) => {\r\n    this.isAfterSales(true);\r\n    this.setState({\r\n      SalesData: item\r\n    });\r\n  };\r\n  isSearchOrder = (bool: boolean) => {\r\n    this.setState({\r\n      visible: bool\r\n    });\r\n  };\r\n  SearchOrder = (item?: any) => {\r\n    this.isSearchOrder(true);\r\n    this.setState({\r\n      currItem: item\r\n    });\r\n  };\r\n  PropsInfo = (bool: boolean) => {\r\n    this.isSearchOrder(false);\r\n    this.isAfterSales(false);\r\n  };\r\n  componentDidMount() {\r\n    this.getOrderPage();\r\n  }\r\n  getOrderPage = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        if (params.current === 1) {\r\n          params.ts = new Date().valueOf();\r\n        }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.orders.getOrderPage({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getVideoPage error');\r\n      }\r\n    });\r\n  };\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getOrderPage({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getOrderPage(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = this.props.orders.orderPage;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Card title=\"订单管理\" bordered={false} loading={this.state.loading}>\r\n        {this.state.visible && (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width={700}\r\n            onCancel={() => this.isSearchOrder(false)}\r\n            footer={null}\r\n          >\r\n            <SearchOrder\r\n              data={this.state.currItem}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getOrderPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        {this.state.isAfter && (\r\n          <Modal\r\n            visible={this.state.isAfter}\r\n            width={700}\r\n            onCancel={() => this.isAfterSales(false)}\r\n            footer={null}\r\n          >\r\n            <AfterSales\r\n              data={this.state.SalesData}\r\n              onClose={() => {\r\n                this.PropsInfo(false);\r\n                this.getOrderPage({\r\n                  size: this.state.pagination.pageSize,\r\n                  current: this.state.pagination.current\r\n                });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row gutter={{ md: 8, lg: 24, xl: 48 }} style={{ marginTop: '20px' }}>\r\n            <Col xl={10} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"订单/用户\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('runningNumber')(\r\n                  <Input placeholder=\"订单/用户\" />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col xl={10} md={24} sm={24}>\r\n              <FormItem\r\n                label=\"订单状态\"\r\n                {...formItemLayout}\r\n                className=\"form-inline-item\"\r\n              >\r\n                {getFieldDecorator('state')(\r\n                  <Select style={{ width: 200 }} placeholder=\"订单状态\">\r\n                    <Option key={1} value={1}>\r\n                      未付款\r\n                    </Option>\r\n                    <Option key={2} value={2}>\r\n                      已付款\r\n                    </Option>\r\n                    <Option key={3} value={3}>\r\n                      退款中\r\n                    </Option>\r\n                    <Option key={4} value={4}>\r\n                      已退款\r\n                    </Option>\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col\r\n              xl={10}\r\n              md={24}\r\n              sm={24}\r\n              offset={2}\r\n              style={{ marginBottom: '10px' }}\r\n            >\r\n              <div className=\"submitButtons\">\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"listsearch\">\r\n                  查询\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Table\r\n                columns={this.state.columns}\r\n                rowKey={'id' || 'key'}\r\n                dataSource={info.records}\r\n                pagination={{\r\n                  ...this.state.pagination,\r\n                  total: info.total,\r\n                  current: info.current,\r\n                  pageSize: info.size,\r\n                  showQuickJumper: true\r\n                  // hideOnSinglePage: true\r\n                }}\r\n                onChange={this.handleTableChange}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<Props>()(Order);\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Rate,\r\n  Tooltip,\r\n  Input,\r\n  Table,\r\n  Card,\r\n  Divider,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Popconfirm,\r\n  Alert,\r\n  BackTop\r\n} from 'antd';\r\nimport { ColumnProps, TableRowSelection, TableProps } from 'antd/es/table';\r\nimport { SorterResult } from 'antd/es/table';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport PreviewImg from '../../components/PreviewImg';\r\nimport UserAdmin from '../../models/UserAdmin';\r\nimport Global from '../../models/Global';\r\nimport {\r\n  StandardTableColumnProps,\r\n  TableListParams,\r\n  TableListData,\r\n  TableListPagination,\r\n  TableListItem\r\n} from '../Table';\r\nimport { inject, observer } from 'mobx-react';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\ninterface HotelProps {\r\n  form: FormComponentProps['form'];\r\n  userAdmin: UserAdmin;\r\n  global: Global;\r\n}\r\ninterface HotelState {\r\n  columns: StandardTableColumnProps[];\r\n  loading: boolean;\r\n  visible: boolean;\r\n  currItem: any;\r\n  pagination: TableListPagination;\r\n}\r\n@inject('userAdmin', 'global')\r\n@observer\r\nclass UserList extends React.Component<HotelProps, HotelState> {\r\n  constructor(props: HotelProps) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      visible: false,\r\n      currItem: {},\r\n      pagination: {\r\n        total: 20,\r\n        pageSize: 20,\r\n        current: 1\r\n      },\r\n      columns: [\r\n        {\r\n          title: '用户名称',\r\n          dataIndex: 'name'\r\n        },\r\n        {\r\n          title: '头像',\r\n          dataIndex: 'city',\r\n          render: (text: string, record: any) => (\r\n            <PreviewImg src={text} alt=\"img\" />\r\n          )\r\n        },\r\n        {\r\n          title: '手机号',\r\n          dataIndex: 'phone'\r\n        },\r\n        {\r\n          title: '剩余积分',\r\n          dataIndex: 'star'\r\n        },\r\n        {\r\n          title: '出行次数',\r\n          dataIndex: 'num'\r\n        },\r\n        {\r\n          title: '发布游记',\r\n          dataIndex: 'tour'\r\n        },\r\n        {\r\n          title: '分享次数',\r\n          dataIndex: 'share'\r\n        },\r\n        {\r\n          title: '状态',\r\n          dataIndex: 'status'\r\n        },\r\n\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'play',\r\n          render: (text: string, record: any) => (\r\n            <span>\r\n              <Popconfirm\r\n                title=\"你确定启用吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">启用</a>\r\n              </Popconfirm>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"你确定停用吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.EnableShutdown(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">停用</a>\r\n              </Popconfirm>\r\n              {/* <Divider type=\"vertical\" /> */}\r\n              {/* <a\r\n                href=\"javacript:void(0);\"\r\n                onClick={() => this.CreateHotel(record)}\r\n              >\r\n                编辑\r\n              </a>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm                                                                                                                                                                                                                                                                                                                                                                                              \r\n                title=\"你确定删除吗？\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: 'red' }} />\r\n                }\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onConfirm={() => this.DeleteSingle(record)}\r\n              >\r\n                <a href=\"javacript:void(0);\">删除</a>\r\n              </Popconfirm> */}\r\n            </span>\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getUserList();\r\n    this.props.global.getCityList({\r\n      data: {}\r\n    });\r\n  }\r\n  getUserList = (params: any = {}) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let payload = {\r\n          ...values\r\n        };\r\n        if (!params.current) {\r\n          params.current = 1;\r\n        }\r\n        //  if (params.current === 1) {\r\n        //   params.ts = new Date().valueOf();\r\n        // }\r\n        // else {\r\n        //   params.ts = this.props.message.messagePage.ts;\r\n        // }\r\n        if (!params.size) {\r\n          params.size = 20;\r\n        }\r\n        if (payload.timeRange) {\r\n          if (payload.timeRange.length !== 0) {\r\n            payload.start_at = parseInt(payload.timeRange[0].valueOf());\r\n            payload.end_at = parseInt(payload.timeRange[1].valueOf());\r\n          } else {\r\n            payload.start_at = 0;\r\n            payload.end_at = 0;\r\n          }\r\n        }\r\n        payload = {\r\n          ...payload,\r\n          ...params\r\n        };\r\n        this.props.userAdmin.getUserList({\r\n          data: {\r\n            ...payload\r\n          },\r\n\r\n          callback: res => {\r\n            if (res.code === 0) {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log('getUserList error');\r\n      }\r\n    });\r\n  };\r\n  EnableShutdown = (record: any) => {\r\n    this.props.userAdmin.EnableShutdown({\r\n      data: {\r\n        id: record.id\r\n      },\r\n      callback: res => {\r\n        if (res.code === 200) {\r\n          message.success(res.msg || '操作成功');\r\n          this.getUserList();\r\n        } else {\r\n          message.error(res.msg || '操作失败');\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleTableChange = (\r\n    pagination: Partial<TableListPagination>,\r\n    filtersArg: Record<keyof TableListItem, string[]>,\r\n    sorter: SorterResult<TableListItem>\r\n  ) => {\r\n    const pager = {\r\n      ...this.state.pagination\r\n    };\r\n    pager.current = pagination.current || 1;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.getUserList({\r\n      size: pagination.pageSize,\r\n      current: pagination.current\r\n    });\r\n    window.scroll(0, 0);\r\n  };\r\n  handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.getUserList(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const info = this.props.userAdmin.userList;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    const CityList = this.props.global.cityList;\r\n    return (\r\n      <Card title=\"用户列表\" bordered={false} loading={this.state.loading}>\r\n        <div className=\"tableList\">\r\n          <BackTop className=\"ant-back-top-inner\" />\r\n          <Col span={24}>\r\n            <Table\r\n              columns={this.state.columns}\r\n              rowKey={'id' || 'key'}\r\n              dataSource={info.records}\r\n              pagination={{\r\n                ...this.state.pagination,\r\n                total: info.total,\r\n                current: info.current,\r\n                pageSize: info.size,\r\n                showQuickJumper: true\r\n                // hideOnSinglePage: true\r\n              }}\r\n              onChange={this.handleTableChange}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create<HotelProps>()(UserList);\r\n","import Login from '../modules/User/Login';\r\nimport PrivilegeManagement from '../modules/System/PrivilegeManagement';\r\nimport SupplierManagement from '../modules/System/SupplierManagement';\r\nimport ScenicSpot from '../modules/Resource/ScenicSpot';\r\nimport Hotel from '../modules/Resource/Hotel';\r\nimport Restaurant from '../modules/Resource/Restaurant';\r\nimport TripMode from '../modules/Resource/TripMode';\r\nimport Picture from '../modules/Resource/Picture';\r\nimport Video from '../modules/Resource/Video';\r\nimport BasicProducts from '../modules/Resource/BasicProducts';\r\nimport Tourism from '../modules/Tourism/Tourism';\r\nimport TagPage from '../modules/Admin/TagPage';\r\nimport AdvertisementPage from '../modules/Admin/AdvertisementPage';\r\nimport PictureStrategy from '../modules/PictureStrategy/PictureStrategy';\r\nimport VideoStrategy from '../modules/VideoStrategy/VideoStrategy';\r\nimport CommentPage from '../modules/Comment/CommentPage';\r\nimport CityStrategyPage from '../modules/CityStrategy/CityStrategy';\r\nimport AnswerPage from '../modules/Answer/AnswerPage';\r\nimport BroadcastPage from '../modules/Admin/BroadcastPage';\r\nimport Journey from '../modules/Journey/Journey';\r\nimport Order from '../modules/Order/Order';\r\nimport UserList from '../modules/UserList';\r\nconst routerData: any[] = [\r\n  {\r\n    path: '/user/login',\r\n    component: Login,\r\n    meta: {\r\n      title: '登录'\r\n    }\r\n  },\r\n  {\r\n    path: '/admin/client',\r\n    component: PrivilegeManagement,\r\n    meta: {\r\n      title: '菜单管理'\r\n    }\r\n  },\r\n  {\r\n    path: '/admin/supply',\r\n    component: SupplierManagement,\r\n    meta: {\r\n      title: '供应商管理'\r\n    }\r\n  },\r\n  {\r\n    path: '/resources/basescenery',\r\n    component: ScenicSpot,\r\n    meta: {\r\n      title: '景点'\r\n    }\r\n  },\r\n  {\r\n    path: '/resources/basehotel',\r\n    component: Hotel,\r\n    meta: {\r\n      title: '酒店'\r\n    }\r\n  },\r\n  {\r\n    path: '/resources/baserestaurant',\r\n    component: Restaurant,\r\n    meta: {\r\n      title: '餐厅'\r\n    }\r\n  },\r\n  {\r\n    path: '/resources/basetirp',\r\n    component: TripMode,\r\n    meta: {\r\n      title: '出行方式'\r\n    }\r\n  },\r\n  {\r\n    path: '/resources/baseimage',\r\n    component: Picture,\r\n    meta: {\r\n      title: '图片'\r\n    }\r\n  },\r\n  {\r\n    path: '/resources/basevideo',\r\n    component: Video,\r\n    meta: {\r\n      title: '视频'\r\n    }\r\n  },\r\n  {\r\n    path: '/resources/baseproduct',\r\n    component: BasicProducts,\r\n    meta: {\r\n      title: '基础产品'\r\n    }\r\n  },\r\n  {\r\n    path: '/bmtourproduct/tourism',\r\n    component: Tourism,\r\n    meta: {\r\n      title: '基础产品'\r\n    }\r\n  },\r\n  {\r\n    path: '/admin/bmtourtag',\r\n    component: TagPage,\r\n    meta: {\r\n      title: '出行标签管理'\r\n    }\r\n  },\r\n  {\r\n    path: '/admin/bmadvert',\r\n    component: AdvertisementPage,\r\n    meta: {\r\n      title: '广告管理'\r\n    }\r\n  },\r\n  {\r\n    path: '/strategy/picture',\r\n    component: PictureStrategy,\r\n    meta: {\r\n      title: '图集攻略'\r\n    }\r\n  },\r\n  {\r\n    path: '/strategy/video',\r\n    component: VideoStrategy,\r\n    meta: {\r\n      title: '视频攻略'\r\n    }\r\n  },\r\n\r\n  {\r\n    path: '/admin/bmcarousel',\r\n    component: BroadcastPage,\r\n    meta: {\r\n      title: '首页轮播管理'\r\n    }\r\n  },\r\n\r\n  {\r\n    path: '/usercompose/usercompose',\r\n    component: CommentPage,\r\n    meta: {\r\n      title: '评论管理'\r\n    }\r\n  },\r\n  {\r\n    path: '/strategy/city',\r\n    component: CityStrategyPage,\r\n    meta: {\r\n      title: '城市攻略'\r\n    }\r\n  },\r\n  {\r\n    path: '/useranswers/useranswers',\r\n    component: AnswerPage,\r\n    meta: {\r\n      title: '问答管理'\r\n    }\r\n  },\r\n  {\r\n    path: '/usertravels/usertravels',\r\n    component: Journey,\r\n    meta: {\r\n      title: '游记管理'\r\n    }\r\n  },\r\n  {\r\n    path: '/shoppingorder/shoppingorder',\r\n    component: Order,\r\n    meta: {\r\n      title: '订单管理'\r\n    }\r\n  },\r\n  {\r\n    path: '/userlist/userlist',\r\n    component: UserList,\r\n    meta: {\r\n      title: '用户列表'\r\n    }\r\n  }\r\n];\r\nexport function getRouterData(): any[] {\r\n  return routerData;\r\n}\r\nexport default getRouterData;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport BasicLayout from './BasicLayout';\r\nimport UserLayout from './UserLayout';\r\nimport Login from '../modules/User/Login';\r\n// import UserRegister from '../modules/User/UserRegister'\r\nimport { getRouterData } from '../common/router';\r\nimport User from '../models/User';\r\n\r\ninterface Props {\r\n  user: User;\r\n}\r\n\r\ninterface State {}\r\n\r\nconst routerData = getRouterData();\r\n\r\nexport default class Layout extends React.Component<Props, State> {\r\n  render() {\r\n    const userInfo = this.props.user.userInfo;\r\n    const isLogin = !!userInfo.username || !!localStorage.getItem('user_cloud');\r\n    return isLogin ? (\r\n      <BasicLayout {...this.props}>\r\n        {routerData\r\n          .filter(item => item.path !== '/user/login')\r\n          .map(item => (\r\n            <Route\r\n              key={item.path}\r\n              path={item.path}\r\n              component={item.component}\r\n            />\r\n          ))}\r\n        {/* <Route exact component={NoMatch} /> */}\r\n        <Redirect\r\n          //  to={{ pathname: '/menu/home' }}\r\n          to={{ pathname: '/resources/basehotel' }}\r\n        />\r\n      </BasicLayout>\r\n    ) : (\r\n      <UserLayout {...this.props}>\r\n        <Route path=\"/user/login\" component={Login} />\r\n        {/* {routerData.map(item => (\r\n            <Route key={item.path} path={item.path} component={item.component} />\r\n          ))} */}\r\n        {/* {routerData.filter(item => item.path !== '/user/login').map(item => (\r\n              <Route key={item.path} path={item.path} component={item.component} />\r\n            ))} */}\r\n        <Redirect\r\n          to={{\r\n            pathname: '/user/login'\r\n          }}\r\n        />\r\n      </UserLayout>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'mobx-react';\r\nimport DevTools from 'mobx-react-devtools';\r\nimport './App.css';\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport 'moment/locale/zh-cn';\r\nimport store from './models/index';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  Redirect,\r\n  withRouter\r\n} from 'react-router-dom';\r\nimport Layout from './layouts/Layout';\r\nimport getRouterData from './common/router';\r\nimport moment from 'moment';\r\nimport { ConfigProvider } from 'antd';\r\nmoment.locale('en');\r\nconst routerData = getRouterData();\r\n// 使用React.FC泛型类型\r\nconst App: React.FC = () => {\r\n  const userStr = localStorage.getItem('user_cloud');\r\n  if (userStr) {\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem('user_cloud') || '{}');\r\n      store.user.userInfo = user;\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <ConfigProvider locale={zhCN}>\r\n        <Provider {...store}>\r\n          <Router>\r\n            <Switch>\r\n              <Layout user={store.user} />\r\n            </Switch>\r\n          </Router>\r\n        </Provider>\r\n      </ConfigProvider>\r\n      {/* <DevTools /> */}\r\n      {/* mobx调试工具 */}\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { hot } from 'react-hot-loader';\r\nimport store from './models/index';\r\nimport './assets/common.less';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nhot(module)(<div />);\r\nReactDOM.render(<App />, document.getElementById('root')!);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n\r\nif (window.location.protocol === 'https:') {\r\n  serviceWorker.unregister();\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header___IFkxT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"logo___QK8Sl\",\"nav-link\":\"nav-link___2nzKy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-layout-container\":\"user-layout-container___34W3M\",\"user-layout-content\":\"user-layout-content___FmFpJ\",\"user-layout-top\":\"user-layout-top___sgP6q\",\"user-layout-header\":\"user-layout-header___WRvRq\",\"user-layout-logo\":\"user-layout-logo___NQBPw\",\"user-layout-title\":\"user-layout-title___MSzCR\",\"user-layout-desc\":\"user-layout-desc___1tO1M\"};"],"sourceRoot":""}